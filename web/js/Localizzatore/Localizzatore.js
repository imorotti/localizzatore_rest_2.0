const eventListenerOptionsSupported = () => {
  let supported = false;

  try {
    const opts = Object.defineProperty({}, 'passive', {
      get() {
        supported = true;
      }
    });

    window.addEventListener('test', null, opts);
    window.removeEventListener('test', null, opts);
  } catch (e) {}

  return supported;
}

const defaultOptions = {
  passive: false,
  capture: false
};
const supportedPassiveTypes = [
  'scroll', 'wheel',
  'touchstart', 'touchmove', 'touchenter', 'touchend', 'touchleave',
  'mouseout', 'mouseleave', 'mouseup', 'mousedown', 'mousemove', 'mouseenter', 'mousewheel', 'mouseover'
];
const getDefaultPassiveOption = (passive, eventName) => {
  if (passive !== undefined) return passive;

  return supportedPassiveTypes.indexOf(eventName) === -1 ? false : defaultOptions.passive;
};

const getWritableOptions = (options) => {
  const passiveDescriptor = Object.getOwnPropertyDescriptor(options, 'passive');

  return passiveDescriptor && passiveDescriptor.writable !== true && passiveDescriptor.set === undefined
    ? Object.assign({}, options)
    : options;
};

const overwriteAddEvent = (superMethod) => {
  EventTarget.prototype.addEventListener = function (type, listener, options) {
    const usesListenerOptions = typeof options === 'object' && options !== null;
    const useCapture          = usesListenerOptions ? options.capture : options;

    options         = usesListenerOptions ? getWritableOptions(options) : {};
    options.passive = getDefaultPassiveOption(options.passive, type);
    options.capture = useCapture === undefined ? defaultOptions.capture : useCapture;

    superMethod.call(this, type, listener, options);
  };

  EventTarget.prototype.addEventListener._original = superMethod;
};

const supportsPassive = eventListenerOptionsSupported();

if (supportsPassive) {
  const addEvent = EventTarget.prototype.addEventListener;
  overwriteAddEvent(addEvent);
}

/**
 */var Localizzatore = {
    VERSION_NUMBER: "1.5",
    APIKey: "",
    singleFile: true,
    _getScriptLocation: (function () {
        var r = new RegExp("(^|(.*?\\/))(Localizzatore\.js)(\\?|$)"), s = document.getElementsByTagName('script'), src, m, l = "";
        for (var i = 0, len = s.length; i < len; i++) {
            src = s[i].getAttribute('src');
            if (src) {
                var m = src.match(r);
                if (m) {
                    l = m[1];
                    break;
                }
            }
        }
        return(function () {
            return l;
        });
    })()
};
Localizzatore.Array = {
    contains: function (array, element) {
        for (var i = 0; i < array.length; i++) {
            if (array[i] == element)
                return true;
        }
        return false;
    }
};
Localizzatore.Class = GeoER.Class;
Localizzatore.inherit = GeoER.inherit;
Localizzatore.Control = Localizzatore.Class(GeoER.Control, {
    CLASS_NAME: "Localizzatore.Control"
});
Localizzatore.Control.Navigation = Localizzatore.Class(GeoER.Control.Navigation, {
    CLASS_NAME: "Localizzatore.Control.Navigation"
});
Localizzatore.Control.NavigationHistory = Localizzatore.Class(GeoER.Control.NavigationHistory, {
    CLASS_NAME: "Localizzatore.Control.NavigationHistory"
});
Localizzatore.Lang = Localizzatore.Class(GeoER.Lang, {
    CLASS_NAME: "Localizzatore.Lang"
});
/*Localizzatore.Lang={
 code:null,
 defaultCode:"en",
 getCode:function(){
 if(!GeoER.Lang.code){
 GeoER.Lang.setCode();
 }
 return GeoER.Lang.code;
 },
 setCode:function(code){
 var lang;if(!code){
 code=this.defaultCode;
 }
 var parts=code.split('-');parts[0]=parts[0].toLowerCase();if(typeof GeoER.Lang[parts[0]]=="object"){
 lang=parts[0];
 }
 if(parts[1]){
 var testLang=parts[0]+'-'+parts[1].toUpperCase();if(typeof GeoER.Lang[testLang]=="object"){
 lang=testLang;
 }
 }
 if(!lang){
 OpenLayers.Console.warn('Failed to find OpenLayers.Lang.'+parts.join("-")+' dictionary, falling back to default language');lang=GeoER.Lang.defaultCode;
 }
 GeoER.Lang.code=lang;
 },
 translate:function(key,context){
 var dictionary=GeoER.Lang[GeoER.Lang.getCode()];var message=dictionary&&dictionary[key];if(!message){
 message=key;
 }
 if(context){
 message=OpenLayers.String.format(message,context);
 }
 return message;
 }
 };*/
Localizzatore.i18n = Localizzatore.Lang.translate;
Localizzatore.Control.Localizzazione = Localizzatore.Class(Localizzatore.Control, {
    RER_PROVINCE: {
	'PIACENZA': {
		'municipality': [
			{'AGAZZANO':{'wkt':'POLYGON((535990.195506052 975266.904717068,535990.195506052 984497.225880517,543330.785102796 984497.225880517,543330.785102796 975266.904717068,535990.195506052 975266.904717068))'}},
			{'ALSENO':{'wkt':'POLYGON((570275.977978205 965412.388234135,570275.977978205 978356.377986755,580047.136063632 978356.377986755,580047.136063632 965412.388234135,570275.977978205 965412.388234135))'}},
			{'BESENZONE':{'wkt':'POLYGON((573323.740004355 976495.731156113,573323.740004355 983758.356629673,581400.941958414 983758.356629673,581400.941958414 976495.731156113,573323.740004355 976495.731156113))'}},
			{'BETTOLA':{'wkt':'POLYGON((539330.963196026 951933.067562697,539330.963196026 965367.251657912,554188.766917325 965367.251657912,554188.766917325 951933.067562697,539330.963196026 951933.067562697))'}},
			{'BOBBIO':{'wkt':'POLYGON((522492.175051233 952624.632383581,522492.175051233 967411.776863584,538102.469096365 967411.776863584,538102.469096365 952624.632383581,522492.175051233 952624.632383581))'}},
			{'BORGONOVO VAL TIDONE':{'wkt':'POLYGON((531673.950145365 977982.487709817,531673.950145365 988462.455619974,542190.717849792 988462.455619974,542190.717849792 977982.487709817,531673.950145365 977982.487709817))'}},
			{'CADEO':{'wkt':'POLYGON((563859.584648805 976087.427081957,563859.584648805 985341.535666541,571036.587676478 985341.535666541,571036.587676478 976087.427081957,563859.584648805 976087.427081957))'}},
			{'CALENDASCO':{'wkt':'POLYGON((542240.139903129 989587.47850486,542240.139903129 998211.581181505,553401.723776323 998211.581181505,553401.723776323 989587.47850486,542240.139903129 989587.47850486))'}},
			{'CAORSO':{'wkt':'POLYGON((562746.681580124 985672.637670849,562746.681580124 994250.947158867,571820.97709631 994250.947158867,571820.97709631 985672.637670849,562746.681580124 985672.637670849))'}},
			{'CARPANETO PIACENTINO':{'wkt':'POLYGON((557908.648535497 964623.401617831,557908.648535497 979169.76233124,567248.24197615 979169.76233124,567248.24197615 964623.401617831,557908.648535497 964623.401617831))'}},
			{'CASTELL\'ARQUATO':{'wkt':'POLYGON((564524.200046055 963630.109996011,564524.200046055 973420.874408855,573097.473505042 973420.874408855,573097.473505042 963630.109996011,564524.200046055 963630.109996011))'}},
			{'CASTEL SAN GIOVANNI':{'wkt':'POLYGON((529115.335808124 985280.906721006,529115.335808124 994505.786573507,538516.071294947 994505.786573507,538516.071294947 985280.906721006,529115.335808124 985280.906721006))'}},
			{'CASTELVETRO PIACENTINO':{'wkt':'POLYGON((574939.491268482 989497.659054218,574939.491268482 998536.55484776,581984.831174059 998536.55484776,581984.831174059 989497.659054218,574939.491268482 989497.659054218))'}},
			{'CERIGNALE':{'wkt':'POLYGON((523757.89890268 940640.561900329,523757.89890268 949135.94146762,532309.536197143 949135.94146762,532309.536197143 940640.561900329,523757.89890268 940640.561900329))'}},
			{'COLI':{'wkt':'POLYGON((531510.707810607 949092.821324405,531510.707810607 963602.658585821,540927.936942524 963602.658585821,540927.936942524 949092.821324405,531510.707810607 949092.821324405))'}},
			{'CORTE BRUGNATELLA':{'wkt':'POLYGON((523091.159565793 946713.292865976,523091.159565793 954629.976907699,535693.750375424 954629.976907699,535693.750375424 946713.292865976,523091.159565793 946713.292865976))'}},
			{'CORTEMAGGIORE':{'wkt':'POLYGON((565739.672421708 978979.800650878,565739.672421708 987186.393619824,578711.774767133 987186.393619824,578711.774767133 978979.800650878,565739.672421708 978979.800650878))'}},
			{'FARINI':{'wkt':'POLYGON((536624.502840953 942211.345642038,536624.502840953 956435.226340179,553637.990569525 956435.226340179,553637.990569525 942211.345642038,536624.502840953 942211.345642038))'}},
			{'FERRIERE':{'wkt':'POLYGON((530609.570344806 933902.069256589,530609.570344806 949927.719269495,548096.731750766 949927.719269495,548096.731750766 933902.069256589,530609.570344806 933902.069256589))'}},
			{'FIORENZUOLA D\'ARDA':{'wkt':'POLYGON((566650.472764318 971594.171741526,566650.472764318 981778.199370191,577084.850975433 981778.199370191,577084.850975433 971594.171741526,566650.472764318 971594.171741526))'}},
			{'GAZZOLA':{'wkt':'POLYGON((539050.952296089 970252.798984211,539050.952296089 981982.531281774,547289.463864515 981982.531281774,547289.463864515 970252.798984211,539050.952296089 970252.798984211))'}},
			{'GOSSOLENGO':{'wkt':'POLYGON((546560.598838801 978364.477205157,546560.598838801 986686.162946275,553281.003930764 986686.162946275,553281.003930764 978364.477205157,546560.598838801 978364.477205157))'}},
			{'GRAGNANO TREBBIENSE':{'wkt':'POLYGON((540259.932975345 980946.117485902,540259.932975345 988110.925778215,548560.385891836 988110.925778215,548560.385891836 980946.117485902,540259.932975345 980946.117485902))'}},
			{'GROPPARELLO':{'wkt':'POLYGON((551580.334727226 954466.346417297,551580.334727226 969541.221186554,561006.113842857 969541.221186554,561006.113842857 954466.346417297,551580.334727226 954466.346417297))'}},
			{'LUGAGNANO VAL D\'ARDA':{'wkt':'POLYGON((555244.224185382 957104.211662144,555244.224185382 968810.478875182,567150.00383896 968810.478875182,567150.00383896 957104.211662144,555244.224185382 957104.211662144))'}},
			{'MONTICELLI D\'ONGINA':{'wkt':'POLYGON((568898.615593205 987800.273430527,568898.615593205 999008.366766997,578062.991063023 999008.366766997,578062.991063023 987800.273430527,568898.615593205 987800.273430527))'}},
			{'MORFASSO':{'wkt':'POLYGON((551787.405955783 946872.690559179,551787.405955783 959752.318805082,563230.249222854 959752.318805082,563230.249222854 946872.690559179,551787.405955783 946872.690559179))'}},
			{'OTTONE':{'wkt':'POLYGON((515811.632565651 936197.636407104,515811.632565651 946885.111622431,532279.609427028 946885.111622431,532279.609427028 936197.636407104,515811.632565651 936197.636407104))'}},
			{'PIACENZA':{'wkt':'POLYGON((547344.835897495 982558.542109823,547344.835897495 996027.547127757,564966.568052299 996027.547127757,564966.568052299 982558.542109823,547344.835897495 982558.542109823))'}},
			{'PIANELLO VAL TIDONE':{'wkt':'POLYGON((528192.442746785 969825.327134317,528192.442746785 980734.048889987,536325.782720104 980734.048889987,536325.782720104 969825.327134317,528192.442746785 969825.327134317))'}},
			{'PIOZZANO':{'wkt':'POLYGON((532567.29455809 967369.029067754,532567.29455809 978912.635157041,540474.477560628 978912.635157041,540474.477560628 967369.029067754,532567.29455809 967369.029067754))'}},
			{'PODENZANO':{'wkt':'POLYGON((551090.738234996 975391.880092853,551090.738234996 984153.791534948,560033.905356931 984153.791534948,560033.905356931 975391.880092853,551090.738234996 975391.880092853))'}},
			{'PONTE DELL\'OLIO':{'wkt':'POLYGON((548312.670888766 963316.400357276,548312.670888766 973109.723511527,556890.720601699 973109.723511527,556890.720601699 963316.400357276,548312.670888766 963316.400357276))'}},
			{'PONTENURE':{'wkt':'POLYGON((559524.258455457 976715.630340938,559524.258455457 987361.711476455,566354.708469172 987361.711476455,566354.708469172 976715.630340938,559524.258455457 976715.630340938))'}},
			{'RIVERGARO':{'wkt':'POLYGON((544178.674768055 967264.541794972,544178.674768055 980092.667645254,552071.192660877 980092.667645254,552071.192660877 967264.541794972,544178.674768055 967264.541794972))'}},
			{'ROTTOFRENO':{'wkt':'POLYGON((541634.521767425 986236.568685842,541634.521767425 997107.143707958,549952.097132165 997107.143707958,549952.097132165 986236.568685842,541634.521767425 986236.568685842))'}},
			{'SAN GIORGIO PIACENTINO':{'wkt':'POLYGON((554510.089835424 968759.539966616,554510.089835424 981027.944068211,562470.134459615 981027.944068211,562470.134459615 968759.539966616,554510.089835424 968759.539966616))'}},
			{'SAN PIETRO IN CERRO':{'wkt':'POLYGON((569523.252137177 984082.507195015,569523.252137177 990602.238651017,577698.755228153 990602.238651017,577698.755228153 984082.507195015,569523.252137177 984082.507195015))'}},
			{'SARMATO':{'wkt':'POLYGON((536272.6777567 986810.565761034,536272.6777567 994698.962496431,542156.544757126 994698.962496431,542156.544757126 986810.565761034,536272.6777567 986810.565761034))'}},
			{'TRAVO':{'wkt':'POLYGON((535607.501311194 960586.081645725,535607.501311194 974604.809175859,547018.867183577 974604.809175859,547018.867183577 960586.081645725,535607.501311194 960586.081645725))'}},
			{'VERNASCA':{'wkt':'POLYGON((560181.987551966 951184.083782822,560181.987551966 967836.873245617,575116.817900917 967836.873245617,575116.817900917 951184.083782822,560181.987551966 951184.083782822))'}},
			{'VIGOLZONE':{'wkt':'POLYGON((544957.40243239 964594.900519587,544957.40243239 977596.291542253,556472.325616878 977596.291542253,556472.325616878 964594.900519587,544957.40243239 964594.900519587))'}},
			{'VILLANOVA SULL\'ARDA':{'wkt':'POLYGON((576223.063974445 981875.836016337,576223.063974445 990774.003083157,585350.160757181 990774.003083157,585350.160757181 981875.836016337,576223.063974445 981875.836016337))'}},
			{'ZERBA':{'wkt':'POLYGON((515786.821256326 943649.234396331,515786.821256326 951422.847638965,524538.915970914 951422.847638965,524538.915970914 943649.234396331,515786.821256326 943649.234396331))'}},
			{'ZIANO PIACENTINO':{'wkt':'POLYGON((526476.951786732 978192.578567263,526476.951786732 986237.170469734,533645.096018897 986237.170469734,533645.096018897 978192.578567263,526476.951786732 978192.578567263))'}}
		]
	},
	'PARMA': {
		'municipality': [
			{'ALTA VAL TIDONE':{'wkt':'POLYGON((521966.003471115 963505.547371273,521966.003471115 980155.500453218,535607.501311194 980155.500453218,535607.501311194 963505.547371273,521966.003471115 963505.547371273))'}},
			{'ALBARETO':{'wkt':'POLYGON((549511.599339136 912537.29438051,549511.599339136 929327.644551178,560814.17960042 929327.644551178,560814.17960042 912537.29438051,549511.599339136 912537.29438051))'}},
			{'BARDI':{'wkt':'POLYGON((543753.030563788 932819.685595457,543753.030563788 948638.321633896,566161.391906948 948638.321633896,566161.391906948 932819.685595457,543753.030563788 932819.685595457))'}},
			{'BEDONIA':{'wkt':'POLYGON((539035.109160762 921151.477470696,539035.109160762 940281.975673752,553286.239179538 940281.975673752,553286.239179538 921151.477470696,539035.109160762 921151.477470696))'}},
			{'BERCETO':{'wkt':'POLYGON((570478.223558713 923989.481191223,570478.223558713 939854.74545816,585226.339350206 939854.74545816,585226.339350206 923989.481191223,570478.223558713 923989.481191223))'}},
			{'BORE':{'wkt':'POLYGON((560323.609994501 947395.882302629,560323.609994501 957206.306687796,570082.776441302 957206.306687796,570082.776441302 947395.882302629,560323.609994501 947395.882302629))'}},
			{'BORGO VAL DI TARO':{'wkt':'POLYGON((555506.129980112 917572.655815437,555506.129980112 935271.932754201,572434.829575497 935271.932754201,572434.829575497 917572.655815437,555506.129980112 917572.655815437))'}},
			{'BUSSETO':{'wkt':'POLYGON((577982.708018599 971198.304951904,577982.708018599 984954.912487341,590426.18087773 984954.912487341,590426.18087773 971198.304951904,577982.708018599 971198.304951904))'}},
			{'CALESTANO':{'wkt':'POLYGON((583045.623447091 932734.926850963,583045.623447091 944336.713166599,596183.243203259 944336.713166599,596183.243203259 932734.926850963,583045.623447091 932734.926850963))'}},
			{'COLLECCHIO':{'wkt':'POLYGON((588882.796717129 949354.958927408,588882.796717129 962241.568919146,601919.636341783 962241.568919146,601919.636341783 949354.958927408,588882.796717129 949354.958927408))'}},
			{'COLORNO':{'wkt':'POLYGON((604301.060429277 972814.427811091,604301.060429277 982199.185992439,612866.89163743 982199.185992439,612866.89163743 972814.427811091,604301.060429277 972814.427811091))'}},
			{'COMPIANO':{'wkt':'POLYGON((550995.648627868 925025.29749277,550995.648627868 937787.630906312,556176.161856994 937787.630906312,556176.161856994 925025.29749277,550995.648627868 925025.29749277))'}},
			{'CORNIGLIO':{'wkt':'POLYGON((577146.518079928 914020.865340067,577146.518079928 936275.659775339,594763.210328254 936275.659775339,594763.210328254 914020.865340067,577146.518079928 914020.865340067))'}},
			{'FELINO':{'wkt':'POLYGON((593536.608782459 943487.856930481,593536.608782459 953222.516963497,602919.907290187 953222.516963497,602919.907290187 943487.856930481,593536.608782459 943487.856930481))'}},
			{'FIDENZA':{'wkt':'POLYGON((577797.881037483 958302.538925765,577797.881037483 976889.710684104,587679.490571545 976889.710684104,587679.490571545 958302.538925765,577797.881037483 958302.538925765))'}},
			{'FONTANELLATO':{'wkt':'POLYGON((587035.569713184 965886.077627149,587035.569713184 975204.353859449,598536.508996214 975204.353859449,598536.508996214 965886.077627149,587035.569713184 965886.077627149))'}},
			{'FONTEVIVO':{'wkt':'POLYGON((591635.904138296 964171.084575722,591635.904138296 969534.701518892,598545.600839017 969534.701518892,598545.600839017 964171.084575722,591635.904138296 964171.084575722))'}},
			{'FORNOVO DI TARO':{'wkt':'POLYGON((580997.301107279 941596.328740812,580997.301107279 951974.332627338,594107.714063287 951974.332627338,594107.714063287 941596.328740812,580997.301107279 941596.328740812))'}},
			{'LANGHIRANO':{'wkt':'POLYGON((592735.734572095 934351.633219966,592735.734572095 949670.280061235,603834.845302252 949670.280061235,603834.845302252 934351.633219966,592735.734572095 934351.633219966))'}},
			{'LESIGNANO DE\' BAGNI':{'wkt':'POLYGON((598452.534979854 935648.18134453,598452.534979854 947481.766935207,606752.696791064 947481.766935207,606752.696791064 935648.18134453,598452.534979854 935648.18134453))'}},
			{'MEDESANO':{'wkt':'POLYGON((577859.460654887 949425.67468241,577859.460654887 959636.225676328,593631.482412757 959636.225676328,593631.482412757 949425.67468241,577859.460654887 949425.67468241))'}},
			{'MONCHIO DELLE CORTI':{'wkt':'POLYGON((584016.91525197 911087.92129334,584016.91525197 923081.603213591,593804.399245508 923081.603213591,593804.399245508 911087.92129334,584016.91525197 911087.92129334))'}},
			{'MONTECHIARUGOLO':{'wkt':'POLYGON((605578.450343712 947014.362942327,605578.450343712 956204.565663317,614726.631058672 956204.565663317,614726.631058672 947014.362942327,605578.450343712 947014.362942327))'}},
			{'NEVIANO DEGLI ARDUINI':{'wkt':'POLYGON((597766.14766423 925126.06196732,597766.14766423 940024.346367948,611508.90502161 940024.346367948,611508.90502161 925126.06196732,597766.14766423 925126.06196732))'}},
			{'NOCETO':{'wkt':'POLYGON((582255.939806445 956738.679104655,582255.939806445 967588.102394081,596886.639220549 967588.102394081,596886.639220549 956738.679104655,582255.939806445 956738.679104655))'}},
			{'PALANZANO':{'wkt':'POLYGON((590026.320878564 915009.947943217,590026.320878564 927490.945715941,603750.031884929 927490.945715941,603750.031884929 915009.947943217,590026.320878564 915009.947943217))'}},
			{'PARMA':{'wkt':'POLYGON((596150.959880371 946472.682926185,596150.959880371 972941.988440897,614224.681530226 972941.988440897,614224.681530226 946472.682926185,596150.959880371 946472.682926185))'}},
			{'PELLEGRINO PARMENSE':{'wkt':'POLYGON((565939.805385084 950131.684495902,565939.805385084 962139.77612752,578328.730170776 962139.77612752,578328.730170776 950131.684495902,565939.805385084 950131.684495902))'}},
			{'ROCCABIANCA':{'wkt':'POLYGON((592189.600125822 979599.679735928,592189.600125822 987570.042631922,599874.267949428 987570.042631922,599874.267949428 979599.679735928,592189.600125822 979599.679735928))'}},
			{'SALA BAGANZA':{'wkt':'POLYGON((592347.216726537 943814.801274019,592347.216726537 954553.131636223,598623.827826541 954553.131636223,598623.827826541 943814.801274019,592347.216726537 943814.801274019))'}},
			{'SALSOMAGGIORE TERME':{'wkt':'POLYGON((571256.220690552 955869.851733697,571256.220690552 967500.854878704,583291.404406282 967500.854878704,583291.404406282 955869.851733697,571256.220690552 955869.851733697))'}},
			{'SAN SECONDO PARMENSE':{'wkt':'POLYGON((591181.150558982 971614.238452304,591181.150558982 980735.987207664,599478.917746262 980735.987207664,599478.917746262 971614.238452304,591181.150558982 971614.238452304))'}},
			{'SOLIGNANO':{'wkt':'POLYGON((570453.945088274 937631.137621151,570453.945088274 949344.224757629,586474.097237711 949344.224757629,586474.097237711 937631.137621151,570453.945088274 937631.137621151))'}},
			{'SORAGNA':{'wkt':'POLYGON((584853.459004515 970860.681515426,584853.459004515 982156.72524694,595021.176555432 982156.72524694,595021.176555432 970860.681515426,584853.459004515 970860.681515426))'}},
			{'TERENZO':{'wkt':'POLYGON((577704.841313384 935049.313647756,577704.841313384 945260.488185589,593166.664361336 945260.488185589,593166.664361336 935049.313647756,577704.841313384 935049.313647756))'}},
			{'TIZZANO VAL PARMA':{'wkt':'POLYGON((589467.134849338 924144.69428433,589467.134849338 935432.607498727,601596.538944401 935432.607498727,601596.538944401 924144.69428433,589467.134849338 924144.69428433))'}},
			{'TORNOLO':{'wkt':'POLYGON((534974.173403706 917773.160467083,534974.173403706 926904.030282106,552673.044525798 926904.030282106,552673.044525798 917773.160467083,534974.173403706 917773.160467083))'}},
			{'TORRILE':{'wkt':'POLYGON((601921.020449033 969620.052065827,601921.020449033 978191.443396136,611494.012752985 978191.443396136,611494.012752985 969620.052065827,601921.020449033 969620.052065827))'}},
			{'TRAVERSETOLO':{'wkt':'POLYGON((604774.48272106 938038.595400618,604774.48272106 948978.360987274,612452.453325971 948978.360987274,612452.453325971 938038.595400618,604774.48272106 938038.595400618))'}},
			{'VALMOZZOLA':{'wkt':'POLYGON((563597.507709019 931177.929329715,563597.507709019 941886.057780783,575295.579191572 941886.057780783,575295.579191572 931177.929329715,563597.507709019 931177.929329715))'}},
			{'VARANO DE\' MELEGARI':{'wkt':'POLYGON((569435.745008856 945574.033107849,569435.745008856 953332.022724169,586512.111606608 953332.022724169,586512.111606608 945574.033107849,569435.745008856 945574.033107849))'}},
			{'VARSI':{'wkt':'POLYGON((558556.685730836 938898.911126446,558556.685730836 949366.702666936,574253.716587016 949366.702666936,574253.716587016 938898.911126446,558556.685730836 938898.911126446))'}},
			{'SISSA TRECASALI':{'wkt':'POLYGON((597048.421205796 970085.684661249,597048.421205796 984370.458302096,607039.973499189 984370.458302096,607039.973499189 970085.684661249,597048.421205796 970085.684661249))'}},
			{'POLESINE ZIBELLO':{'wkt':'POLYGON((581917.865330919 981721.904793572,581917.865330919 988727.354507046,593186.169304331 988727.354507046,593186.169304331 981721.904793572,581917.865330919 981721.904793572))'}},
			{'SORBOLO MEZZANI':{'wkt':'POLYGON((609476.488683016 964085.951411995,609476.488683016 979760.52070869,618613.018292248 979760.52070869,618613.018292248 964085.951411995,609476.488683016 964085.951411995))'}}
		]
	},
	'REGGIO NELL\'EMILIA': {
		'municipality': [
			{'ALBINEA':{'wkt':'POLYGON((624147.126163724 936601.821020905,624147.126163724 945122.009169782,631959.580127929 945122.009169782,631959.580127929 936601.821020905,624147.126163724 936601.821020905))'}},
			{'BAGNOLO IN PIANO':{'wkt':'POLYGON((630547.538407502 956711.202713626,630547.538407502 964445.497297929,637176.809814977 964445.497297929,637176.809814977 956711.202713626,630547.538407502 956711.202713626))'}},
			{'BAISO':{'wkt':'POLYGON((624603.193227361 918389.177691967,624603.193227361 934011.169258189,632883.554199504 934011.169258189,632883.554199504 918389.177691967,624603.193227361 918389.177691967))'}},
			{'BIBBIANO':{'wkt':'POLYGON((613909.62600364 943729.176268236,613909.62600364 954090.382582139,620630.856507588 954090.382582139,620630.856507588 943729.176268236,613909.62600364 943729.176268236))'}},
			{'BORETTO':{'wkt':'POLYGON((620539.434618059 970683.989909244,620539.434618059 975180.317334504,626191.587371753 975180.317334504,626191.587371753 970683.989909244,620539.434618059 970683.989909244))'}},
			{'BRESCELLO':{'wkt':'POLYGON((614782.857242481 965559.035795752,614782.857242481 975563.02529824,621368.559408811 975563.02529824,621368.559408811 965559.035795752,614782.857242481 965559.035795752))'}},
			{'CADELBOSCO DI SOPRA':{'wkt':'POLYGON((623176.214177201 956192.018521755,623176.214177201 968961.567555049,631449.443357118 968961.567555049,631449.443357118 956192.018521755,623176.214177201 956192.018521755))'}},
			{'CAMPAGNOLA EMILIA':{'wkt':'POLYGON((636105.570672072 963131.314235165,636105.570672072 973578.14649932,642148.627626097 973578.14649932,642148.627626097 963131.314235165,636105.570672072 963131.314235165))'}},
			{'CAMPEGINE':{'wkt':'POLYGON((617409.684738074 957236.370699386,617409.684738074 962076.769893079,624778.248028703 962076.769893079,624778.248028703 957236.370699386,617409.684738074 957236.370699386))'}},
			{'CARPINETI':{'wkt':'POLYGON((615972.16308496 918009.794158884,615972.16308496 929097.814035286,627788.397448585 929097.814035286,627788.397448585 918009.794158884,615972.16308496 918009.794158884))'}},
			{'CASALGRANDE':{'wkt':'POLYGON((635447.397919189 933627.046007804,635447.397919189 944442.473036204,641858.069030314 944442.473036204,641858.069030314 933627.046007804,635447.397919189 933627.046007804))'}},
			{'CASINA':{'wkt':'POLYGON((612447.288862364 926914.466381566,612447.288862364 936899.871703775,624512.479680048 936899.871703775,624512.479680048 926914.466381566,612447.288862364 926914.466381566))'}},
			{'CASTELLARANO':{'wkt':'POLYGON((631551.334978007 925426.344620603,631551.334978007 936859.173387978,640296.229304423 936859.173387978,640296.229304423 925426.344620603,631551.334978007 925426.344620603))'}},
			{'CASTELNOVO DI SOTTO':{'wkt':'POLYGON((621029.130343293 961011.051682716,621029.130343293 970191.623350578,628766.072077643 970191.623350578,628766.072077643 961011.051682716,621029.130343293 961011.051682716))'}},
			{'CASTELNOVO NE\' MONTI':{'wkt':'POLYGON((605772.487234342 915651.530242732,605772.487234342 931706.047944938,618237.135077658 931706.047944938,618237.135077658 915651.530242732,605772.487234342 915651.530242732))'}},
			{'CAVRIAGO':{'wkt':'POLYGON((618645.608264949 948059.372524786,618645.608264949 953770.335424064,624007.317453701 953770.335424064,624007.317453701 948059.372524786,618645.608264949 948059.372524786))'}},
			{'CANOSSA':{'wkt':'POLYGON((607440.50876238 928376.806893546,607440.50876238 941440.594364545,617460.812096288 941440.594364545,617460.812096288 928376.806893546,607440.50876238 928376.806893546))'}},
			{'CORREGGIO':{'wkt':'POLYGON((634776.560004285 950757.370606741,634776.560004285 964257.591607109,645773.066422587 964257.591607109,645773.066422587 950757.370606741,634776.560004285 950757.370606741))'}},
			{'FABBRICO':{'wkt':'POLYGON((640106.403150675 968101.990953946,640106.403150675 974017.456348737,646441.019058251 974017.456348737,646441.019058251 968101.990953946,640106.403150675 968101.990953946))'}},
			{'GATTATICO':{'wkt':'POLYGON((612589.654992683 956078.499149649,612589.654992683 965941.732664169,621723.794340048 965941.732664169,621723.794340048 956078.499149649,612589.654992683 956078.499149649))'}},
			{'GUALTIERI':{'wkt':'POLYGON((624757.675649444 966274.839056436,624757.675649444 975919.720583986,630280.846003833 975919.720583986,630280.846003833 966274.839056436,624757.675649444 966274.839056436))'}},
			{'GUASTALLA':{'wkt':'POLYGON((628626.183201262 968035.474225128,628626.183201262 978711.691161454,638391.727090887 978711.691161454,638391.727090887 968035.474225128,628626.183201262 968035.474225128))'}},
			{'LUZZARA':{'wkt':'POLYGON((630155.101291766 975976.25556554,630155.101291766 983723.232908225,639778.136131766 983723.232908225,639778.136131766 975976.25556554,630155.101291766 975976.25556554))'}},
			{'MONTECCHIO EMILIA':{'wkt':'POLYGON((612508.898146527 947943.926415125,612508.898146527 955640.398475549,619098.971002707 955640.398475549,619098.971002707 947943.926415125,612508.898146527 947943.926415125))'}},
			{'NOVELLARA':{'wkt':'POLYGON((630691.751291023 961533.056480363,630691.751291023 973231.70086492,640510.975612298 973231.70086492,640510.975612298 961533.056480363,630691.751291023 961533.056480363))'}},
			{'POVIGLIO':{'wkt':'POLYGON((615929.605927184 963952.410650899,615929.605927184 971194.015617783,625282.762395007 971194.015617783,625282.762395007 963952.410650899,615929.605927184 963952.410650899))'}},
			{'QUATTRO CASTELLA':{'wkt':'POLYGON((615302.180491964 938930.993210085,615302.180491964 946113.135836163,625997.736924983 946113.135836163,625997.736924983 938930.993210085,615302.180491964 938930.993210085))'}},
			{'REGGIOLO':{'wkt':'POLYGON((636199.138000069 971520.01973848,636199.138000069 978463.480601497,648238.436856274 978463.480601497,648238.436856274 971520.01973848,636199.138000069 971520.01973848))'}},
			{'REGGIO NELL\'EMILIA':{'wkt':'POLYGON((618158.532764527 942828.400808561,618158.532764527 959364.157674942,640717.596569347 959364.157674942,640717.596569347 942828.400808561,618158.532764527 942828.400808561))'}},
			{'RIO SALICETO':{'wkt':'POLYGON((639376.729694371 962009.955280298,639376.729694371 969465.338335537,645996.456585841 969465.338335537,645996.456585841 962009.955280298,639376.729694371 962009.955280298))'}},
			{'ROLO':{'wkt':'POLYGON((645443.612519076 969842.572146503,645443.612519076 976231.967480975,649906.74160153 976231.967480975,649906.74160153 969842.572146503,645443.612519076 969842.572146503))'}},
			{'RUBIERA':{'wkt':'POLYGON((639282.543419923 943473.890689499,639282.543419923 952007.069285675,644412.772626193 952007.069285675,644412.772626193 943473.890689499,639282.543419923 943473.890689499))'}},
			{'SAN MARTINO IN RIO':{'wkt':'POLYGON((637990.982960225 949198.364709384,637990.982960225 956374.308989527,644313.799402038 956374.308989527,644313.799402038 949198.364709384,637990.982960225 949198.364709384))'}},
			{'SAN POLO D\'ENZA':{'wkt':'POLYGON((611352.239404688 936931.961230655,611352.239404688 948132.343715358,618108.485560979 948132.343715358,618108.485560979 936931.961230655,611352.239404688 936931.961230655))'}},
			{'SANT\'ILARIO D\'ENZA':{'wkt':'POLYGON((612888.028399518 954170.70627735,612888.028399518 959087.2845952,620127.135027917 959087.2845952,620127.135027917 954170.70627735,612888.028399518 954170.70627735))'}},
			{'SCANDIANO':{'wkt':'POLYGON((629871.926117738 933221.234357266,629871.926117738 945367.87386385,639518.053575164 945367.87386385,639518.053575164 933221.234357266,629871.926117738 933221.234357266))'}},
			{'TOANO':{'wkt':'POLYGON((617236.26124836 911230.841813912,617236.26124836 919942.863912699,629461.651541596 919942.863912699,629461.651541596 911230.841813912,617236.26124836 911230.841813912))'}},
			{'VETTO':{'wkt':'POLYGON((602437.127697156 920439.182522221,602437.127697156 931732.993738157,613101.631146543 931732.993738157,613101.631146543 920439.182522221,602437.127697156 920439.182522221))'}},
			{'VEZZANO SUL CROSTOLO':{'wkt':'POLYGON((616841.9016735 932691.54028366,616841.9016735 941403.378121614,624814.339196799 941403.378121614,624814.339196799 932691.54028366,616841.9016735 932691.54028366))'}},
			{'VIANO':{'wkt':'POLYGON((622259.65553162 928801.162712017,622259.65553162 939056.495403996,632677.486740957 939056.495403996,632677.486740957 928801.162712017,622259.65553162 928801.162712017))'}},
			{'VILLA MINOZZO':{'wkt':'POLYGON((606558.253724561 898118.211176297,606558.253724561 918205.367566363,621823.392984889 918205.367566363,621823.392984889 898118.211176297,606558.253724561 898118.211176297))'}},
			{'VENTASSO':{'wkt':'POLYGON((591127.779332638 900722.241286936,591127.779332638 923962.790109145,613435.296578229 923962.790109145,613435.296578229 900722.241286936,591127.779332638 900722.241286936))'}}
		]
	},
	'MODENA': {
		'municipality': [
			{'BASTIGLIA':{'wkt':'POLYGON((655776.602149202 951837.085664882,655776.602149202 955856.834733932,660383.145866001 955856.834733932,660383.145866001 951837.085664882,655776.602149202 951837.085664882))'}},
			{'BOMPORTO':{'wkt':'POLYGON((657216.892272952 950095.171766145,657216.892272952 963819.78710661,667525.296892992 963819.78710661,667525.296892992 950095.171766145,657216.892272952 950095.171766145))'}},
			{'CAMPOGALLIANO':{'wkt':'POLYGON((643200.46894002 946706.905312798,643200.46894002 956504.738294409,649438.381515998 956504.738294409,649438.381515998 946706.905312798,643200.46894002 946706.905312798))'}},
			{'CAMPOSANTO':{'wkt':'POLYGON((665107.29681014 959893.305233154,665107.29681014 966232.780805169,675775.523668831 966232.780805169,675775.523668831 959893.305233154,665107.29681014 959893.305233154))'}},
			{'CARPI':{'wkt':'POLYGON((643611.307485243 953039.532960286,643611.307485243 972780.428174179,658870.194695547 972780.428174179,658870.194695547 953039.532960286,643611.307485243 953039.532960286))'}},
			{'CASTELFRANCO EMILIA':{'wkt':'POLYGON((657221.832103522 932164.520190584,657221.832103522 947550.482093858,670969.452712796 947550.482093858,670969.452712796 932164.520190584,657221.832103522 932164.520190584))'}},
			{'CASTELNUOVO RANGONE':{'wkt':'POLYGON((649285.681534379 933153.318524069,649285.681534379 939286.044362681,656848.944705017 939286.044362681,656848.944705017 933153.318524069,649285.681534379 933153.318524069))'}},
			{'CASTELVETRO DI MODENA':{'wkt':'POLYGON((649347.091969334 924297.729214495,649347.091969334 934242.819239573,658285.591501775 934242.819239573,658285.591501775 924297.729214495,649347.091969334 924297.729214495))'}},
			{'CAVEZZO':{'wkt':'POLYGON((654623.911395333 963993.442111231,654623.911395333 970899.497131369,661859.29417706 970899.497131369,661859.29417706 963993.442111231,654623.911395333 963993.442111231))'}},
			{'CONCORDIA SULLA SECCHIA':{'wkt':'POLYGON((653617.013189104 971615.208659404,653617.013189104 980114.997715043,662914.191219099 980114.997715043,662914.191219099 971615.208659404,653617.013189104 971615.208659404))'}},
			{'FANANO':{'wkt':'POLYGON((636021.059034897 886491.456124805,636021.059034897 901543.524178722,648690.886218735 901543.524178722,648690.886218735 886491.456124805,636021.059034897 886491.456124805))'}},
			{'FINALE EMILIA':{'wkt':'POLYGON((671910.180811827 962648.867816057,671910.180811827 975090.248630468,687305.001598304 975090.248630468,687305.001598304 962648.867816057,671910.180811827 962648.867816057))'}},
			{'FIORANO MODENESE':{'wkt':'POLYGON((642245.754419939 928208.761322907,642245.754419939 936817.324746969,648300.19895932 936817.324746969,648300.19895932 928208.761322907,642245.754419939 928208.761322907))'}},
			{'FIUMALBO':{'wkt':'POLYGON((628098.775116841 886465.071703197,628098.775116841 895877.198954438,636994.804984384 895877.198954438,636994.804984384 886465.071703197,628098.775116841 886465.071703197))'}},
			{'FORMIGINE':{'wkt':'POLYGON((641600.393370571 933578.62168372,641600.393370571 943451.452929554,652739.889277546 943451.452929554,652739.889277546 933578.62168372,641600.393370571 933578.62168372))'}},
			{'FRASSINORO':{'wkt':'POLYGON((617519.257322638 893916.2946279,617519.257322638 911595.73997016,628036.982740204 911595.73997016,628036.982740204 893916.2946279,617519.257322638 893916.2946279))'}},
			{'GUIGLIA':{'wkt':'POLYGON((652464.672193638 912946.952273391,652464.672193638 923234.872381173,659741.393694423 923234.872381173,659741.393694423 912946.952273391,652464.672193638 912946.952273391))'}},
			{'LAMA MOCOGNO':{'wkt':'POLYGON((630603.10503031 900543.469747526,630603.10503031 914187.803192768,642220.534922032 914187.803192768,642220.534922032 900543.469747526,630603.10503031 900543.469747526))'}},
			{'MARANELLO':{'wkt':'POLYGON((644812.059148529 924758.829694935,644812.059148529 934575.580355501,652161.821288468 934575.580355501,652161.821288468 924758.829694935,644812.059148529 924758.829694935))'}},
			{'MARANO SUL PANARO':{'wkt':'POLYGON((648140.581402497 916596.630011947,648140.581402497 927444.594772016,658323.809860681 927444.594772016,658323.809860681 916596.630011947,648140.581402497 916596.630011947))'}},
			{'MEDOLLA':{'wkt':'POLYGON((660727.692087442 963819.78710661,660727.692087442 971330.393755129,667167.528217202 971330.393755129,667167.528217202 963819.78710661,660727.692087442 963819.78710661))'}},
			{'MIRANDOLA':{'wkt':'POLYGON((657795.176636528 967794.87264507,657795.176636528 981125.450369135,678452.470846778 981125.450369135,678452.470846778 967794.87264507,657795.176636528 967794.87264507))'}},
			{'MODENA':{'wkt':'POLYGON((641441.811386968 936410.392950771,641441.811386968 954477.923449758,659721.515329907 954477.923449758,659721.515329907 936410.392950771,641441.811386968 936410.392950771))'}},
			{'MONTECRETO':{'wkt':'POLYGON((634382.758633939 895517.866336247,634382.758633939 906860.565297811,643047.916050584 906860.565297811,643047.916050584 895517.866336247,634382.758633939 895517.866336247))'}},
			{'MONTEFIORINO':{'wkt':'POLYGON((621740.34923669 906148.03090483,621740.34923669 915765.742391041,631528.853034965 915765.742391041,631528.853034965 906148.03090483,621740.34923669 906148.03090483))'}},
			{'MONTESE':{'wkt':'POLYGON((648307.557536314 896657.176919892,648307.557536314 910185.496916604,660118.555042224 910185.496916604,660118.555042224 896657.176919892,648307.557536314 896657.176919892))'}},
			{'NONANTOLA':{'wkt':'POLYGON((657871.458688072 945467.352744559,657871.458688072 955003.009043718,667779.650583863 955003.009043718,667779.650583863 945467.352744559,657871.458688072 945467.352744559))'}},
			{'NOVI DI MODENA':{'wkt':'POLYGON((648225.402764287 962602.590265932,648225.402764287 976982.726287487,655853.315678768 976982.726287487,655853.315678768 962602.590265932,648225.402764287 962602.590265932))'}},
			{'PALAGANO':{'wkt':'POLYGON((626472.110103105 900377.719743351,626472.110103105 918656.134908916,635348.884512872 918656.134908916,635348.884512872 900377.719743351,626472.110103105 900377.719743351))'}},
			{'PAVULLO NEL FRIGNANO':{'wkt':'POLYGON((640350.506697488 903383.740436913,640350.506697488 919111.49623286,654034.906606303 919111.49623286,654034.906606303 903383.740436913,640350.506697488 903383.740436913))'}},
			{'PIEVEPELAGO':{'wkt':'POLYGON((620782.812394438 885997.147083166,620782.812394438 900147.311431543,630545.785316835 900147.311431543,630545.785316835 885997.147083166,620782.812394438 885997.147083166))'}},
			{'POLINAGO':{'wkt':'POLYGON((632940.199848888 908739.211447958,632940.199848888 920913.787054365,641125.132022407 920913.787054365,641125.132022407 908739.211447958,632940.199848888 908739.211447958))'}},
			{'PRIGNANO SULLA SECCHIA':{'wkt':'POLYGON((629091.748559724 917189.127194286,629091.748559724 929365.42393273,642744.746548061 929365.42393273,642744.746548061 917189.127194286,629091.748559724 917189.127194286))'}},
			{'RAVARINO':{'wkt':'POLYGON((661774.344347711 953133.057217736,661774.344347711 961226.828968319,668590.493596912 961226.828968319,668590.493596912 953133.057217736,661774.344347711 953133.057217736))'}},
			{'RIOLUNATO':{'wkt':'POLYGON((626581.449303997 894978.945365277,626581.449303997 903889.218933268,636982.708364961 903889.218933268,636982.708364961 894978.945365277,626581.449303997 894978.945365277))'}},
			{'SAN CESARIO SUL PANARO':{'wkt':'POLYGON((657919.798845763 932518.535520403,657919.798845763 944229.424054144,663449.014732169 944229.424054144,663449.014732169 932518.535520403,657919.798845763 932518.535520403))'}},
			{'SAN FELICE SUL PANARO':{'wkt':'POLYGON((664857.259528358 963609.466836825,664857.259528358 972978.152306403,675717.412038745 972978.152306403,675717.412038745 963609.466836825,664857.259528358 963609.466836825))'}},
			{'SAN POSSIDONIO':{'wkt':'POLYGON((654777.314794435 968838.802547652,654777.314794435 975137.570143312,660954.781529013 975137.570143312,660954.781529013 968838.802547652,654777.314794435 968838.802547652))'}},
			{'SAN PROSPERO':{'wkt':'POLYGON((657044.13590654 957167.759838221,657044.13590654 965643.811921649,665107.29681014 965643.811921649,665107.29681014 957167.759838221,657044.13590654 957167.759838221))'}},
			{'SASSUOLO':{'wkt':'POLYGON((636921.427689436 927602.796484493,636921.427689436 941051.293790425,644302.3347624 941051.293790425,644302.3347624 927602.796484493,636921.427689436 927602.796484493))'}},
			{'SAVIGNANO SUL PANARO':{'wkt':'POLYGON((654675.649571768 922781.414301814,654675.649571768 932760.515095412,664275.559760682 932760.515095412,664275.559760682 922781.414301814,654675.649571768 922781.414301814))'}},
			{'SERRAMAZZONI':{'wkt':'POLYGON((638581.595541116 915440.838688345,638581.595541116 928583.241320262,650222.309833183 928583.241320262,650222.309833183 915440.838688345,638581.595541116 915440.838688345))'}},
			{'SESTOLA':{'wkt':'POLYGON((635972.685289144 894672.065610764,635972.685289144 906643.768018171,649734.394414278 906643.768018171,649734.394414278 894672.065610764,635972.685289144 894672.065610764))'}},
			{'SOLIERA':{'wkt':'POLYGON((649564.662297597 952190.338301255,649564.662297597 962076.213179581,658102.188808394 962076.213179581,658102.188808394 952190.338301255,649564.662297597 952190.338301255))'}},
			{'SPILAMBERTO':{'wkt':'POLYGON((655517.16303227 929950.091573826,655517.16303227 938335.041214501,662241.655443887 938335.041214501,662241.655443887 929950.091573826,655517.16303227 929950.091573826))'}},
			{'VIGNOLA':{'wkt':'POLYGON((655217.992675083 924871.071160056,655217.992675083 930729.023487253,662212.384874999 930729.023487253,662212.384874999 924871.071160056,655217.992675083 924871.071160056))'}},
			{'ZOCCA':{'wkt':'POLYGON((653441.36502764 906989.497348502,653441.36502764 921836.840744702,663271.295735264 921836.840744702,663271.295735264 906989.497348502,653441.36502764 906989.497348502))'}}
		]
	},
	'BOLOGNA': {
		'municipality': [
			{'ANZOLA DELL\'EMILIA':{'wkt':'POLYGON((668990.37584755 932479.598357935,668990.37584755 942968.954672026,677752.201271954 942968.954672026,677752.201271954 932479.598357935,668990.37584755 932479.598357935))'}},
			{'ARGELATO':{'wkt':'POLYGON((681469.513462923 939164.266160289,681469.513462923 949570.097342779,689693.190712019 949570.097342779,689693.190712019 939164.266160289,681469.513462923 939164.266160289))'}},
			{'BARICELLA':{'wkt':'POLYGON((698278.410378264 945781.972178184,698278.410378264 954386.361980513,708740.704917396 954386.361980513,708740.704917396 945781.972178184,698278.410378264 945781.972178184))'}},
			{'BENTIVOGLIO':{'wkt':'POLYGON((688024.250319954 939652.406291633,688024.250319954 951360.345160698,697103.013310987 951360.345160698,697103.013310987 939652.406291633,688024.250319954 939652.406291633))'}},
			{'BOLOGNA':{'wkt':'POLYGON((677241.628776032 921446.145311385,677241.628776032 936561.802508841,693511.767117339 936561.802508841,693511.767117339 921446.145311385,677241.628776032 921446.145311385))'}},
			{'BORGO TOSSIGNANO':{'wkt':'POLYGON((704043.731410679 901846.859484762,704043.731410679 909179.123192499,712815.290025394 909179.123192499,712815.290025394 901846.859484762,704043.731410679 901846.859484762))'}},
			{'BUDRIO':{'wkt':'POLYGON((695295.807741431 928713.356239067,695295.807741431 947129.42470369,708981.698627881 947129.42470369,708981.698627881 928713.356239067,695295.807741431 928713.356239067))'}},
			{'CALDERARA DI RENO':{'wkt':'POLYGON((675969.927246909 933426.451988623,675969.927246909 942184.257227958,684551.43364529 942184.257227958,684551.43364529 933426.451988623,675969.927246909 933426.451988623))'}},
			{'CAMUGNANO':{'wkt':'POLYGON((662495.085771657 884091.371278979,662495.085771657 897972.101976065,674279.506750474 897972.101976065,674279.506750474 884091.371278979,662495.085771657 884091.371278979))'}},
			{'CASALECCHIO DI RENO':{'wkt':'POLYGON((677694.287341732 924438.521585301,677694.287341732 929427.605773642,682731.611561605 929427.605773642,682731.611561605 924438.521585301,677694.287341732 924438.521585301))'}},
			{'CASALFIUMANESE':{'wkt':'POLYGON((694138.544217681 899685.574695689,694138.544217681 915218.316340524,710712.334445424 915218.316340524,710712.334445424 899685.574695689,694138.544217681 899685.574695689))'}},
			{'CASTEL D\'AIANO':{'wkt':'POLYGON((655585.883380323 901392.958352654,655585.883380323 909992.893142063,666643.758264852 909992.893142063,666643.758264852 901392.958352654,655585.883380323 901392.958352654))'}},
			{'CASTEL DEL RIO':{'wkt':'POLYGON((693473.834218543 892417.225949339,693473.834218543 902763.115845377,704854.264604132 902763.115845377,704854.264604132 892417.225949339,693473.834218543 892417.225949339))'}},
			{'CASTEL DI CASIO':{'wkt':'POLYGON((657930.92064334 884799.00928093,657930.92064334 897211.850422621,665269.367769942 897211.850422621,665269.367769942 884799.00928093,657930.92064334 884799.00928093))'}},
			{'CASTEL GUELFO DI BOLOGNA':{'wkt':'POLYGON((707415.892043778 922254.07778017,707415.892043778 929757.487657392,717349.332820859 929757.487657392,717349.332820859 922254.07778017,707415.892043778 922254.07778017))'}},
			{'CASTELLO D\'ARGILE':{'wkt':'POLYGON((678161.594696252 944650.113032687,678161.594696252 953861.206599851,686992.447378476 953861.206599851,686992.447378476 944650.113032687,678161.594696252 944650.113032687))'}},
			{'CASTEL MAGGIORE':{'wkt':'POLYGON((683375.114242375 935035.169410679,683375.114242375 942112.672397398,691782.893149249 942112.672397398,691782.893149249 935035.169410679,683375.114242375 935035.169410679))'}},
			{'CASTEL SAN PIETRO TERME':{'wkt':'POLYGON((695678.827180802 909189.459775573,695678.827180802 928520.469550301,710171.630381866 928520.469550301,710171.630381866 909189.459775573,695678.827180802 909189.459775573))'}},
			{'CASTENASO':{'wkt':'POLYGON((692282.656422491 928088.28559823,692282.656422491 935747.848744535,700057.978017021 935747.848744535,700057.978017021 928088.28559823,692282.656422491 928088.28559823))'}},
			{'CASTIGLIONE DEI PEPOLI':{'wkt':'POLYGON((670338.232679925 885288.63261041,670338.232679925 900582.894442893,681262.088459661 900582.894442893,681262.088459661 885288.63261041,670338.232679925 885288.63261041))'}},
			{'CREVALCORE':{'wkt':'POLYGON((666910.562873825 950740.828927962,666910.562873825 963955.786063544,681443.357014937 963955.786063544,681443.357014937 950740.828927962,666910.562873825 950740.828927962))'}},
			{'DOZZA':{'wkt':'POLYGON((706548.547520052 913616.219662737,706548.547520052 923037.920375451,713152.37752017 923037.920375451,713152.37752017 913616.219662737,706548.547520052 913616.219662737))'}},
			{'FONTANELICE':{'wkt':'POLYGON((699147.636369146 899319.105513515,699147.636369146 908021.499313167,707803.892636426 908021.499313167,707803.892636426 899319.105513515,699147.636369146 899319.105513515))'}},
			{'GAGGIO MONTANO':{'wkt':'POLYGON((652468.905469961 893317.797264676,652468.905469961 904111.387302405,663890.741154375 904111.387302405,663890.741154375 893317.797264676,652468.905469961 893317.797264676))'}},
			{'GALLIERA':{'wkt':'POLYGON((686091.416366356 955347.590512429,686091.416366356 961330.015724366,699523.765128542 961330.015724366,699523.765128542 955347.590512429,686091.416366356 955347.590512429))'}},
			{'GRANAROLO DELL\'EMILIA':{'wkt':'POLYGON((689214.028235804 932798.564280158,689214.028235804 941845.925376792,696771.165599715 941845.925376792,696771.165599715 932798.564280158,689214.028235804 932798.564280158))'}},
			{'GRIZZANA MORANDI':{'wkt':'POLYGON((661876.400352918 896369.220161763,661876.400352918 909205.017256618,675353.886914297 909205.017256618,675353.886914297 896369.220161763,661876.400352918 896369.220161763))'}},
			{'IMOLA':{'wkt':'POLYGON((706132.528429534 906944.217447023,706132.528429534 938983.003330144,723908.276765403 938983.003330144,723908.276765403 906944.217447023,706132.528429534 906944.217447023))'}},
			{'LIZZANO IN BELVEDERE':{'wkt':'POLYGON((644352.453594063 884599.757915352,644352.453594063 899531.551327804,654873.90214477 899531.551327804,654873.90214477 884599.757915352,644352.453594063 884599.757915352))'}},
			{'LOIANO':{'wkt':'POLYGON((681810.113577386 900857.968099236,681810.113577386 911426.531976947,689581.490453938 911426.531976947,689581.490453938 900857.968099236,681810.113577386 900857.968099236))'}},
			{'MALALBERGO':{'wkt':'POLYGON((694524.826037967 944127.480496251,694524.826037967 956619.993445957,704710.769285831 956619.993445957,704710.769285831 944127.480496251,694524.826037967 944127.480496251))'}},
			{'MARZABOTTO':{'wkt':'POLYGON((669389.977959027 905704.606203001,669389.977959027 917292.933780884,682039.651489727 917292.933780884,682039.651489727 905704.606203001,669389.977959027 905704.606203001))'}},
			{'MEDICINA':{'wkt':'POLYGON((701338.563239273 924920.399373622,701338.563239273 940622.452638286,720469.797177585 940622.452638286,720469.797177585 924920.399373622,701338.563239273 924920.399373622))'}},
			{'MINERBIO':{'wkt':'POLYGON((692875.852232587 940005.32033548,692875.852232587 947200.947435578,704360.476134153 947200.947435578,704360.476134153 940005.32033548,692875.852232587 940005.32033548))'}},
			{'MOLINELLA':{'wkt':'POLYGON((705077.147333447 935203.499167305,705077.147333447 950187.110896467,722715.797463984 950187.110896467,722715.797463984 935203.499167305,705077.147333447 935203.499167305))'}},
			{'MONGHIDORO':{'wkt':'POLYGON((681378.623784145 893572.280376594,681378.623784145 903031.022455675,690954.622397417 903031.022455675,690954.622397417 893572.280376594,681378.623784145 893572.280376594))'}},
			{'MONTERENZIO':{'wkt':'POLYGON((688670.346084672 898441.546239434,688670.346084672 917115.843917564,698515.032544411 917115.843917564,698515.032544411 898441.546239434,688670.346084672 898441.546239434))'}},
			{'MONTE SAN PIETRO':{'wkt':'POLYGON((666382.632598891 913010.819293655,666382.632598891 930910.763479318,675146.971235635 930910.763479318,675146.971235635 913010.819293655,666382.632598891 913010.819293655))'}},
			{'MONZUNO':{'wkt':'POLYGON((674611.462249519 899965.755336178,674611.462249519 913345.702777351,685044.656031539 913345.702777351,685044.656031539 899965.755336178,674611.462249519 899965.755336178))'}},
			{'MORDANO':{'wkt':'POLYGON((719486.051211102 918395.015615044,719486.051211102 924309.567168724,726334.602636837 924309.567168724,726334.602636837 918395.015615044,719486.051211102 918395.015615044))'}},
			{'OZZANO DELL\'EMILIA':{'wkt':'POLYGON((691493.856718593 914717.31223999,691493.856718593 930119.970724341,702983.632098503 930119.970724341,702983.632098503 914717.31223999,691493.856718593 914717.31223999))'}},
			{'PIANORO':{'wkt':'POLYGON((681412.0395176 908992.9825228,681412.0395176 924404.218697721,693375.434807691 924404.218697721,693375.434807691 908992.9825228,681412.0395176 908992.9825228))'}},
			{'PIEVE DI CENTO':{'wkt':'POLYGON((680490.793351675 952349.255674076,680490.793351675 961504.840599081,689048.33144006 961504.840599081,689048.33144006 952349.255674076,680490.793351675 952349.255674076))'}},
			{'SALA BOLOGNESE':{'wkt':'POLYGON((676580.081656513 938453.220646565,676580.081656513 950467.236765839,684462.632889478 950467.236765839,684462.632889478 938453.220646565,676580.081656513 938453.220646565))'}},
			{'SAN BENEDETTO VAL DI SAMBRO':{'wkt':'POLYGON((674383.872236852 891104.754379755,674383.872236852 902448.092619258,684100.065324259 902448.092619258,684100.065324259 891104.754379755,674383.872236852 891104.754379755))'}},
			{'SAN GIORGIO DI PIANO':{'wkt':'POLYGON((685954.993780836 942504.949104879,685954.993780836 952747.930817254,691869.748778063 952747.930817254,691869.748778063 942504.949104879,685954.993780836 942504.949104879))'}},
			{'SAN GIOVANNI IN PERSICETO':{'wkt':'POLYGON((668143.991450001 937473.86300555,668143.991450001 958759.112949356,680342.007277388 958759.112949356,680342.007277388 937473.86300555,668143.991450001 937473.86300555))'}},
			{'SAN LAZZARO DI SAVENA':{'wkt':'POLYGON((687730.52496273 919982.470460372,687730.52496273 929477.116019306,697832.204727837 929477.116019306,697832.204727837 919982.470460372,687730.52496273 919982.470460372))'}},
			{'SAN PIETRO IN CASALE':{'wkt':'POLYGON((684291.441008998 949178.662999973,684291.441008998 958383.807549062,696745.511606818 958383.807549062,696745.511606818 949178.662999973,684291.441008998 949178.662999973))'}},
			{'SANT\'AGATA BOLOGNESE':{'wkt':'POLYGON((664860.577003608 944101.041152064,664860.577003608 952317.599602425,673088.062498914 952317.599602425,673088.062498914 944101.041152064,664860.577003608 944101.041152064))'}},
			{'SASSO MARCONI':{'wkt':'POLYGON((672075.571080379 911801.306274473,672075.571080379 925713.618817379,685832.586427027 925713.618817379,685832.586427027 911801.306274473,672075.571080379 911801.306274473))'}},
			{'VERGATO':{'wkt':'POLYGON((662084.538835868 899437.13338212,662084.538835868 912156.96188338,672422.019207144 912156.96188338,672422.019207144 899437.13338212,662084.538835868 899437.13338212))'}},
			{'ZOLA PREDOSA':{'wkt':'POLYGON((672198.610782598 925202.375550841,672198.610782598 933630.403569617,679515.860893291 933630.403569617,679515.860893291 925202.375550841,672198.610782598 925202.375550841))'}},
			{'VALSAMOGGIA':{'wkt':'POLYGON((658459.256491784 908829.87715982,658459.256491784 937303.314678287,673557.993327555 937303.314678287,673557.993327555 908829.87715982,658459.256491784 908829.87715982))'}},
			{'ALTO RENO TERME':{'wkt':'POLYGON((650431.392126759 880753.792523357,650431.392126759 894516.838356013,660656.516298478 894516.838356013,660656.516298478 880753.792523357,650431.392126759 880753.792523357))'}}
		]
	},
	'FERRARA': {
		'municipality': [
			{'ARGENTA':{'wkt':'POLYGON((707264.4613861 937438.626051729,707264.4613861 956534.703089331,750738.940700877 956534.703089331,750738.940700877 937438.626051729,707264.4613861 937438.626051729))'}},
			{'BONDENO':{'wkt':'POLYGON((676489.74252236 967168.295718909,676489.74252236 981678.952452241,697010.236312412 981678.952452241,697010.236312412 967168.295718909,676489.74252236 967168.295718909))'}},
			{'CENTO':{'wkt':'POLYGON((677847.378697169 952957.989525037,677847.378697169 967915.640717722,688772.89137859 967915.640717722,688772.89137859 952957.989525037,677847.378697169 952957.989525037))'}},
			{'CODIGORO':{'wkt':'POLYGON((737495.075746363 963672.671420893,737495.075746363 980243.558683543,759312.820328307 980243.558683543,759312.820328307 963672.671420893,737495.075746363 963672.671420893))'}},
			{'COMACCHIO':{'wkt':'POLYGON((734651.76819839 937936.34848835,734651.76819839 968210.871574868,759941.414500898 968210.871574868,759941.414500898 937936.34848835,734651.76819839 937936.34848835))'}},
			{'COPPARO':{'wkt':'POLYGON((716390.656571572 967582.41975742,716390.656571572 982594.013239695,737133.319613145 982594.013239695,737133.319613145 967582.41975742,716390.656571572 967582.41975742))'}},
			{'FERRARA':{'wkt':'POLYGON((694453.624338148 950512.927093431,694453.624338148 979273.394603832,727624.442715007 979273.394603832,727624.442715007 950512.927093431,694453.624338148 950512.927093431))'}},
			{'JOLANDA DI SAVOIA':{'wkt':'POLYGON((728576.877584788 966027.590169978,728576.877584788 982407.328355583,742679.202705095 982407.328355583,742679.202705095 966027.590169978,728576.877584788 966027.590169978))'}},
			{'LAGOSANTO':{'wkt':'POLYGON((745117.403013093 958317.390243907,745117.403013093 966856.30074014,751805.958994651 966856.30074014,751805.958994651 958317.390243907,745117.403013093 958317.390243907))'}},
			{'MASI TORELLO':{'wkt':'POLYGON((717798.583697697 959461.20743521,717798.583697697 966055.535197812,724345.258296774 966055.535197812,724345.258296774 959461.20743521,717798.583697697 959461.20743521))'}},
			{'MESOLA':{'wkt':'POLYGON((744534.719821083 968722.114232653,744534.719821083 983599.574664987,760100.582310433 983599.574664987,760100.582310433 968722.114232653,744534.719821083 968722.114232653))'}},
			{'OSTELLATO':{'wkt':'POLYGON((723325.103806322 950586.665540767,723325.103806322 963634.549555643,747526.14252652 963634.549555643,747526.14252652 950586.665540767,723325.103806322 950586.665540767))'}},
			{'POGGIO RENATICO':{'wkt':'POLYGON((689834.478667458 953871.9295222,689834.478667458 966269.53022642,705482.069509321 966269.53022642,705482.069509321 953871.9295222,689834.478667458 953871.9295222))'}},
			{'PORTOMAGGIORE':{'wkt':'POLYGON((716358.781874749 948098.773070956,716358.781874749 960256.432442588,736018.681678069 960256.432442588,736018.681678069 948098.773070956,716358.781874749 948098.773070956))'}},
			{'VIGARANO MAINARDA':{'wkt':'POLYGON((693055.523394435 964085.267597068,693055.523394435 976123.97185547,701307.805937924 976123.97185547,701307.805937924 964085.267597068,693055.523394435 964085.267597068))'}},
			{'VOGHIERA':{'wkt':'POLYGON((713242.046147907 955154.597817161,713242.046147907 965126.174930006,720924.301304519 965126.174930006,720924.301304519 955154.597817161,713242.046147907 955154.597817161))'}},
			{'GORO':{'wkt':'POLYGON((757135.633801897 964573.680515007,757135.633801897 976600.831727084,768960.553335693 976600.831727084,768960.553335693 964573.680515007,757135.633801897 964573.680515007))'}},
			{'FISCAGLIA':{'wkt':'POLYGON((728656.945329367 959096.445000067,728656.945329367 969479.849017441,746497.80210485 969479.849017441,746497.80210485 959096.445000067,728656.945329367 959096.445000067))'}},
			{'TERRE DEL RENO':{'wkt':'POLYGON((684430.939873978 958981.36210186,684430.939873978 968324.326721902,696789.048544517 968324.326721902,696789.048544517 958981.36210186,684430.939873978 958981.36210186))'}},
			{'RIVA DEL PO':{'wkt':'POLYGON((714996.616843379 974997.599811977,714996.616843379 985967.664101848,745756.763688134 985967.664101848,745756.763688134 974997.599811977,714996.616843379 974997.599811977))'}},
			{'TRESIGNANA':{'wkt':'POLYGON((723697.04618468 962369.79057244,723697.04618468 972582.421416963,733746.53623665 972582.421416963,733746.53623665 962369.79057244,723697.04618468 962369.79057244))'}}
		]
	},
	'RAVENNA': {
		'municipality': [
			{'ALFONSINE':{'wkt':'POLYGON((729061.579127691 931398.36737159,729061.579127691 943105.801568372,747537.803793255 943105.801568372,747537.803793255 931398.36737159,729061.579127691 931398.36737159))'}},
			{'BAGNACAVALLO':{'wkt':'POLYGON((734060.320621857 918322.072975654,734060.320621857 931806.616501744,745196.390676655 931806.616501744,745196.390676655 918322.072975654,734060.320621857 918322.072975654))'}},
			{'BAGNARA DI ROMAGNA':{'wkt':'POLYGON((723884.676401197 917601.532063368,723884.676401197 921956.377471792,727944.411296542 921956.377471792,727944.411296542 917601.532063368,723884.676401197 917601.532063368))'}},
			{'BRISIGHELLA':{'wkt':'POLYGON((706868.132699533 886477.21525987,706868.132699533 906683.478878734,734019.402557823 906683.478878734,734019.402557823 886477.21525987,706868.132699533 886477.21525987))'}},
			{'CASOLA VALSENIO':{'wkt':'POLYGON((701988.420151028 892136.546957953,701988.420151028 904137.255242199,715451.078021684 904137.255242199,715451.078021684 892136.546957953,701988.420151028 892136.546957953))'}},
			{'CASTEL BOLOGNESE':{'wkt':'POLYGON((718302.426139859 907584.324278297,718302.426139859 916380.002052601,727207.185340052 916380.002052601,727207.185340052 907584.324278297,718302.426139859 907584.324278297))'}},
			{'CERVIA':{'wkt':'POLYGON((757935.651821632 898695.157578136,757935.651821632 911630.051251727,770366.714191098 911630.051251727,770366.714191098 898695.157578136,757935.651821632 898695.157578136))'}},
			{'CONSELICE':{'wkt':'POLYGON((720981.554675902 928070.167672125,720981.554675902 940457.971909335,731647.020319326 940457.971909335,731647.020319326 928070.167672125,720981.554675902 928070.167672125))'}},
			{'COTIGNOLA':{'wkt':'POLYGON((727346.842531384 914399.217285502,727346.842531384 921649.509699322,737791.11566654 921649.509699322,737791.11566654 914399.217285502,727346.842531384 914399.217285502))'}},
			{'FAENZA':{'wkt':'POLYGON((720414.769917391 899523.089872563,720414.769917391 918623.401518974,741631.305278865 918623.401518974,741631.305278865 899523.089872563,720414.769917391 899523.089872563))'}},
			{'FUSIGNANO':{'wkt':'POLYGON((732702.721542655 926555.956713746,732702.721542655 932689.333597506,742421.019107486 932689.333597506,742421.019107486 926555.956713746,732702.721542655 926555.956713746))'}},
			{'LUGO':{'wkt':'POLYGON((725858.025121499 919783.068725964,725858.025121499 938322.502976554,737374.494560573 938322.502976554,737374.494560573 919783.068725964,725858.025121499 919783.068725964))'}},
			{'MASSA LOMBARDA':{'wkt':'POLYGON((718698.104676307 922347.256960713,718698.104676307 932469.100911296,727872.188670785 932469.100911296,727872.188670785 922347.256960713,718698.104676307 922347.256960713))'}},
			{'RAVENNA':{'wkt':'POLYGON((741193.987211649 900785.941168798,741193.987211649 947049.920438448,767110.320925319 947049.920438448,767110.320925319 900785.941168798,741193.987211649 900785.941168798))'}},
			{'RIOLO TERME':{'wkt':'POLYGON((709950.974796551 902563.882194418,709950.974796551 910744.761728564,720852.723534386 910744.761728564,720852.723534386 902563.882194418,709950.974796551 902563.882194418))'}},
			{'RUSSI':{'wkt':'POLYGON((738172.182847256 912976.039898722,738172.182847256 922285.026849156,747444.819616705 922285.026849156,747444.819616705 912976.039898722,738172.182847256 912976.039898722))'}},
			{'SANT\'AGATA SUL SANTERNO':{'wkt':'POLYGON((725985.944667355 923263.282303022,725985.944667355 928251.18355146,729621.083950529 928251.18355146,729621.083950529 923263.282303022,725985.944667355 923263.282303022))'}},
			{'SOLAROLO':{'wkt':'POLYGON((722692.536839791 912044.739731665,722692.536839791 918860.386561332,729380.600687184 918860.386561332,729380.600687184 912044.739731665,722692.536839791 912044.739731665))'}}
		]
	},
	'FORLI-CESENA': {
		'municipality': [
			{'BAGNO DI ROMAGNA':{'wkt':'POLYGON((724232.14878226 852665.053854277,724232.14878226 871292.108606849,749810.848742807 871292.108606849,749810.848742807 852665.053854277,724232.14878226 852665.053854277))'}},
			{'BERTINORO':{'wkt':'POLYGON((746479.05064028 888184.452703613,746479.05064028 902630.792730854,756779.658453526 902630.792730854,756779.658453526 888184.452703613,746479.05064028 888184.452703613))'}},
			{'BORGHI':{'wkt':'POLYGON((765637.624485876 875920.110376397,765637.624485876 883633.224998844,772208.276483164 883633.224998844,772208.276483164 875920.110376397,765637.624485876 875920.110376397))'}},
			{'CASTROCARO TERME E TERRA DEL SOLE':{'wkt':'POLYGON((731008.302502053 890674.447734525,731008.302502053 899618.415979655,738821.862165978 899618.415979655,738821.862165978 890674.447734525,731008.302502053 890674.447734525))'}},
			{'CESENA':{'wkt':'POLYGON((748085.222711185 879005.672368577,748085.222711185 903205.077741056,769048.903096074 903205.077741056,769048.903096074 879005.672368577,748085.222711185 879005.672368577))'}},
			{'CESENATICO':{'wkt':'POLYGON((766490.685933754 891907.693095828,766490.685933754 902639.161247378,774869.862396419 902639.161247378,774869.862396419 891907.693095828,766490.685933754 891907.693095828))'}},
			{'CIVITELLA DI ROMAGNA':{'wkt':'POLYGON((734166.35340158 870296.642581727,734166.35340158 885623.480172698,748485.98854512 885623.480172698,748485.98854512 870296.642581727,734166.35340158 870296.642581727))'}},
			{'DOVADOLA':{'wkt':'POLYGON((726678.936948595 884483.783692487,726678.936948595 895034.564723697,733349.634279558 895034.564723697,733349.634279558 884483.783692487,726678.936948595 884483.783692487))'}},
			{'FORLI\'':{'wkt':'POLYGON((733503.094092545 890461.695958931,733503.094092545 913321.646945583,756471.002161575 913321.646945583,756471.002161575 890461.695958931,733503.094092545 890461.695958931))'}},
			{'FORLIMPOPOLI':{'wkt':'POLYGON((746930.591308992 894235.667010021,746930.591308992 900977.53060337,753322.853494196 900977.53060337,753322.853494196 894235.667010021,746930.591308992 894235.667010021))'}},
			{'GALEATA':{'wkt':'POLYGON((728470.526467054 868549.972259334,728470.526467054 882534.743494454,740346.542048409 882534.743494454,740346.542048409 868549.972259334,728470.526467054 868549.972259334))'}},
			{'GAMBETTOLA':{'wkt':'POLYGON((765924.673566434 889054.958400556,765924.673566434 892332.690978067,769865.032313629 892332.690978067,769865.032313629 889054.958400556,765924.673566434 889054.958400556))'}},
			{'GATTEO':{'wkt':'POLYGON((769215.44964929 888727.639332717,769215.44964929 897143.329243567,775486.304484556 897143.329243567,775486.304484556 888727.639332717,769215.44964929 888727.639332717))'}},
			{'LONGIANO':{'wkt':'POLYGON((765088.294915296 883384.954008155,765088.294915296 889817.921984846,770113.507906199 889817.921984846,770113.507906199 883384.954008155,765088.294915296 883384.954008155))'}},
			{'MELDOLA':{'wkt':'POLYGON((739892.318913354 880528.813077465,739892.318913354 893419.866352359,751104.520246949 893419.866352359,751104.520246949 880528.813077465,739892.318913354 880528.813077465))'}},
			{'MERCATO SARACENO':{'wkt':'POLYGON((746729.662985252 867110.873136459,746729.662985252 882821.451238432,762604.343209211 882821.451238432,762604.343209211 867110.873136459,746729.662985252 867110.873136459))'}},
			{'MODIGLIANA':{'wkt':'POLYGON((717345.834175116 885005.400355558,717345.834175116 898118.426218875,731035.469914258 898118.426218875,731035.469914258 885005.400355558,717345.834175116 885005.400355558))'}},
			{'MONTIANO':{'wkt':'POLYGON((762221.202418118 883240.306938511,762221.202418118 888259.244202741,765627.004411622 888259.244202741,765627.004411622 883240.306938511,762221.202418118 883240.306938511))'}},
			{'PORTICO E SAN BENEDETTO':{'wkt':'POLYGON((712181.985426244 870412.236593247,712181.985426244 881686.464492624,724363.869970192 881686.464492624,724363.869970192 870412.236593247,712181.985426244 870412.236593247))'}},
			{'PREDAPPIO':{'wkt':'POLYGON((731306.519074905 879379.55576405,731306.519074905 894161.373060263,741174.939447224 894161.373060263,741174.939447224 879379.55576405,731306.519074905 879379.55576405))'}},
			{'PREMILCUORE':{'wkt':'POLYGON((715414.980525584 864421.709211477,715414.980525584 880195.885448854,730267.197813106 880195.885448854,730267.197813106 864421.709211477,715414.980525584 864421.709211477))'}},
			{'ROCCA SAN CASCIANO':{'wkt':'POLYGON((723403.887009694 877305.697423117,723403.887009694 888559.503887157,733154.454727848 888559.503887157,733154.454727848 877305.697423117,723403.887009694 877305.697423117))'}},
			{'RONCOFREDDO':{'wkt':'POLYGON((756150.097926116 878159.367201942,756150.097926116 886973.927722121,769042.170974588 886973.927722121,769042.170974588 878159.367201942,756150.097926116 878159.367201942))'}},
			{'SAN MAURO PASCOLI':{'wkt':'POLYGON((772621.257748593 887467.183618976,772621.257748593 896382.237190071,776892.270762768 896382.237190071,776892.270762768 887467.183618976,772621.257748593 887467.183618976))'}},
			{'SANTA SOFIA':{'wkt':'POLYGON((717600.125253967 858629.008866853,717600.125253967 873959.297033241,745135.400730496 873959.297033241,745135.400730496 858629.008866853,717600.125253967 858629.008866853))'}},
			{'SARSINA':{'wkt':'POLYGON((743206.868423229 859638.818509464,743206.868423229 879421.481003703,754927.766265034 879421.481003703,754927.766265034 859638.818509464,743206.868423229 859638.818509464))'}},
			{'SAVIGNANO SUL RUBICONE':{'wkt':'POLYGON((769321.93840616 884694.373318993,769321.93840616 896712.1515398,775532.854087236 896712.1515398,775532.854087236 884694.373318993,769321.93840616 884694.373318993))'}},
			{'SOGLIANO AL RUBICONE':{'wkt':'POLYGON((754545.964320387 866876.131756864,754545.964320387 880903.698466075,769030.678668831 880903.698466075,769030.678668831 866876.131756864,754545.964320387 866876.131756864))'}},
			{'TREDOZIO':{'wkt':'POLYGON((715054.703980886 876994.091191706,715054.703980886 889109.029558038,726525.560159971 889109.029558038,726525.560159971 876994.091191706,715054.703980886 876994.091191706))'}},
			{'VERGHERETO':{'wkt':'POLYGON((737508.560927606 847787.24051568,737508.560927606 862533.6668952,753404.013732443 862533.6668952,753404.013732443 847787.24051568,737508.560927606 847787.24051568))'}}
		]
	},
	'RIMINI': {
		'municipality': [
			{'BELLARIA-IGEA MARINA':{'wkt':'POLYGON((774242.254131126 889925.565637193,774242.254131126 895864.8642439,780448.577006532 895864.8642439,780448.577006532 889925.565637193,774242.254131126 889925.565637193))'}},
			{'CATTOLICA':{'wkt':'POLYGON((797697.193082134 872204.560640221,797697.193082134 875738.710702377,801402.415648083 875738.710702377,801402.415648083 872204.560640221,797697.193082134 872204.560640221))'}},
			{'CORIANO':{'wkt':'POLYGON((781314.640461206 871344.890188395,781314.640461206 877791.4600805,792390.735868234 877791.4600805,792390.735868234 871344.890188395,781314.640461206 871344.890188395))'}},
			{'GEMMANO':{'wkt':'POLYGON((783664.084127663 863084.559749286,783664.084127663 869357.368305778,789373.202934342 869357.368305778,789373.202934342 863084.559749286,783664.084127663 863084.559749286))'}},
			{'MISANO ADRIATICO':{'wkt':'POLYGON((791577.853779236 871232.599460082,791577.853779236 877288.768585768,798684.146025069 877288.768585768,798684.146025069 871232.599460082,791577.853779236 871232.599460082))'}},
			{'MONDAINO':{'wkt':'POLYGON((790393.974854771 858566.894070506,790393.974854771 864945.029121241,796251.15963028 864945.029121241,796251.15963028 858566.894070506,790393.974854771 858566.894070506))'}},
			{'MONTEFIORE CONCA':{'wkt':'POLYGON((788393.721813102 861198.586734207,788393.721813102 868624.040257336,793553.278948863 868624.040257336,793553.278948863 861198.586734207,788393.721813102 861198.586734207))'}},
			{'MONTEGRIDOLFO':{'wkt':'POLYGON((795958.962515573 862208.307229566,795958.962515573 865722.631229979,800127.186758588 865722.631229979,800127.186758588 862208.307229566,795958.962515573 862208.307229566))'}},
			{'MORCIANO DI ROMAGNA':{'wkt':'POLYGON((790669.856451466 867268.677319638,790669.856451466 870846.828325983,795516.532956981 870846.828325983,795516.532956981 867268.677319638,790669.856451466 867268.677319638))'}},
			{'RICCIONE':{'wkt':'POLYGON((788887.88887714 875717.972248332,788887.88887714 881284.561259084,795904.872232091 881284.561259084,795904.872232091 875717.972248332,788887.88887714 875717.972248332))'}},
			{'RIMINI':{'wkt':'POLYGON((775646.833213521 874454.803495291,775646.833213521 890881.282315278,791194.348322355 890881.282315278,791194.348322355 874454.803495291,775646.833213521 874454.803495291))'}},
			{'SALUDECIO':{'wkt':'POLYGON((790724.471934677 860338.606798793,790724.471934677 869523.946034701,799978.721897874 869523.946034701,799978.721897874 860338.606798793,790724.471934677 860338.606798793))'}},
			{'SAN CLEMENTE':{'wkt':'POLYGON((788923.775577308 867749.833657314,788923.775577308 873865.782282695,795400.716400731 873865.782282695,795400.716400731 867749.833657314,788923.775577308 867749.833657314))'}},
			{'SAN GIOVANNI IN MARIGNANO':{'wkt':'POLYGON((794869.89345391 868609.728000182,794869.89345391 874765.728939167,800321.134088639 874765.728939167,800321.134088639 868609.728000182,794869.89345391 868609.728000182))'}},
			{'SANTARCANGELO DI ROMAGNA':{'wkt':'POLYGON((769173.794155551 879189.674282261,769173.794155551 887670.490316321,780542.39848541 887670.490316321,780542.39848541 879189.674282261,769173.794155551 879189.674282261))'}},
			{'VERUCCHIO':{'wkt':'POLYGON((772210.499328644 865570.216094519,772210.499328644 881400.066220962,777717.269565575 881400.066220962,777717.269565575 865570.216094519,772210.499328644 865570.216094519))'}},
			{'CASTELDELCI':{'wkt':'POLYGON((749251.328025471 847126.990693307,749251.328025471 858459.620915851,757745.691718806 858459.620915851,757745.691718806 847126.990693307,749251.328025471 847126.990693307))'}},
			{'MAIOLO':{'wkt':'POLYGON((763408.005942823 860197.999606469,763408.005942823 868135.703131377,769473.763963551 868135.703131377,769473.763963551 860197.999606469,763408.005942823 860197.999606469))'}},
			{'NOVAFELTRIA':{'wkt':'POLYGON((757218.021746509 859560.278139804,757218.021746509 873305.249175997,769418.01060605 873305.249175997,769418.01060605 859560.278139804,757218.021746509 859560.278139804))'}},
			{'PENNABILLI':{'wkt':'POLYGON((757198.033099196 848490.729746733,757198.033099196 862711.321594287,769196.358188847 862711.321594287,769196.358188847 848490.729746733,757198.033099196 848490.729746733))'}},
			{'SAN LEO':{'wkt':'POLYGON((766259.456280646 863265.392589603,766259.456280646 873553.853243075,775879.147648255 873553.853243075,775879.147648255 863265.392589603,766259.456280646 863265.392589603))'}},
			{'SANT\'AGATA FELTRIA':{'wkt':'POLYGON((752316.739174461 855173.201967612,752316.739174461 868745.209631323,762443.407192086 868745.209631323,762443.407192086 855173.201967612,752316.739174461 855173.201967612))'}},
			{'TALAMELLO':{'wkt':'POLYGON((761248.885326117 865518.805648529,761248.885326117 869641.907106128,765829.468131816 869641.907106128,765829.468131816 865518.805648529,761248.885326117 865518.805648529))'}},
			{'POGGIO TORRIANA':{'wkt':'POLYGON((766542.459868819 871889.954527264,766542.459868819 883917.241433798,774801.072936964 883917.241433798,774801.072936964 871889.954527264,766542.459868819 871889.954527264))'}},
			{'MONTESCUDO - MONTE COLOMBO':{'wkt':'POLYGON((780485.738846292 866809.087702354,780485.738846292 872889.451535122,789729.162053495 872889.451535122,789729.162053495 866809.087702354,780485.738846292 866809.087702354))'}},
			{'MONTECOPIOLO':{'wkt':'POLYGON((766856.633139895 855253.568588119,766856.633139895 866169.431692137,773598.447580597 866169.431692137,773598.447580597 855253.568588119,766856.633139895 855253.568588119))'}},
			{'SASSOFELTRIO':{'wkt':'POLYGON((774393.851854483 863461.148458214,774393.851854483 868672.677130762,784677.107653513 868672.677130762,784677.107653513 863461.148458214,774393.851854483 863461.148458214))'}}
		]
	}
},

    LIGURIA_PROVINCE: {
        'GENOVA': {
            'municipality': [{
                    'SESTRI LEVANTE': {
                        'wkt': 'POLYGON ((1530681.6701049805 4898427.4000854492,1530681.6701049805 4908035.1901245117,1537614.9000854492 4908035.1901245117,1537614.9000854492 4898427.4000854492,1530681.6701049805 4898427.4000854492))'
                    }
                }
                , {
                    'MONEGLIA': {
                        'wkt': 'POLYGON ((1536156.3101196289 4896045.330078125,1536156.3101196289 4900904.8400878906,1542504.6801147461 4900904.8400878906,1542504.6801147461 4896045.330078125,1536156.3101196289 4896045.330078125))'
                    }
                }
                , {
                    'COGOLETO': {
                        'wkt': 'POLYGON ((1466997.9801025391 4914134.6101074219,1466997.9801025391 4920703.5100708008,1473332.5501098633 4920703.5100708008,1473332.5501098633 4914134.6101074219,1466997.9801025391 4914134.6101074219))'
                    }
                }
                , {
                    'ARENZANO': {
                        'wkt': 'POLYGON ((1470058.4401245117 4915274.1801147461,1470058.4401245117 4922024.5900878906,1476824.7100830078 4922024.5900878906,1476824.7100830078 4915274.1801147461,1470058.4401245117 4915274.1801147461))'
                    }
                }
                , {
                    'TIGLIETO': {
                        'wkt': 'POLYGON ((1465985.0601196289 4922902.9100952148,1465985.0601196289 4931903.5200805664,1474214.1101074219 4931903.5200805664,1474214.1101074219 4922902.9100952148,1465985.0601196289 4922902.9100952148))'
                    }
                }
                , {
                    'ROSSIGLIONE': {
                        'wkt': 'POLYGON ((1468065.3601074219 4928318.4301147461,1468065.3601074219 4936700.0401000977,1479376.4000854492 4936700.0401000977,1479376.4000854492 4928318.4301147461,1468065.3601074219 4928318.4301147461))'
                    }
                }
                , {
                    'CAMPO LIGURE': {
                        'wkt': 'POLYGON ((1473239.7901000977 4927756.7401123047,1473239.7901000977 4933470.2901000977,1480626.3001098633 4933470.2901000977,1480626.3001098633 4927756.7401123047,1473239.7901000977 4927756.7401123047))'
                    }
                }
                , {
                    'MASONE': {
                        'wkt': 'POLYGON ((1473233.0900878906 4925194.4801025391,1473233.0900878906 4930952.9901123047,1482049.8400878906 4930952.9901123047,1482049.8400878906 4925194.4801025391,1473233.0900878906 4925194.4801025391))'
                    }
                }
                , {
                    'MELE': {
                        'wkt': 'POLYGON ((1476779.4801025391 4921046.3500976562,1476779.4801025391 4926243.6600952148,1482874.2501220703 4926243.6600952148,1482874.2501220703 4921046.3500976562,1476779.4801025391 4921046.3500976562))'
                    }
                }
                , {
                    'CERANESI': {
                        'wkt': 'POLYGON ((1483269.2901000977 4924380.4500732422,1483269.2901000977 4932057.4500732422,1491838.4500732422 4932057.4500732422,1491838.4500732422 4924380.4500732422,1483269.2901000977 4924380.4500732422))'
                    }
                }
                , {
                    'CAMPOMORONE': {
                        'wkt': 'POLYGON ((1485799.9901123047 4927938.3201293945,1485799.9901123047 4934805.4401245117,1492560.2301025391 4934805.4401245117,1492560.2301025391 4927938.3201293945,1485799.9901123047 4927938.3201293945))'
                    }
                }
                , {
                    'MIGNANEGO': {
                        'wkt': 'POLYGON ((1491121.4600830078 4928771.8400878906,1491121.4600830078 4935407.4700927734,1496797.5701293945 4935407.4700927734,1496797.5701293945 4928771.8400878906,1491121.4600830078 4928771.8400878906))'
                    }
                }
                , {
                    'BUSALLA': {
                        'wkt': 'POLYGON ((1493507.9901123047 4933783.0701293945,1493507.9901123047 4940546.5100708008,1501186.1400756836 4940546.5100708008,1501186.1400756836 4933783.0701293945,1493507.9901123047 4933783.0701293945))'
                    }
                }
                , {
                    'ISOLA DEL CANTONE': {
                        'wkt': 'POLYGON ((1490274.6701049805 4940379.1600952148,1490274.6701049805 4947082.9401245117,1502496.3101196289 4947082.9401245117,1502496.3101196289 4940379.1600952148,1490274.6701049805 4940379.1600952148))'
                    }
                }
                , {
                    'VOBBIA': {
                        'wkt': 'POLYGON ((1500754.2100830078 4935012.3801269531,1500754.2100830078 4943215.4401245117,1508902.6301269531 4943215.4401245117,1508902.6301269531 4935012.3801269531,1500754.2100830078 4935012.3801269531))'
                    }
                }
                , {
                    'CROCEFIESCHI': {
                        'wkt': 'POLYGON ((1499854.280090332 4934812.4500732422,1499854.280090332 4939732.0501098633,1504198.1301269531 4939732.0501098633,1504198.1301269531 4934812.4500732422,1499854.280090332 4934812.4500732422))'
                    }
                }
                , {
                    'SAVIGNONE': {
                        'wkt': 'POLYGON ((1496295.4401245117 4930634.7200927734,1496295.4401245117 4936725.6000976563,1502672.830078125 4936725.6000976563,1502672.830078125 4930634.7200927734,1496295.4401245117 4930634.7200927734))'
                    }
                }
                , {
                    'VALBREVENNA': {
                        'wkt': 'POLYGON ((1501391.6500854492 4930780.3001098633,1501391.6500854492 4936513.5601196289,1512185.7000732422 4936513.5601196289,1512185.7000732422 4930780.3001098633,1501391.6500854492 4930780.3001098633))'
                    }
                }
                , {
                    'CASELLA': {
                        'wkt': 'POLYGON ((1498156.7700805664 4929280.1701049805,1498156.7700805664 4933200.7501220703,1501676.9401245117 4933200.7501220703,1501676.9401245117 4929280.1701049805,1498156.7700805664 4929280.1701049805))'
                    }
                }
                , {
                    'SERRA RICCO\'': {
                        'wkt': 'POLYGON ((1492450.4500732422 4925708.8900756836,1492450.4500732422 4931928.330078125,1500094.6400756836 4931928.330078125,1500094.6400756836 4925708.8900756836,1492450.4500732422 4925708.8900756836))'
                    }
                }
                , {
                    'MONTOGGIO': {
                        'wkt': 'POLYGON ((1499715.2700805664 4924318.8400878906,1499715.2700805664 4932392.1500854492,1508006.6301269531 4932392.1500854492,1508006.6301269531 4924318.8400878906,1499715.2700805664 4924318.8400878906))'
                    }
                }
                , {
                    'SANT\'OLCESE': {
                        'wkt': 'POLYGON ((1493389.8801269531 4921977.2700805664,1493389.8801269531 4928259.8201293945,1500665.0401000977 4928259.8201293945,1500665.0401000977 4921977.2700805664,1493389.8801269531 4921977.2700805664))'
                    }
                }
                , {
                    'PROPATA': {
                        'wkt': 'POLYGON ((1511638.2901000977 4931862.8001098633,1511638.2901000977 4937714.8801269531,1516754.6301269531 4937714.8801269531,1516754.6301269531 4931862.8001098633,1511638.2901000977 4931862.8001098633))'
                    }
                }
                , {
                    'TORRIGLIA': {
                        'wkt': 'POLYGON ((1507201.0900878906 4924825.2000732422,1507201.0900878906 4933592.7301025391,1517590.8500976562 4933592.7301025391,1517590.8500976562 4924825.2000732422,1507201.0900878906 4924825.2000732422))'
                    }
                }
                , {
                    'RONDANINA': {
                        'wkt': 'POLYGON ((1515354.5601196289 4930502.4901123047,1515354.5601196289 4935816.4201049805,1519899.3601074219 4935816.4201049805,1519899.3601074219 4930502.4901123047,1515354.5601196289 4930502.4901123047))'
                    }
                }
                , {
                    'FASCIA': {
                        'wkt': 'POLYGON ((1515758.9600830078 4932267.7501220703,1515758.9600830078 4937825.2100830078,1521562.2401123047 4937825.2100830078,1521562.2401123047 4932267.7501220703,1515758.9600830078 4932267.7501220703))'
                    }
                }
                , {
                    'GORRETO': {
                        'wkt': 'POLYGON ((1516026.5200805664 4935997.3101196289,1516026.5200805664 4940767.0900878906,1523536.030090332 4940767.0900878906,1523536.030090332 4935997.3101196289,1516026.5200805664 4935997.3101196289))'
                    }
                }
                , {
                    'ROVEGNO': {
                        'wkt': 'POLYGON ((1519222.4100952148 4930919.6101074219,1519222.4100952148 4939447.8701171875,1530301.7600708008 4939447.8701171875,1530301.7600708008 4930919.6101074219,1519222.4100952148 4930919.6101074219))'
                    }
                }
                , {
                    'FONTANIGORDA': {
                        'wkt': 'POLYGON ((1520246.1500854492 4928576.9401245117,1520246.1500854492 4933117.2401123047,1526200.9600830078 4933117.2401123047,1526200.9600830078 4928576.9401245117,1520246.1500854492 4928576.9401245117))'
                    }
                }
                , {
                    'MONTEBRUNO': {
                        'wkt': 'POLYGON ((1517148.4500732422 4926592.0100708008,1517148.4500732422 4932505.3601074219,1523171.9901123047 4932505.3601074219,1523171.9901123047 4926592.0100708008,1517148.4500732422 4926592.0100708008))'
                    }
                }
                , {
                    'REZZOAGLIO': {
                        'wkt': 'POLYGON ((1520225.1400756836 4920378.4600830078,1520225.1400756836 4938721.6901245117,1535495.0501098633 4938721.6901245117,1535495.0501098633 4920378.4600830078,1520225.1400756836 4920378.4600830078))'
                    }
                }
                , {
                    'SANTO STEFANO D\'AVETO': {
                        'wkt': 'POLYGON ((1532106.0900878906 4924771.9401245117,1532106.0900878906 4935947.3201293945,1540145.030090332 4935947.3201293945,1540145.030090332 4924771.9401245117,1532106.0900878906 4924771.9401245117))'
                    }
                }
                , {
                    'BORZONASCA': {
                        'wkt': 'POLYGON ((1525440.4801025391 4916451.1400756836,1525440.4801025391 4926489.4000854492,1537702.6400756836 4926489.4000854492,1537702.6400756836 4916451.1400756836,1525440.4801025391 4916451.1400756836))'
                    }
                }
                , {
                    'LORSICA': {
                        'wkt': 'POLYGON ((1516926.780090332 4918417.9000854492,1516926.780090332 4927790.7000732422,1524482.580078125 4927790.7000732422,1524482.580078125 4918417.9000854492,1516926.780090332 4918417.9000854492))'
                    }
                }
                , {
                    'MOCONESI': {
                        'wkt': 'POLYGON ((1514225.7200927734 4917425.5501098633,1514225.7200927734 4928980.4301147461,1519271.6901245117 4928980.4301147461,1519271.6901245117 4917425.5501098633,1514225.7200927734 4917425.5501098633))'
                    }
                }
                , {
                    'ORERO': {
                        'wkt': 'POLYGON ((1520216.7000732422 4915077.7600708008,1520216.7000732422 4922360.6901245117,1525155.9301147461 4922360.6901245117,1525155.9301147461 4915077.7600708008,1520216.7000732422 4915077.7600708008))'
                    }
                }
                , {
                    'CICAGNA': {
                        'wkt': 'POLYGON ((1515747.4801025391 4915479.7200927734,1515747.4801025391 4918727.4801025391,1521402.2901000977 4918727.4801025391,1521402.2901000977 4915479.7200927734,1515747.4801025391 4915479.7200927734))'
                    }
                }
                , {
                    'TRIBOGNA': {
                        'wkt': 'POLYGON ((1512996.7600708008 4915891.6600952148,1512996.7600708008 4920216.0401000977,1516827.2200927734 4920216.0401000977,1516827.2200927734 4915891.6600952148,1512996.7600708008 4915891.6600952148))'
                    }
                }
                , {
                    'USCIO': {
                        'wkt': 'POLYGON ((1510269.0200805664 4915987.7600708008,1510269.0200805664 4920485.2501220703,1514714.5100708008 4920485.2501220703,1514714.5100708008 4915987.7600708008,1510269.0200805664 4915987.7600708008))'
                    }
                }
                , {
                    'LUMARZO': {
                        'wkt': 'POLYGON ((1508189.3601074219 4917341.8701171875,1508189.3601074219 4926136.0601196289,1512990.9500732422 4926136.0601196289,1512990.9500732422 4917341.8701171875,1508189.3601074219 4917341.8701171875))'
                    }
                }
                , {
                    'RECCO': {
                        'wkt': 'POLYGON ((1509817.3001098633 4911141.7100830078,1509817.3001098633 4914869.5701293945,1513753.6701049805 4914869.5701293945,1513753.6701049805 4911141.7100830078,1509817.3001098633 4911141.7100830078))'
                    }
                }
                , {
                    'SORI': {
                        'wkt': 'POLYGON ((1507116.4801025391 4912354.4000854492,1507116.4801025391 4918126.030090332,1510607.8400878906 4918126.030090332,1510607.8400878906 4912354.4000854492,1507116.4801025391 4912354.4000854492))'
                    }
                }
                , {
                    'AVEGNO': {
                        'wkt': 'POLYGON ((1510375.7000732422 4912783.6901245117,1510375.7000732422 4917237.5701293945,1515117.580078125 4917237.5701293945,1515117.580078125 4912783.6901245117,1510375.7000732422 4912783.6901245117))'
                    }
                }
                , {
                    'RAPALLO': {
                        'wkt': 'POLYGON ((1513233.9100952148 4909090.6600952148,1513233.9100952148 4915998.8601074219,1521540.0701293945 4915998.8601074219,1521540.0701293945 4909090.6600952148,1513233.9100952148 4909090.6600952148))'
                    }
                }
                , {
                    'COREGLIA LIGURE': {
                        'wkt': 'POLYGON ((1518147.7100830078 4912093.0001220703,1518147.7100830078 4916238.8001098633,1522905.5601196289 4916238.8001098633,1522905.5601196289 4912093.0001220703,1518147.7100830078 4912093.0001220703))'
                    }
                }
                , {
                    'ZOAGLI': {
                        'wkt': 'POLYGON ((1519317.6801147461 4908497.0401000977,1519317.6801147461 4912110.3500976562,1523049.2700805664 4912110.3500976562,1523049.2700805664 4908497.0401000977,1519317.6801147461 4908497.0401000977))'
                    }
                }
                , {
                    'BOGLIASCO': {
                        'wkt': 'POLYGON ((1504649.3201293945 4913562.9801025391,1504649.3201293945 4917496.3900756836,1507604.4600830078 4917496.3900756836,1507604.4600830078 4913562.9801025391,1504649.3201293945 4913562.9801025391))'
                    }
                }
                , {
                    'PIEVE LIGURE': {
                        'wkt': 'POLYGON ((1506115.1901245117 4913114.6400756836,1506115.1901245117 4916940.1201171875,1508474.0001220703 4916940.1201171875,1508474.0001220703 4913114.6400756836,1506115.1901245117 4913114.6400756836))'
                    }
                }
                , {
                    'CAMOGLI': {
                        'wkt': 'POLYGON ((1511592.1101074219 4906189.8701171875,1511592.1101074219 4911617.9801025391,1515499.2901000977 4911617.9801025391,1515499.2901000977 4906189.8701171875,1511592.1101074219 4906189.8701171875))'
                    }
                }
                , {
                    'SANTA MARGHERITA LIGURE': {
                        'wkt': 'POLYGON ((1513492.0001220703 4906372.7100830078,1513492.0001220703 4910339.4100952148,1517722.8801269531 4910339.4100952148,1517722.8801269531 4906372.7100830078,1513492.0001220703 4906372.7100830078))'
                    }
                }
                , {
                    'PORTOFINO': {
                        'wkt': 'POLYGON ((1514379.9000854492 4905064.7301025391,1514379.9000854492 4907676.9700927734,1517496.2100830078 4907676.9700927734,1517496.2100830078 4905064.7301025391,1514379.9000854492 4905064.7301025391))'
                    }
                }
                , {
                    'CHIAVARI': {
                        'wkt': 'POLYGON ((1522409.0900878906 4906360.580078125,1522409.0900878906 4910346.3500976563,1528151.1000976563 4910346.3500976563,1528151.1000976563 4906360.580078125,1522409.0900878906 4906360.580078125))'
                    }
                }
                , {
                    'LAVAGNA': {
                        'wkt': 'POLYGON ((1526531.9100952148 4903454.8001098633,1526531.9100952148 4907977.3101196289,1532522.7000732422 4907977.3101196289,1532522.7000732422 4903454.8001098633,1526531.9100952148 4903454.8001098633))'
                    }
                }
                , {
                    'COGORNO': {
                        'wkt': 'POLYGON ((1527745.030090332 4906790.7301025391,1527745.030090332 4910794.030090332,1531702.7000732422 4910794.030090332,1531702.7000732422 4906790.7301025391,1527745.030090332 4906790.7301025391))'
                    }
                }
                , {
                    'LEIVI': {
                        'wkt': 'POLYGON ((1522550.4301147461 4908569.4901123047,1522550.4301147461 4912647.1701049805,1527389.6000976563 4912647.1701049805,1527389.6000976563 4908569.4901123047,1522550.4301147461 4908569.4901123047))'
                    }
                }
                , {
                    'CARASCO': {
                        'wkt': 'POLYGON ((1526502.4600830078 4909705.1701049805,1526502.4600830078 4913601.830078125,1530262.280090332 4913601.830078125,1530262.280090332 4909705.1701049805,1526502.4600830078 4909705.1701049805))'
                    }
                }
                , {
                    'SAN COLOMBANO CERTENOLI': {
                        'wkt': 'POLYGON ((1521539.1901245117 4911490.1101074219,1521539.1901245117 4920639.3601074219,1529158.580078125 4920639.3601074219,1529158.580078125 4911490.1101074219,1521539.1901245117 4911490.1101074219))'
                    }
                }
                , {
                    'MEZZANEGO': {
                        'wkt': 'POLYGON ((1527944.6301269531 4912610.9000854492,1527944.6301269531 4918441.9901123047,1536377.3001098633 4918441.9901123047,1536377.3001098633 4912610.9000854492,1527944.6301269531 4912610.9000854492))'
                    }
                }
                , {
                    'NE': {
                        'wkt': 'POLYGON ((1529781.4600830078 4906825.6201171875,1529781.4600830078 4916606.3500976562,1541296.1801147461 4916606.3500976562,1541296.1801147461 4906825.6201171875,1529781.4600830078 4906825.6201171875))'
                    }
                }
                , {
                    'BARGAGLI': {
                        'wkt': 'POLYGON ((1503874.4301147461 4917625.8801269531,1503874.4301147461 4923141.0100708008,1509779.6400756836 4923141.0100708008,1509779.6400756836 4917625.8801269531,1503874.4301147461 4917625.8801269531))'
                    }
                }
                , {
                    'DAVAGNA': {
                        'wkt': 'POLYGON ((1502680.580078125 4920720.6201171875,1502680.580078125 4926581.7000732422,1509849.7901000977 4926581.7000732422,1509849.7901000977 4920720.6201171875,1502680.580078125 4920720.6201171875))'
                    }
                }
                , {
                    'NEIRONE': {
                        'wkt': 'POLYGON ((1512178.0900878906 4919929.5200805664,1512178.0900878906 4927156.5900878906,1518600.3001098633 4927156.5900878906,1518600.3001098633 4919929.5200805664,1512178.0900878906 4919929.5200805664))'
                    }
                }
                , {
                    'CASTIGLIONE CHIAVARESE': {
                        'wkt': 'POLYGON ((1537661.0100708008 4900045.8701171875,1537661.0100708008 4906507.2901000977,1545927.3601074219 4906507.2901000977,1545927.3601074219 4900045.8701171875,1537661.0100708008 4900045.8701171875))'
                    }
                }
                , {
                    'CASARZA LIGURE': {
                        'wkt': 'POLYGON ((1534623.5701293945 4899994.1301269531,1534623.5701293945 4908279.780090332,1541671.6500854492 4908279.780090332,1541671.6500854492 4899994.1301269531,1534623.5701293945 4899994.1301269531))'
                    }
                }
                , {
                    'RONCO SCRIVIA': {
                        'wkt': 'POLYGON ((1491480.3900756836 4935407.4700927734,1491480.3900756836 4941919.780090332,1500306.6000976562 4941919.780090332,1500306.6000976562 4935407.4700927734,1491480.3900756836 4935407.4700927734))'
                    }
                }
                , {
                    'FAVALE DI MALVARO': {
                        'wkt': 'POLYGON ((1517669.1600952148 4920489.7600708008,1517669.1600952148 4925197.7700805664,1523597.3500976562 4925197.7700805664,1523597.3500976562 4920489.7600708008,1517669.1600952148 4920489.7600708008))'
                    }
                }
                , {
                    'GENOVA': {
                        'wkt': 'POLYGON ((1473438.8101196289 4913934.6600952148,1473438.8101196289 4929637.030090332,1507639.5001220703 4929637.030090332,1507639.5001220703 4913934.6600952148,1473438.8101196289 4913934.6600952148))'
                    }
                }
            ]
        },
        'IMPERIA': {
            'municipality': [{
                    'VENTIMIGLIA': {
                        'wkt': 'POLYGON ((1379620.5200805664 4848432.1701049805,1379620.5200805664 4858734.6801147461,1389828.2600708008 4858734.6801147461,1389828.2600708008 4848432.1701049805,1379620.5200805664 4848432.1701049805))'
                    }
                }
                , {
                    'OLIVETTA SAN MICHELE': {
                        'wkt': 'POLYGON ((1379055.5200805664 4855738.7501220703,1379055.5200805664 4861200.9801025391,1383773.5701293945 4861200.9801025391,1383773.5701293945 4855738.7501220703,1379055.5200805664 4855738.7501220703))'
                    }
                }
                , {
                    'SANREMO': {
                        'wkt': 'POLYGON ((1396203.5100708008 4850005.1101074219,1396203.5100708008 4858947.0100708008,1407318.5601196289 4858947.0100708008,1407318.5601196289 4850005.1101074219,1396203.5100708008 4850005.1101074219))'
                    }
                }
                , {
                    'AIROLE': {
                        'wkt': 'POLYGON ((1382302.3801269531 4855825.3500976563,1382302.3801269531 4861875.7600708008,1386246.8801269531 4861875.7600708008,1386246.8801269531 4855825.3500976563,1382302.3801269531 4855825.3500976563))'
                    }
                }
                , {
                    'ROCCHETTA NERVINA': {
                        'wkt': 'POLYGON ((1384263.4000854492 4859397.8001098633,1384263.4000854492 4867304.8701171875,1388965.7700805664 4867304.8701171875,1388965.7700805664 4859397.8001098633,1384263.4000854492 4859397.8001098633))'
                    }
                }
                , {
                    'DOLCEACQUA': {
                        'wkt': 'POLYGON ((1384573.9401245117 4854694.6500854492,1384573.9401245117 4862059.6101074219,1391724.5601196289 4862059.6101074219,1391724.5601196289 4854694.6500854492,1384573.9401245117 4854694.6500854492))'
                    }
                }
                , {
                    'CAMPOROSSO': {
                        'wkt': 'POLYGON ((1386488.6801147461 4848790.3601074219,1386488.6801147461 4855736.3601074219,1390913.0900878906 4855736.3601074219,1390913.0900878906 4848790.3601074219,1386488.6801147461 4848790.3601074219))'
                    }
                }
                , {
                    'VALLECROSIA': {
                        'wkt': 'POLYGON ((1390058.6101074219 4848500.0200805664,1390058.6101074219 4852086.4600830078,1392189.5900878906 4852086.4600830078,1392189.5900878906 4848500.0200805664,1390058.6101074219 4848500.0200805664))'
                    }
                }
                , {
                    'BORDIGHERA': {
                        'wkt': 'POLYGON ((1391082.3400878906 4847831.9500732422,1391082.3400878906 4851871.6301269531,1395611.7901000977 4851871.6301269531,1395611.7901000977 4847831.9500732422,1391082.3400878906 4847831.9500732422))'
                    }
                }
                , {
                    'VALLEBONA': {
                        'wkt': 'POLYGON ((1391980.3801269531 4851231.2401123047,1391980.3801269531 4854562.8601074219,1395407.6600952148 4854562.8601074219,1395407.6600952148 4851231.2401123047,1391980.3801269531 4851231.2401123047))'
                    }
                }
                , {
                    'SOLDANO': {
                        'wkt': 'POLYGON ((1390999.6000976563 4853230.7700805664,1390999.6000976563 4855547.9901123047,1393541.2501220703 4855547.9901123047,1393541.2501220703 4853230.7700805664,1390999.6000976563 4853230.7700805664))'
                    }
                }
                , {
                    'SEBORGA': {
                        'wkt': 'POLYGON ((1393738.5100708008 4852104.0900878906,1393738.5100708008 4855032.0001220703,1396835.830078125 4855032.0001220703,1396835.830078125 4852104.0900878906,1393738.5100708008 4852104.0900878906))'
                    }
                }
                , {
                    'OSPEDALETTI': {
                        'wkt': 'POLYGON ((1395248.0100708008 4849902.3500976563,1395248.0100708008 4853672.6101074219,1398687.4201049805 4853672.6101074219,1398687.4201049805 4849902.3500976563,1395248.0100708008 4849902.3500976563))'
                    }
                }
                , {
                    'PERINALDO': {
                        'wkt': 'POLYGON ((1391248.0701293945 4853884.2401123047,1391248.0701293945 4859424.5100708008,1397495.1901245117 4859424.5100708008,1397495.1901245117 4853884.2401123047,1391248.0701293945 4853884.2401123047))'
                    }
                }
                , {
                    'SAN BIAGIO DELLA CIMA': {
                        'wkt': 'POLYGON ((1390109.1301269531 4850895.5601196289,1390109.1301269531 4855715.7000732422,1392714.5100708008 4855715.7000732422,1392714.5100708008 4850895.5601196289,1390109.1301269531 4850895.5601196289))'
                    }
                }
                , {
                    'PIGNA': {
                        'wkt': 'POLYGON ((1386206.9901123047 4861798.3500976563,1386206.9901123047 4872580.1400756836,1399024.8601074219 4872580.1400756836,1399024.8601074219 4861798.3500976563,1386206.9901123047 4861798.3500976563))'
                    }
                }
                , {
                    'CASTEL VITTORIO': {
                        'wkt': 'POLYGON ((1392970.9301147461 4862907.7401123047,1392970.9301147461 4869519.3900756836,1400419.5701293945 4869519.3900756836,1400419.5701293945 4862907.7401123047,1392970.9301147461 4862907.7401123047))'
                    }
                }
                , {
                    'APRICALE': {
                        'wkt': 'POLYGON ((1386430.530090332 4857717.0601196289,1386430.530090332 4866638.9801025391,1397866.7200927734 4866638.9801025391,1397866.7200927734 4857717.0601196289,1386430.530090332 4857717.0601196289))'
                    }
                }
                , {
                    'ISOLABONA': {
                        'wkt': 'POLYGON ((1386731.7000732422 4858465.4201049805,1386731.7000732422 4866579.1701049805,1393466.4000854492 4866579.1701049805,1393466.4000854492 4858465.4201049805,1386731.7000732422 4858465.4201049805))'
                    }
                }
                , {
                    'BAIARDO': {
                        'wkt': 'POLYGON ((1394412.2901000977 4857720.280090332,1394412.2901000977 4866384.1600952148,1401859.8601074219 4866384.1600952148,1401859.8601074219 4857720.280090332,1394412.2901000977 4857720.280090332))'
                    }
                }
                , {
                    'CERIANA': {
                        'wkt': 'POLYGON ((1397732.9201049805 4855666.3801269531,1397732.9201049805 4863239.4401245117,1404776.0601196289 4863239.4401245117,1404776.0601196289 4855666.3801269531,1397732.9201049805 4855666.3801269531))'
                    }
                }
                , {
                    'TAGGIA': {
                        'wkt': 'POLYGON ((1403496.1801147461 4853448.8400878906,1403496.1801147461 4863035.8601074219,1410125.2200927734 4863035.8601074219,1410125.2200927734 4853448.8400878906,1403496.1801147461 4853448.8400878906))'
                    }
                }
                , {
                    'RIVA LIGURE': {
                        'wkt': 'POLYGON ((1408323.5200805664 4853737.3001098633,1408323.5200805664 4855834.9301147461,1410473.4700927734 4855834.9301147461,1410473.4700927734 4853737.3001098633,1408323.5200805664 4853737.3001098633))'
                    }
                }
                , {
                    'SANTO STEFANO AL MARE': {
                        'wkt': 'POLYGON ((1410386.4401245117 4854221.3601074219,1410386.4401245117 4856285.9901123047,1412992.6101074219 4856285.9901123047,1412992.6101074219 4854221.3601074219,1410386.4401245117 4854221.3601074219))'
                    }
                }
                , {
                    'TERZORIO': {
                        'wkt': 'POLYGON ((1410901.030090332 4855377.1000976563,1410901.030090332 4857612.4500732422,1412629.7301025391 4857612.4500732422,1412629.7301025391 4855377.1000976563,1410901.030090332 4855377.1000976563))'
                    }
                }
                , {
                    'POMPEIANA': {
                        'wkt': 'POLYGON ((1409566.4700927734 4855104.6500854492,1409566.4700927734 4858948.5200805664,1412662.5701293945 4858948.5200805664,1412662.5701293945 4855104.6500854492,1409566.4700927734 4855104.6500854492))'
                    }
                }
                , {
                    'CIPRESSA': {
                        'wkt': 'POLYGON ((1412325.8601074219 4854897.1000976563,1412325.8601074219 4859305.3201293945,1415912.3400878906 4859305.3201293945,1415912.3400878906 4854897.1000976563,1412325.8601074219 4854897.1000976563))'
                    }
                }
                , {
                    'COSTARAINERA': {
                        'wkt': 'POLYGON ((1413837.9901123047 4855450.8001098633,1413837.9901123047 4857381.5100708008,1416459.8101196289 4857381.5100708008,1416459.8101196289 4855450.8001098633,1413837.9901123047 4855450.8001098633))'
                    }
                }
                , {
                    'PIETRABRUNA': {
                        'wkt': 'POLYGON ((1409606.080078125 4858239.2501220703,1409606.080078125 4861525.1201171875,1414918.8601074219 4861525.1201171875,1414918.8601074219 4858239.2501220703,1409606.080078125 4858239.2501220703))'
                    }
                }
                , {
                    'CASTELLARO': {
                        'wkt': 'POLYGON ((1407756.8400878906 4855365.1600952148,1407756.8400878906 4861173.3201293945,1410411.1301269531 4861173.3201293945,1410411.1301269531 4855365.1600952148,1407756.8400878906 4855365.1600952148))'
                    }
                }
                , {
                    'CIVEZZA': {
                        'wkt': 'POLYGON ((1414333.0100708008 4857075.1400756836,1414333.0100708008 4860324.3101196289,1417025.2200927734 4860324.3101196289,1417025.2200927734 4857075.1400756836,1414333.0100708008 4857075.1400756836))'
                    }
                }
                , {
                    'IMPERIA': {
                        'wkt': 'POLYGON ((1415396.6000976563 4856924.6901245117,1415396.6000976563 4866288.7401123047,1425493.1000976563 4866288.7401123047,1425493.1000976563 4856924.6901245117,1415396.6000976563 4856924.6901245117))'
                    }
                }
                , {
                    'DOLCEDO': {
                        'wkt': 'POLYGON ((1409660.9401245117 4859754.8900756836,1409660.9401245117 4863986.6101074219,1417189.1901245117 4863986.6101074219,1417189.1901245117 4859754.8900756836,1409660.9401245117 4859754.8900756836))'
                    }
                }
                , {
                    'SAN LORENZO AL MARE': {
                        'wkt': 'POLYGON ((1415723.4700927734 4855756.2401123047,1415723.4700927734 4857785.8101196289,1417290.2401123047 4857785.8101196289,1417290.2401123047 4855756.2401123047,1415723.4700927734 4855756.2401123047))'
                    }
                }
                , {
                    'BADALUCCO': {
                        'wkt': 'POLYGON ((1401256.0001220703 4861285.9201049805,1401256.0001220703 4866273.7501220703,1409320.9301147461 4866273.7501220703,1409320.9301147461 4861285.9201049805,1401256.0001220703 4861285.9201049805))'
                    }
                }
                , {
                    'MONTALTO LIGURE': {
                        'wkt': 'POLYGON ((1401778.9301147461 4862390.4100952148,1401778.9301147461 4866432.5601196289,1410201.8101196289 4866432.5601196289,1410201.8101196289 4862390.4100952148,1401778.9301147461 4862390.4100952148))'
                    }
                }
                , {
                    'MOLINI DI TRIORA': {
                        'wkt': 'POLYGON ((1399338.1901245117 4865883.5200805664,1399338.1901245117 4877425.7401123047,1407867.6400756836 4877425.7401123047,1407867.6400756836 4865883.5200805664,1399338.1901245117 4865883.5200805664))'
                    }
                }
                , {
                    'CARPASIO': {
                        'wkt': 'POLYGON ((1406070.3900756836 4865060.9301147461,1406070.3900756836 4871069.5501098633,1410801.030090332 4871069.5501098633,1410801.030090332 4865060.9301147461,1406070.3900756836 4865060.9301147461))'
                    }
                }
                , {
                    'BORGOMARO': {
                        'wkt': 'POLYGON ((1408706.3801269531 4867166.4301147461,1408706.3801269531 4872990.2401123047,1417487.2501220703 4872990.2401123047,1417487.2501220703 4867166.4301147461,1408706.3801269531 4867166.4301147461))'
                    }
                }
                , {
                    'PRELA\'': {
                        'wkt': 'POLYGON ((1409741.1801147461 4863219.0601196289,1409741.1801147461 4867328.0100708008,1415706.0001220703 4867328.0100708008,1415706.0001220703 4863219.0601196289,1409741.1801147461 4863219.0601196289))'
                    }
                }
                , {
                    'VASIA': {
                        'wkt': 'POLYGON ((1411148.1500854492 4863110.9801025391,1411148.1500854492 4867873.6301269531,1417317.1201171875 4867873.6301269531,1417317.1201171875 4863110.9801025391,1411148.1500854492 4863110.9801025391))'
                    }
                }
                , {
                    'LUCINASCO': {
                        'wkt': 'POLYGON ((1414605.4901123047 4866342.0401000977,1414605.4901123047 4869820.5401000977,1418593.2100830078 4869820.5401000977,1418593.2100830078 4866342.0401000977,1414605.4901123047 4866342.0401000977))'
                    }
                }
                , {
                    'REZZO': {
                        'wkt': 'POLYGON ((1403902.5501098633 4870985.6101074219,1403902.5501098633 4877000.4100952148,1414004.5100708008 4877000.4100952148,1414004.5100708008 4870985.6101074219,1403902.5501098633 4870985.6101074219))'
                    }
                }
                , {
                    'TRIORA': {
                        'wkt': 'POLYGON ((1392750.3001098633 4868694.4901123047,1392750.3001098633 4881523.0601196289,1402250.5601196289 4881523.0601196289,1402250.5601196289 4868694.4901123047,1392750.3001098633 4868694.4901123047))'
                    }
                }
                , {
                    'AURIGO': {
                        'wkt': 'POLYGON ((1410715.580078125 4869780.580078125,1410715.580078125 4873400.3601074219,1415034.7901000977 4873400.3601074219,1415034.7901000977 4869780.580078125,1410715.580078125 4869780.580078125))'
                    }
                }
                , {
                    'CARAVONICA': {
                        'wkt': 'POLYGON ((1414573.8400878906 4870563.330078125,1414573.8400878906 4873504.5501098633,1417500.2901000977 4873504.5501098633,1417500.2901000977 4870563.330078125,1414573.8400878906 4870563.330078125))'
                    }
                }
                , {
                    'CESIO': {
                        'wkt': 'POLYGON ((1415250.4600830078 4872008.6901245117,1415250.4600830078 4876200.6901245117,1420052.6600952148 4876200.6901245117,1420052.6600952148 4872008.6901245117,1415250.4600830078 4872008.6901245117))'
                    }
                }
                , {
                    'PIEVE DI TECO': {
                        'wkt': 'POLYGON ((1407201.4500732422 4872335.1701049805,1407201.4500732422 4883871.5601196289,1416340.1000976563 4883871.5601196289,1416340.1000976563 4872335.1701049805,1407201.4500732422 4872335.1701049805))'
                    }
                }
                , {
                    'VESSALICO': {
                        'wkt': 'POLYGON ((1415155.2200927734 4875308.8101196289,1415155.2200927734 4882434.1400756836,1418771.5200805664 4882434.1400756836,1418771.5200805664 4875308.8101196289,1415155.2200927734 4875308.8101196289))'
                    }
                }
                , {
                    'BORGHETTO D\'ARROSCIA': {
                        'wkt': 'POLYGON ((1415390.0100708008 4875490.1901245117,1415390.0100708008 4884244.1000976562,1421479.5701293945 4884244.1000976562,1421479.5701293945 4875490.1901245117,1415390.0100708008 4875490.1901245117))'
                    }
                }
                , {
                    'RANZO': {
                        'wkt': 'POLYGON ((1418549.080078125 4877513.4500732422,1418549.080078125 4883636.8601074219,1423057.6400756836 4883636.8601074219,1423057.6400756836 4877513.4500732422,1418549.080078125 4877513.4500732422))'
                    }
                }
                , {
                    'CHIUSANICO': {
                        'wkt': 'POLYGON ((1417240.8500976562 4866871.0001220703,1417240.8500976562 4872408.7600708008,1421465.1000976562 4872408.7600708008,1421465.1000976562 4866871.0001220703,1417240.8500976562 4866871.0001220703))'
                    }
                }
                , {
                    'AQUILA DI ARROSCIA': {
                        'wkt': 'POLYGON ((1416936.7501220703 4879950.8701171875,1416936.7501220703 4885232.8801269531,1422181.4600830078 4885232.8801269531,1422181.4600830078 4879950.8701171875,1416936.7501220703 4879950.8701171875))'
                    }
                }
                , {
                    'ARMO': {
                        'wkt': 'POLYGON ((1410574.3201293945 4881298.6201171875,1410574.3201293945 4884872.280090332,1414759.4401245117 4884872.280090332,1414759.4401245117 4881298.6201171875,1410574.3201293945 4881298.6201171875))'
                    }
                }
                , {
                    'PORNASSIO': {
                        'wkt': 'POLYGON ((1405134.3101196289 4876591.0200805664,1405134.3101196289 4885884.8601074219,1411318.7100830078 4885884.8601074219,1411318.7100830078 4876591.0200805664,1405134.3101196289 4876591.0200805664))'
                    }
                }
                , {
                    'COSIO DI ARROSCIA': {
                        'wkt': 'POLYGON ((1397801.2100830078 4878637.7100830078,1397801.2100830078 4888298.0200805664,1408155.9401245117 4888298.0200805664,1408155.9401245117 4878637.7100830078,1397801.2100830078 4878637.7100830078))'
                    }
                }
                , {
                    'MENDATICA': {
                        'wkt': 'POLYGON ((1397144.3701171875 4877688.0401000977,1397144.3701171875 4886345.8801269531,1405471.7100830078 4886345.8801269531,1405471.7100830078 4877688.0401000977,1397144.3701171875 4877688.0401000977))'
                    }
                }
                , {
                    'MONTEGROSSO PIAN LATTE': {
                        'wkt': 'POLYGON ((1401852.0900878906 4876664.4401245117,1401852.0900878906 4880776.8101196289,1406336.9100952148 4880776.8101196289,1406336.9100952148 4876664.4401245117,1401852.0900878906 4876664.4401245117))'
                    }
                }
                , {
                    'DIANO ARENTINO': {
                        'wkt': 'POLYGON ((1421133.6201171875 4864258.1901245117,1421133.6201171875 4870334.9901123047,1424475.5001220703 4870334.9901123047,1424475.5001220703 4864258.1901245117,1421133.6201171875 4864258.1901245117))'
                    }
                }
                , {
                    'DIANO SAN PIETRO': {
                        'wkt': 'POLYGON ((1422535.9700927734 4863562.1600952148,1422535.9700927734 4870434.7501220703,1426686.7501220703 4870434.7501220703,1426686.7501220703 4863562.1600952148,1422535.9700927734 4863562.1600952148))'
                    }
                }
                , {
                    'VILLA FARALDI': {
                        'wkt': 'POLYGON ((1423804.0001220703 4867055.4500732422,1423804.0001220703 4870564.0001220703,1429137.4600830078 4870564.0001220703,1429137.4600830078 4867055.4500732422,1423804.0001220703 4867055.4500732422))'
                    }
                }
                , {
                    'SAN BARTOLOMEO AL MARE': {
                        'wkt': 'POLYGON ((1425951.9000854492 4863012.1600952148,1425951.9000854492 4868225.8001098633,1429757.6301269531 4868225.8001098633,1429757.6301269531 4863012.1600952148,1425951.9000854492 4863012.1600952148))'
                    }
                }
                , {
                    'CERVO': {
                        'wkt': 'POLYGON ((1428162.6901245117 4863491.6400756836,1428162.6901245117 4865955.3001098633,1430636.280090332 4865955.3001098633,1430636.280090332 4863491.6400756836,1428162.6901245117 4863491.6400756836))'
                    }
                }
                , {
                    'DIANO CASTELLO': {
                        'wkt': 'POLYGON ((1422946.5501098633 4862645.7200927734,1422946.5501098633 4865584.8801269531,1427039.1901245117 4865584.8801269531,1427039.1901245117 4862645.7200927734,1422946.5501098633 4862645.7200927734))'
                    }
                }
                , {
                    'DIANO MARINA': {
                        'wkt': 'POLYGON ((1423625.6600952148 4860204.1400756836,1423625.6600952148 4863966.5601196289,1427284.280090332 4863966.5601196289,1427284.280090332 4860204.1400756836,1423625.6600952148 4860204.1400756836))'
                    }
                }
                , {
                    'CHIUSAVECCHIA': {
                        'wkt': 'POLYGON ((1417688.4100952148 4866061.5501098633,1417688.4100952148 4869799.4000854492,1420604.0001220703 4869799.4000854492,1420604.0001220703 4866061.5501098633,1417688.4100952148 4866061.5501098633))'
                    }
                }
                , {
                    'PONTEDASSIO': {
                        'wkt': 'POLYGON ((1416745.0501098633 4863397.8801269531,1416745.0501098633 4868095.2700805664,1422487.5701293945 4868095.2700805664,1422487.5701293945 4863397.8801269531,1416745.0501098633 4863397.8801269531))'
                    }
                }
            ]
        },
        'LA SPEZIA': {
            'municipality': [{
                    'FRAMURA': {
                        'wkt': 'POLYGON ((1541360.3201293945 4893798.2501220703,1541360.3201293945 4899492.9901123047,1549698.4401245117 4899492.9901123047,1549698.4401245117 4893798.2501220703,1541360.3201293945 4893798.2501220703))'
                    }
                }
                , {
                    'BONASSOLA': {
                        'wkt': 'POLYGON ((1544832.3601074219 4891111.3201293945,1544832.3601074219 4896088.9801025391,1548253.6301269531 4896088.9801025391,1548253.6301269531 4891111.3201293945,1544832.3601074219 4891111.3201293945))'
                    }
                }
                , {
                    'LEVANTO': {
                        'wkt': 'POLYGON ((1547502.1201171875 4886900.5501098633,1547502.1201171875 4897380.4901123047,1554755.7501220703 4897380.4901123047,1554755.7501220703 4886900.5501098633,1547502.1201171875 4886900.5501098633))'
                    }
                }
                , {
                    'MONTEROSSO AL MARE': {
                        'wkt': 'POLYGON ((1549959.2700805664 4886912.3201293945,1549959.2700805664 4892725.8400878906,1556132.7200927734 4892725.8400878906,1556132.7200927734 4886912.3201293945,1549959.2700805664 4886912.3201293945))'
                    }
                }
                , {
                    'RIOMAGGIORE': {
                        'wkt': 'POLYGON ((1557375.4600830078 4881402.7100830078,1557375.4600830078 4886471.7100830078,1562069.3801269531 4886471.7100830078,1562069.3801269531 4881402.7100830078,1557375.4600830078 4881402.7100830078))'
                    }
                }
                , {
                    'LA SPEZIA': {
                        'wkt': 'POLYGON ((1561151.580078125 4879289.4301147461,1561151.580078125 4889066.9301147461,1571454.7401123047 4889066.9301147461,1571454.7401123047 4879289.4301147461,1561151.580078125 4879289.4301147461))'
                    }
                }
                , {
                    'PORTOVENERE': {
                        'wkt': 'POLYGON ((1564348.5701293945 4874821.1901245117,1564348.5701293945 4881490.9301147461,1568804.5601196289 4881490.9301147461,1568804.5601196289 4874821.1901245117,1564348.5701293945 4874821.1901245117))'
                    }
                }
                , {
                    'LERICI': {
                        'wkt': 'POLYGON ((1570272.8201293945 4877612.4801025391,1570272.8201293945 4883494.6301269531,1577412.2501220703 4883494.6301269531,1577412.2501220703 4877612.4801025391,1570272.8201293945 4877612.4801025391))'
                    }
                }
                , {
                    'AMEGLIA': {
                        'wkt': 'POLYGON ((1575523.2501220703 4876283.8101196289,1575523.2501220703 4881374.830078125,1580046.4901123047 4881374.830078125,1580046.4901123047 4876283.8101196289,1575523.2501220703 4876283.8101196289))'
                    }
                }
                , {
                    'DEIVA MARINA': {
                        'wkt': 'POLYGON ((1540914.8201293945 4895801.1701049805,1540914.8201293945 4900587.9600830078,1546533.580078125 4900587.9600830078,1546533.580078125 4895801.1701049805,1540914.8201293945 4895801.1701049805))'
                    }
                }
                , {
                    'VERNAZZA': {
                        'wkt': 'POLYGON ((1553253.9000854492 4885251.2100830078,1553253.9000854492 4890386.1201171875,1558385.3201293945 4890386.1201171875,1558385.3201293945 4885251.2100830078,1553253.9000854492 4885251.2100830078))'
                    }
                }
                , {
                    'CARRODANO': {
                        'wkt': 'POLYGON ((1546122.9401245117 4896156.9600830078,1546122.9401245117 4901285.2600708008,1554791.7000732422 4901285.2600708008,1554791.7000732422 4896156.9600830078,1546122.9401245117 4896156.9600830078))'
                    }
                }
                , {
                    'BORGHETTO DI VARA': {
                        'wkt': 'POLYGON ((1551554.1701049805 4893762.6701049805,1551554.1701049805 4899570.5701293945,1560360.2301025391 4899570.5701293945,1560360.2301025391 4893762.6701049805,1551554.1701049805 4893762.6701049805))'
                    }
                }
                , {
                    'PIGNONE': {
                        'wkt': 'POLYGON ((1553588.3601074219 4888743.4100952148,1553588.3601074219 4895291.2700805664,1559267.4700927734 4895291.2700805664,1559267.4700927734 4888743.4100952148,1553588.3601074219 4888743.4100952148))'
                    }
                }
                , {
                    'BEVERINO': {
                        'wkt': 'POLYGON ((1556369.8400878906 4888963.7901000977,1556369.8400878906 4897532.6101074219,1565984.5501098633 4897532.6101074219,1565984.5501098633 4888963.7901000977,1556369.8400878906 4888963.7901000977))'
                    }
                }
                , {
                    'RICCO\' DEL GOLFO DI SPEZIA': {
                        'wkt': 'POLYGON ((1557143.9401245117 4883977.1600952148,1557143.9401245117 4891855.780090332,1565041.0200805664 4891855.780090332,1565041.0200805664 4883977.1600952148,1557143.9401245117 4883977.1600952148))'
                    }
                }
                , {
                    'BRUGNATO': {
                        'wkt': 'POLYGON ((1555494.9600830078 4896528.4700927734,1555494.9600830078 4900806.3801269531,1561029.7000732422 4900806.3801269531,1561029.7000732422 4896528.4700927734,1555494.9600830078 4896528.4700927734))'
                    }
                }
                , {
                    'SARZANA': {
                        'wkt': 'POLYGON ((1574598.3701171875 4877356.1101074219,1574598.3701171875 4891157.2501220703,1582269.6101074219 4891157.2501220703,1582269.6101074219 4877356.1101074219,1574598.3701171875 4877356.1101074219))'
                    }
                }
                , {
                    'ORTONOVO': {
                        'wkt': 'POLYGON ((1580088.2301025391 4878668.3400878906,1580088.2301025391 4885248.7700805664,1585802.2100830078 4885248.7700805664,1585802.2100830078 4878668.3400878906,1580088.2301025391 4878668.3400878906))'
                    }
                }
                , {
                    'CASTELNUOVO MAGRA': {
                        'wkt': 'POLYGON ((1579489.0200805664 4879547.2501220703,1579489.0200805664 4885637.5501098633,1583751.330078125 4885637.5501098633,1583751.330078125 4879547.2501220703,1579489.0200805664 4879547.2501220703))'
                    }
                }
                , {
                    'SANTO STEFANO DI MAGRA': {
                        'wkt': 'POLYGON ((1571573.1901245117 4886560.1901245117,1571573.1901245117 4891182.6701049805,1576716.2000732422 4891182.6701049805,1576716.2000732422 4886560.1901245117,1571573.1901245117 4886560.1901245117))'
                    }
                }
                , {
                    'ARCOLA': {
                        'wkt': 'POLYGON ((1570322.030090332 4881851.3801269531,1570322.030090332 4886957.1101074219,1576269.1600952148 4886957.1101074219,1576269.1600952148 4881851.3801269531,1570322.030090332 4881851.3801269531))'
                    }
                }
                , {
                    'VEZZANO LIGURE': {
                        'wkt': 'POLYGON ((1567357.5900878906 4885728.4301147461,1567357.5900878906 4891508.8601074219,1574975.4100952148 4891508.8601074219,1574975.4100952148 4885728.4301147461,1567357.5900878906 4885728.4301147461))'
                    }
                }
                , {
                    'BOLANO': {
                        'wkt': 'POLYGON ((1569154.5471191406 4889634.780090332,1569154.5471191406 4895653.4700927734,1574688.5401000977 4895653.4700927734,1574688.5401000977 4889634.780090332,1569154.5471191406 4889634.780090332))'
                    }
                }
                , {
                    'FOLLO': {
                        'wkt': 'POLYGON ((1564216.7100830078 4888041.0501098633,1564216.7100830078 4894440.5701293945,1570108.9000854492 4894440.5701293945,1570108.9000854492 4888041.0501098633,1564216.7100830078 4888041.0501098633))'
                    }
                }
                , {
                    'CALICE AL CORNOVIGLIO': {
                        'wkt': 'POLYGON ((1563778.6101074219 4893798.4000854492,1563778.6101074219 4903514.2501220703,1569732.7301025391 4903514.2501220703,1569732.7301025391 4893798.4000854492,1563778.6101074219 4893798.4000854492))'
                    }
                }
                , {
                    'ROCCHETTA DI VARA': {
                        'wkt': 'POLYGON ((1559640.0900878906 4895169.7700805664,1559640.0900878906 4905169.8900756836,1565610.8500976563 4905169.8900756836,1565610.8500976563 4895169.7700805664,1559640.0900878906 4895169.7700805664))'
                    }
                }
                , {
                    'ZIGNAGO': {
                        'wkt': 'POLYGON ((1556787.3101196289 4899682.6201171875,1556787.3101196289 4908671.0701293945,1562576.0401000977 4908671.0701293945,1562576.0401000977 4899682.6201171875,1556787.3101196289 4899682.6201171875))'
                    }
                }
                , {
                    'SESTA GODANO': {
                        'wkt': 'POLYGON ((1550906.5401000977 4898990.530090332,1550906.5401000977 4912816.4401245117,1558257.1400756836 4912816.4401245117,1558257.1400756836 4898990.530090332,1550906.5401000977 4898990.530090332))'
                    }
                }
                , {
                    'CARRO': {
                        'wkt': 'POLYGON ((1545264.1201171875 4899826.8701171875,1545264.1201171875 4906627.2700805664,1553285.0601196289 4906627.2700805664,1553285.0601196289 4899826.8701171875,1545264.1201171875 4899826.8701171875))'
                    }
                }
                , {
                    'VARESE LIGURE': {
                        'wkt': 'POLYGON ((1537123.0200805664 4904253.0900878906,1537123.0200805664 4921087.8101196289,1553815.8900756836 4921087.8101196289,1553815.8900756836 4904253.0900878906,1537123.0200805664 4904253.0900878906))'
                    }
                }
                , {
                    'MAISSANA': {
                        'wkt': 'POLYGON ((1539826.0701293945 4902204.3500976563,1539826.0701293945 4913909.9100952148,1547627.9700927734 4913909.9100952148,1547627.9700927734 4902204.3500976563,1539826.0701293945 4902204.3500976563))'
                    }
                }
            ]
        },
        'SAVONA': {
            'municipality': [{
                    'ANDORA': {
                        'wkt': 'POLYGON ((1426064.0001220703 4865402.6400756836,1426064.0001220703 4874122.0501098633,1433751.4000854492 4874122.0501098633,1433751.4000854492 4865402.6400756836,1426064.0001220703 4865402.6400756836))'
                    }
                }
                , {
                    'LAIGUEGLIA': {
                        'wkt': 'POLYGON ((1431529.3801269531 4867240.9600830078,1431529.3801269531 4871523.580078125,1433768.1901245117 4871523.580078125,1433768.1901245117 4867240.9600830078,1431529.3801269531 4867240.9600830078))'
                    }
                }
                , {
                    'ALASSIO': {
                        'wkt': 'POLYGON ((1429807.9000854492 4871086.4500732422,1429807.9000854492 4876405.8801269531,1436615.3801269531 4876405.8801269531,1436615.3801269531 4871086.4500732422,1429807.9000854492 4871086.4500732422))'
                    }
                }
                , {
                    'STELLANELLO': {
                        'wkt': 'POLYGON ((1420299.7401123047 4870043.9301147461,1420299.7401123047 4874277.7000732422,1427523.7700805664 4874277.7000732422,1427523.7700805664 4870043.9301147461,1420299.7401123047 4870043.9301147461))'
                    }
                }
                , {
                    'TESTICO': {
                        'wkt': 'POLYGON ((1418990.4201049805 4871226.8500976562,1418990.4201049805 4874922.7600708008,1423869.5100708008 4874922.7600708008,1423869.5100708008 4871226.8500976562,1418990.4201049805 4871226.8500976562))'
                    }
                }
                , {
                    'CASANOVA LERRONE': {
                        'wkt': 'POLYGON ((1418057.8701171875 4873459.1400756836,1418057.8701171875 4878676.9700927734,1426294.9700927734 4878676.9700927734,1426294.9700927734 4873459.1400756836,1418057.8701171875 4873459.1400756836))'
                    }
                }
                , {
                    'GARLENDA': {
                        'wkt': 'POLYGON ((1425604.6201171875 4873937.3400878906,1425604.6201171875 4877185.9801025391,1429675.2401123047 4877185.9801025391,1429675.2401123047 4873937.3400878906,1425604.6201171875 4873937.3400878906))'
                    }
                }
                , {
                    'VILLANOVA D\'ALBENGA': {
                        'wkt': 'POLYGON ((1425988.5100708008 4873624.3201293945,1425988.5100708008 4879229.530090332,1433231.0701293945 4879229.530090332,1433231.0701293945 4873624.3201293945,1425988.5100708008 4873624.3201293945))'
                    }
                }
                , {
                    'ALBENGA': {
                        'wkt': 'POLYGON ((1427909.8201293945 4874723.6400756836,1427909.8201293945 4883457.5601196289,1438290.4301147461 4883457.5601196289,1438290.4301147461 4874723.6400756836,1427909.8201293945 4874723.6400756836))'
                    }
                }
                , {
                    'ORTOVERO': {
                        'wkt': 'POLYGON ((1422826.0900878906 4877277.4801025391,1422826.0900878906 4880372.9201049805,1429711.9500732422 4880372.9201049805,1429711.9500732422 4877277.4801025391,1422826.0900878906 4877277.4801025391))'
                    }
                }
                , {
                    'ONZO': {
                        'wkt': 'POLYGON ((1422476.780090332 4878380.1801147461,1422476.780090332 4883820.2301025391,1425566.4201049805 4883820.2301025391,1425566.4201049805 4878380.1801147461,1422476.780090332 4878380.1801147461))'
                    }
                }
                , {
                    'VENDONE': {
                        'wkt': 'POLYGON ((1423689.4901123047 4879113.4100952148,1423689.4901123047 4883898.1201171875,1427741.9201049805 4883898.1201171875,1427741.9201049805 4879113.4100952148,1423689.4901123047 4879113.4100952148))'
                    }
                }
                , {
                    'ARNASCO': {
                        'wkt': 'POLYGON ((1426618.5601196289 4879792.9401245117,1426618.5601196289 4882903.080078125,1430683.0001220703 4882903.080078125,1430683.0001220703 4879792.9401245117,1426618.5601196289 4879792.9401245117))'
                    }
                }
                , {
                    'CISANO SUL NEVA': {
                        'wkt': 'POLYGON ((1428295.5001220703 4879447.4401245117,1428295.5001220703 4884612.7700805664,1433769.3400878906 4884612.7700805664,1433769.3400878906 4879447.4401245117,1428295.5001220703 4879447.4401245117))'
                    }
                }
                , {
                    'CERIALE': {
                        'wkt': 'POLYGON ((1432830.4901123047 4880218.4301147461,1432830.4901123047 4884619.8601074219,1439041.780090332 4884619.8601074219,1439041.780090332 4880218.4301147461,1432830.4901123047 4880218.4301147461))'
                    }
                }
                , {
                    'ZUCCARELLO': {
                        'wkt': 'POLYGON ((1427115.5001220703 4882130.5100708008,1427115.5001220703 4886323.5501098633,1432866.0900878906 4886323.5501098633,1432866.0900878906 4882130.5100708008,1427115.5001220703 4882130.5100708008))'
                    }
                }
                , {
                    'CASTELBIANCO': {
                        'wkt': 'POLYGON ((1423609.8900756836 4882430.7100830078,1423609.8900756836 4887393.1500854492,1428998.2301025391 4887393.1500854492,1428998.2301025391 4882430.7100830078,1423609.8900756836 4882430.7100830078))'
                    }
                }
                , {
                    'NASINO': {
                        'wkt': 'POLYGON ((1418315.3500976563 4883260.4000854492,1418315.3500976563 4889699.9201049805,1424345.7000732422 4889699.9201049805,1424345.7000732422 4883260.4000854492,1418315.3500976563 4883260.4000854492))'
                    }
                }
                , {
                    'BALESTRINO': {
                        'wkt': 'POLYGON ((1431471.580078125 4884285.7901000977,1431471.580078125 4887781.3001098633,1435789.2401123047 4887781.3001098633,1435789.2401123047 4884285.7901000977,1431471.580078125 4884285.7901000977))'
                    }
                }
                , {
                    'BORGHETTO SANTO SPIRITO': {
                        'wkt': 'POLYGON ((1435823.9201049805 4883550.8900756836,1435823.9201049805 4886734.830078125,1439968.030090332 4886734.830078125,1439968.030090332 4883550.8900756836,1435823.9201049805 4883550.8900756836))'
                    }
                }
                , {
                    'ERLI': {
                        'wkt': 'POLYGON ((1423572.9901123047 4885748.9700927734,1423572.9901123047 4891674.7100830078,1429153.6101074219 4891674.7100830078,1429153.6101074219 4885748.9700927734,1423572.9901123047 4885748.9700927734))'
                    }
                }
                , {
                    'CASTELVECCHIO DI ROCCA BARBENA': {
                        'wkt': 'POLYGON ((1427675.0701293945 4885139.080078125,1427675.0701293945 4891887.080078125,1432417.6301269531 4891887.080078125,1432417.6301269531 4885139.080078125,1427675.0701293945 4885139.080078125))'
                    }
                }
                , {
                    'TOIRANO': {
                        'wkt': 'POLYGON ((1431041.9600830078 4884369.2000732422,1431041.9600830078 4891052.8201293945,1438350.7301025391 4891052.8201293945,1438350.7301025391 4884369.2000732422,1431041.9600830078 4884369.2000732422))'
                    }
                }
                , {
                    'BOISSANO': {
                        'wkt': 'POLYGON ((1433359.3101196289 4886193.5001220703,1433359.3101196289 4891900.3801269531,1439193.030090332 4891900.3801269531,1439193.030090332 4886193.5001220703,1433359.3101196289 4886193.5001220703))'
                    }
                }
                , {
                    'LOANO': {
                        'wkt': 'POLYGON ((1435041.9301147461 4885110.9500732422,1435041.9301147461 4891900.3801269531,1441783.080078125 4891900.3801269531,1441783.080078125 4885110.9500732422,1435041.9301147461 4885110.9500732422))'
                    }
                }
                , {
                    'PIETRA LIGURE': {
                        'wkt': 'POLYGON ((1435092.580078125 4887608.5701293945,1435092.580078125 4891949.4100952148,1444297.3101196289 4891949.4100952148,1444297.3101196289 4887608.5701293945,1435092.580078125 4887608.5701293945))'
                    }
                }
                , {
                    'GIUSTENICE': {
                        'wkt': 'POLYGON ((1434018.5401000977 4889704.9500732422,1434018.5401000977 4894724.6801147461,1442288.1301269531 4894724.6801147461,1442288.1301269531 4889704.9500732422,1434018.5401000977 4889704.9500732422))'
                    }
                }
                , {
                    'BARDINETO': {
                        'wkt': 'POLYGON ((1427156.2100830078 4890394.1600952148,1427156.2100830078 4896273.9201049805,1435198.5900878906 4896273.9201049805,1435198.5900878906 4890394.1600952148,1427156.2100830078 4890394.1600952148))'
                    }
                }
                , {
                    'TOVO SAN GIACOMO': {
                        'wkt': 'POLYGON ((1439551.1600952148 4890179.1000976562,1439551.1600952148 4895206.8701171875,1443891.2600708008 4895206.8701171875,1443891.2600708008 4890179.1000976562,1439551.1600952148 4890179.1000976562))'
                    }
                }
                , {
                    'BORGIO VEREZZI': {
                        'wkt': 'POLYGON ((1443346.9000854492 4889425.1701049805,1443346.9000854492 4891503.3001098633,1445932.3500976562 4891503.3001098633,1445932.3500976562 4889425.1701049805,1443346.9000854492 4889425.1701049805))'
                    }
                }
                , {
                    'FINALE LIGURE': {
                        'wkt': 'POLYGON ((1442236.9801025391 4889909.4100952148,1442236.9801025391 4896587.8101196289,1453295.5100708008 4896587.8101196289,1453295.5100708008 4889909.4100952148,1442236.9801025391 4889909.4100952148))'
                    }
                }
                , {
                    'NOLI': {
                        'wkt': 'POLYGON ((1449902.2200927734 4893182.3001098633,1449902.2200927734 4898271.1000976563,1454104.5601196289 4898271.1000976563,1454104.5601196289 4893182.3001098633,1449902.2200927734 4893182.3001098633))'
                    }
                }
                , {
                    'SPOTORNO': {
                        'wkt': 'POLYGON ((1449701.3201293945 4896210.2000732422,1449701.3201293945 4899355.8801269531,1455009.0401000977 4899355.8801269531,1455009.0401000977 4896210.2000732422,1449701.3201293945 4896210.2000732422))'
                    }
                }
                , {
                    'VEZZI PORTIO': {
                        'wkt': 'POLYGON ((1445323.3601074219 4894905.9700927734,1445323.3601074219 4902067.6000976562,1450943.2501220703 4902067.6000976562,1450943.2501220703 4894905.9700927734,1445323.3601074219 4894905.9700927734))'
                    }
                }
                , {
                    'ORCO FEGLINO': {
                        'wkt': 'POLYGON ((1442915.3400878906 4894815.3400878906,1442915.3400878906 4901471.6600952148,1448668.0001220703 4901471.6600952148,1448668.0001220703 4894815.3400878906,1442915.3400878906 4894815.3400878906))'
                    }
                }
                , {
                    'CALICE LIGURE': {
                        'wkt': 'POLYGON ((1440607.6101074219 4893483.030090332,1440607.6101074219 4902455.9401245117,1445741.2100830078 4902455.9401245117,1445741.2100830078 4893483.030090332,1440607.6101074219 4893483.030090332))'
                    }
                }
                , {
                    'RIALTO': {
                        'wkt': 'POLYGON ((1435957.4500732422 4894822.280090332,1435957.4500732422 4899839.1600952148,1444012.3801269531 4899839.1600952148,1444012.3801269531 4894822.280090332,1435957.4500732422 4894822.280090332))'
                    }
                }
                , {
                    'MAGLIOLO': {
                        'wkt': 'POLYGON ((1433870.9500732422 4892564.4600830078,1433870.9500732422 4899312.0501098633,1440851.6901245117 4899312.0501098633,1440851.6901245117 4892564.4600830078,1433870.9500732422 4892564.4600830078))'
                    }
                }
                , {
                    'CALIZZANO': {
                        'wkt': 'POLYGON ((1425308.330078125 4894841.2501220703,1425308.330078125 4903628.030090332,1436396.6801147461 4903628.030090332,1436396.6801147461 4894841.2501220703,1425308.330078125 4894841.2501220703))'
                    }
                }
                , {
                    'MASSIMINO': {
                        'wkt': 'POLYGON ((1424926.830078125 4902730.2000732422,1424926.830078125 4907113.8801269531,1428465.2200927734 4907113.8801269531,1428465.2200927734 4902730.2000732422,1424926.830078125 4902730.2000732422))'
                    }
                }
                , {
                    'MURIALDO': {
                        'wkt': 'POLYGON ((1427643.4000854492 4901972.8701171875,1427643.4000854492 4909515.3801269531,1436215.3801269531 4909515.3801269531,1436215.3801269531 4901972.8701171875,1427643.4000854492 4901972.8701171875))'
                    }
                }
                , {
                    'OSIGLIA': {
                        'wkt': 'POLYGON ((1432669.7401123047 4899141.8001098633,1432669.7401123047 4908211.4500732422,1438957.8801269531 4908211.4500732422,1438957.8801269531 4899141.8001098633,1432669.7401123047 4899141.8001098633))'
                    }
                }
                , {
                    'BORMIDA': {
                        'wkt': 'POLYGON ((1435675.4000854492 4898591.7901000977,1435675.4000854492 4905625.4401245117,1441638.5200805664 4905625.4401245117,1441638.5200805664 4898591.7901000977,1435675.4000854492 4898591.7901000977))'
                    }
                }
                , {
                    'MALLARE': {
                        'wkt': 'POLYGON ((1440126.2301025391 4900595.1701049805,1440126.2301025391 4908430.0701293945,1446745.6400756836 4908430.0701293945,1446745.6400756836 4900595.1701049805,1440126.2301025391 4900595.1701049805))'
                    }
                }
                , {
                    'QUILIANO': {
                        'wkt': 'POLYGON ((1445643.3001098633 4900219.580078125,1445643.3001098633 4909489.6801147461,1455463.6400756836 4909489.6801147461,1455463.6400756836 4900219.580078125,1445643.3001098633 4900219.580078125))'
                    }
                }
                , {
                    'VADO LIGURE': {
                        'wkt': 'POLYGON ((1447145.3900756836 4898442.0900878906,1447145.3900756836 4903411.8801269531,1456092.9600830078 4903411.8801269531,1456092.9600830078 4898442.0900878906,1447145.3900756836 4898442.0900878906))'
                    }
                }
                , {
                    'ALTARE': {
                        'wkt': 'POLYGON ((1445309.1000976563 4903688.830078125,1445309.1000976563 4910974.7301025391,1448878.4100952148 4910974.7301025391,1448878.4100952148 4903688.830078125,1445309.1000976563 4903688.830078125))'
                    }
                }
                , {
                    'CARCARE': {
                        'wkt': 'POLYGON ((1441259.8701171875 4908398.0501098633,1441259.8701171875 4912835.7200927734,1445709.1301269531 4912835.7200927734,1445709.1301269531 4908398.0501098633,1441259.8701171875 4908398.0501098633))'
                    }
                }
                , {
                    'PALLARE': {
                        'wkt': 'POLYGON ((1437145.780090332 4904959.8201293945,1437145.780090332 4910160.830078125,1445081.8201293945 4910160.830078125,1445081.8201293945 4904959.8201293945,1437145.780090332 4904959.8201293945))'
                    }
                }
                , {
                    'MILLESIMO': {
                        'wkt': 'POLYGON ((1434445.0900878906 4907415.3701171875,1434445.0900878906 4914430.2200927734,1438637.8601074219 4914430.2200927734,1438637.8601074219 4907415.3701171875,1434445.0900878906 4907415.3701171875))'
                    }
                }
                , {
                    'PLODIO': {
                        'wkt': 'POLYGON ((1438040.9801025391 4909403.6801147461,1438040.9801025391 4912704.5701293945,1442055.2401123047 4912704.5701293945,1442055.2401123047 4909403.6801147461,1438040.9801025391 4909403.6801147461))'
                    }
                }
                , {
                    'BERGEGGI': {
                        'wkt': 'POLYGON ((1453167.0401000977 4897984.7600708008,1453167.0401000977 4901752.330078125,1456634.9401245117 4901752.330078125,1456634.9401245117 4897984.7600708008,1453167.0401000977 4897984.7600708008))'
                    }
                }
                , {
                    'ROCCAVIGNALE': {
                        'wkt': 'POLYGON ((1431193.4700927734 4908183.5900878906,1431193.4700927734 4913870.4201049805,1436177.530090332 4913870.4201049805,1436177.530090332 4908183.5900878906,1431193.4700927734 4908183.5900878906))'
                    }
                }
                , {
                    'CENGIO': {
                        'wkt': 'POLYGON ((1432132.0100708008 4913244.4201049805,1432132.0100708008 4919537.2401123047,1440115.2200927734 4919537.2401123047,1440115.2200927734 4913244.4201049805,1432132.0100708008 4913244.4201049805))'
                    }
                }
                , {
                    'COSSERIA': {
                        'wkt': 'POLYGON ((1437101.1400756836 4911650.7901000977,1437101.1400756836 4915969.9801025391,1443398.3400878906 4915969.9801025391,1443398.3400878906 4911650.7901000977,1437101.1400756836 4911650.7901000977))'
                    }
                }
                , {
                    'SAVONA': {
                        'wkt': 'POLYGON ((1447634.7501220703 4903257.5701293945,1447634.7501220703 4915175.0501098633,1460489.2200927734 4915175.0501098633,1460489.2200927734 4903257.5701293945,1447634.7501220703 4903257.5701293945))'
                    }
                }
                , {
                    'ALBISSOLA MARINA': {
                        'wkt': 'POLYGON ((1457915.2700805664 4907657.7359008789,1457915.2700805664 4910203.5601196289,1460864.6600952148 4910203.5601196289,1460864.6600952148 4907657.7359008789,1457915.2700805664 4907657.7359008789))'
                    }
                }
                , {
                    'ALBISOLA SUPERIORE': {
                        'wkt': 'POLYGON ((1453269.0401000977 4908411.7200927734,1453269.0401000977 4916117.9600830078,1462267.7200927734 4916117.9600830078,1462267.7200927734 4908411.7200927734,1453269.0401000977 4908411.7200927734))'
                    }
                }
                , {
                    'CELLE LIGURE': {
                        'wkt': 'POLYGON ((1461404.9301147461 4908816.8400878906,1461404.9301147461 4913975.5401000977,1465369.8601074219 4913975.5401000977,1465369.8601074219 4908816.8400878906,1461404.9301147461 4908816.8400878906))'
                    }
                }
                , {
                    'VARAZZE': {
                        'wkt': 'POLYGON ((1461209.0200805664 4910627.0200805664,1461209.0200805664 4920162.9901123047,1470833.6701049805 4920162.9901123047,1470833.6701049805 4910627.0200805664,1461209.0200805664 4910627.0200805664))'
                    }
                }
                , {
                    'CAIRO MONTENOTTE': {
                        'wkt': 'POLYGON ((1436988.5100708008 4910638.5100708008,1436988.5100708008 4922829.080078125,1454781.6301269531 4922829.080078125,1454781.6301269531 4910638.5100708008,1436988.5100708008 4910638.5100708008))'
                    }
                }
                , {
                    'DEGO': {
                        'wkt': 'POLYGON ((1436098.3801269531 4916560.3701171875,1436098.3801269531 4926722.0100708008,1452561.1400756836 4926722.0100708008,1452561.1400756836 4916560.3701171875,1436098.3801269531 4916560.3701171875))'
                    }
                }
                , {
                    'PIANA CRIXIA': {
                        'wkt': 'POLYGON ((1437726.830078125 4923985.9201049805,1437726.830078125 4930870.5601196289,1447328.8500976563 4930870.5601196289,1447328.8500976563 4923985.9201049805,1437726.830078125 4923985.9201049805))'
                    }
                }
                , {
                    'GIUSVALLA': {
                        'wkt': 'POLYGON ((1448735.6000976562 4918933.7100830078,1448735.6000976562 4925063.7301025391,1454496.5701293945 4925063.7301025391,1454496.5701293945 4918933.7100830078,1448735.6000976562 4918933.7100830078))'
                    }
                }
                , {
                    'PONTINVREA': {
                        'wkt': 'POLYGON ((1452292.8801269531 4915906.6301269531,1452292.8801269531 4923905.6801147461,1458759.5501098633 4923905.6801147461,1458759.5501098633 4915906.6301269531,1452292.8801269531 4915906.6301269531))'
                    }
                }
                , {
                    'STELLA': {
                        'wkt': 'POLYGON ((1455489.0501098633 4911814.6101074219,1455489.0501098633 4920950.9401245117,1465088.2301025391 4920950.9401245117,1465088.2301025391 4911814.6101074219,1455489.0501098633 4911814.6101074219))'
                    }
                }
                , {
                    'SASSELLO': {
                        'wkt': 'POLYGON ((1454791.2600708008 4919506.1500854492,1454791.2600708008 4930007.6901245117,1473817.9700927734 4930007.6901245117,1473817.9700927734 4919506.1500854492,1454791.2600708008 4919506.1500854492))'
                    }
                }
                , {
                    'MIOGLIA': {
                        'wkt': 'POLYGON ((1450389.0001220703 4923433.3500976563,1450389.0001220703 4929122.4500732422,1457455.6400756836 4929122.4500732422,1457455.6400756836 4923433.3500976563,1450389.0001220703 4923433.3500976563))'
                    }
                }
                , {
                    'URBE': {
                        'wkt': 'POLYGON ((1465249.0200805664 4922012.8900756836,1465249.0200805664 4928499.5001220703,1473846.9100952148 4928499.5001220703,1473846.9100952148 4922012.8900756836,1465249.0200805664 4922012.8900756836))'
                    }
                }
                , ]
        }
    },

    enumStatoLoc: {
        "1": {value: "Localizzazione per civico eseguita correttamente."},
        "2": {value: "Localizzazione per incrocio eseguita correttamente."},
        "3": {value: "Localizzazione per progressiva chilometrica eseguita correttamente."},
        "4": {value: "Localizzazione per coordinate eseguita correttamente."},
        "5": {value: "Localizzazione testuale eseguita correttamente."},
        "-1": {value: "Il normalizzatore non ha identificato il toponimo. Modificare il toponimo e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-2": {value: "Il normalizzatore non ha identificato il civico in maniera univoca. Scegliere tra i civici trovati dal normalizzatore e rieseguire la localizzazione o forzare localizzazione manuale."},
        "-3": {value: "Il normalizzatore non ha identificato il civico. Modificare il civico e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-4": {value: "Il normalizzatore non ha identificato il civico in maniera univoca. Scegliere tra i civici trovati dal normalizzatore e rieseguire la localizzazione o forzare localizzazione manuale."},
        "-5": {value: "Il normalizzatore non ha identificato l'incrocio. Modificare le informazioni dei toponimi e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-6": {value: "Il normalizzatore non ha identificato l'incrocio in maniera univoca. Modificare le informazioni dei toponimi e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-7": {value: "Il normalizzatore non ha identificato il toponimo. Modificare il toponimo e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-8": {value: "Il normalizzatore non ha identificato il toponimo in maniera univoca. Scegliere tra uno dei toponimi trovati dal normalizzatore e rieseguire la localizzazione o forzare localizzazione manuale."},
        "-9": {value: "La chilometrica risulta fuori dal range consentito. Modificare la chilometrica  e rieseseguire la localizzazione o forzare la localizzazione manuale. Il range consentito e' il seguente:"},
        "-10": {value: "Localizzazione non effettuata"},
        "-11": {value: "Al toponimo selezionato non corrisponde una calibrazione chilometrica. E' possibile indicare manualmente le coordinate dell'incidente effettuando una localizzazione manuale sul percorso della strada evidenziata in mappa."},
        "-12": {value: "Al toponimo selezionato non corrisponde una calibrazione chilometrica e non ÃƒÂ¨ stato identificato un toponimo in maniera univoca. E' possibile selezionare uno dei toponimi indicati ed effettuare una localizzazione da coordinate indicando un punto sul percorso corrispondente evidenziato in mappa."},
        "-1001": {value: "Il normalizzatore non ha identificato il toponimo. Modificare il toponimo e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-1002": {value: "Il normalizzatore non ha identificato il toponimo in maniera univoca. Scegliere tra uno dei toponimi trovati dal normalizzatore e rieseguire la localizzazione o forzare localizzazione manuale."},
        "-1003": {value: "Il normalizzatore non ha identificato il civico. Modificare il civico e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-1004": {value: "Il normalizzatore non ha identificato il civico in maniera univoca. Scegliere tra i civici trovati dal normalizzatore e rieseguire la localizzazione o forzare localizzazione manuale."},
        "-1005": {value: "Il normalizzatore non ha identificato l'incrocio. Modificare le informazioni dei toponimi e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-1006": {value: "Il normalizzatore non ha identificato l'incrocio in maniera univoca. Modificare le informazioni dei toponimi e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-1007": {value: "Il normalizzatore non ha identificato il toponimo. Modificare il toponimo e rieseseguire la localizzazione o forzare la localizzazione manuale."},
        "-1008": {value: "Il normalizzatore non ha identificato il toponimo in maniera univoca. Scegliere tra uno dei toponimi trovati dal normalizzatore e rieseguire la localizzazione o forzare localizzazione manuale."},
        "-1009": {value: "La chilometrica risulta fuori dal range consentito. Modificare la chilometrica  e rieseseguire la localizzazione o forzare la localizzazione manuale. Il range consentito e' il seguente:"},
        "-16": {value: "Coordinate derivate dalla localizzazione al di fuori del confine comunale."},
        "-17": {value: "Coordinate derivate dalla localizzazione al di fuori del confine regionale."},
        "-18": {value: "Coordinate derivate dalla localizzazione al di fuori del confine comunale."},
        "-19": {value: "Coordinate derivate dalla localizzazione al di fuori del confine regionale."},
        "-20": {value: "Coordinate derivate dalla localizzazione al di fuori del confine comunale."},
        "-21": {value: "Coordinate derivate dalla localizzazione al di fuori del confine regionale."},
        "-22": {value: "Coordinate derivate dalla localizzazione al di fuori del confine comunale."},
        "-23": {value: "Coordinate derivate dalla localizzazione al di fuori del confine regionale."}
    },
    elapsedTime: 0,
    waitObj: null,
    locked: false,
    type: OpenLayers.Control.TYPE_TOGGLE,
    autoActivate: true,
    id: null,
    div: null,
    geocodingUrl: null,
    localizzatoreUrl: null,
    normalizzatoreUrl: null,
    normHandle: null,
    normId: null,
    defaultHandle: false,
    namespace_uri_openls: 'http://www.opengis.net/xls',
    namespace_prefix_openls: 'xls',
    namespace_uri_gml: 'http://www.opengis.net/gml',
    namespace_prefix_gml: 'gml',
    markers: null,
    popup: null,
    resultIcon: null,
    searchIcon: null,
    locList: '',
    selectLoc: null,
    fieldset: null,
    fieldsetCampiRicerca: null,
    handle: null,
    idLRS: null,
    idMap: null,
    Km: null,
    KmTemp: null,
    KmMin: null,
    KmMax: null,
    comuneLoc: null,
    provinciaLoc: null,
    sEntitaId: null,
    sRange: null,
    sKm: null,
    x: null,
    y: null,
    xCerca: null,
    yCerca: null,
    src: null,
    dst: null,
    sRif: null,
    hasKm: false,
    repeatLocKm: false,
    foundLocKm: false,
    hasInverseGeoreference: false,
    hasCheckComune: false,
    hasNumeroStrada: false,
    hasCerca: false,
    hasLuoghiNotevoli: false,
    hasStrada: false,
    hasLocalita: false,
    hasLocalizzazione: true,
    hasSalvaCoordinate: false,
    provComDisabled: true,
    rifGeoCiv: null,
    tempResult: null,
    loadingPanel: null,
    defaultHandlerOptions: {
        'single': true,
        'double': false,
        'pixelTolerance': 5,
        'stopSingle': false,
        'stopDouble': false
    },
    //campi hidden
    provinciaHidden: null,
    comuneHidden: null,
    denomStradaHidden: null,
    denomStrada2Hidden: null,
    numCivicoHidden: null,
    subCivicoHidden: null,
    sigStradaHidden: null,
    numeroStradaHidden: null,
    kmHidden: null,
    XHidden: null,
    YHidden: null,
    statoLocalizzazioneHidden: null,
    tipoLocalizzazioneHidden: null,
    idStradaHidden: null,
    idCivicoHidden: null,
    idStrada2Hidden: null,
    idNodoHidden: null,
    localizzazioneHidden: null,
    infoRdvmJson: null,
    initialize: function (options) {
        //inizializzazione campi hidden
        this.provinciaHidden = document.getElementById("provinciaHidden");
        this.comuneHidden = document.getElementById("comuneHidden");
        this.denomStradaHidden = document.getElementById("denomStradaHidden");
        this.denomStrada2Hidden = document.getElementById("denomStrada2Hidden");
        this.numCivicoHidden = document.getElementById("numCivicoHidden");
        this.subCivicoHidden = document.getElementById("subCivicoHidden");
        this.sigStradaHidden = document.getElementById("sigStradaHidden");
        this.numeroStradaHidden = document.getElementById("numeroStradaHidden");
        this.kmHidden = document.getElementById("kmHidden");
        this.XHidden = document.getElementById("XHidden");
        this.YHidden = document.getElementById("YHidden");
        this.statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
        this.tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
        this.idStradaHidden = document.getElementById("idStradaHidden");
        this.idCivicoHidden = document.getElementById("idCivicoHidden");
        this.idStrada2Hidden = document.getElementById("idStrada2Hidden");
        this.idNodoHidden = document.getElementById("idNodoHidden");
        this.localizzazioneHidden = document.getElementById("localizzazioneHidden");

        //Proj4js.defs["EPSG:900000"] = "+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=500000 +y_0=-4000000 +ellps=intl +units=m +no_defs";
        //Proj4js.defs["EPSG:4258"] = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs";
        //Proj4js.defs["EPSG:4326"] = "+proj=longlat +ellps=GRS80 +no_defs";
        //Proj4js.defs["EPSG:4326"] = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs";
        //this.src = new Proj4js.Proj("EPSG:900000");  
        //this.dst = new Proj4js.Proj("EPSG:4326"); 
        this.handlerOptions = OpenLayers.Util.extend({}, this.defaultHandlerOptions);
        OpenLayers.Control.prototype.initialize.apply(this, [options]);
        this.handler = new OpenLayers.Handler.Click(this, {'click': this.onClick}, this.handlerOptions);
        if (this.hasKm)
        {
            if (this.hasLuoghiNotevoli)
            {
                if (this.hasStrada)
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Luogo notevole': 'Luogo notevole',
                            'Strada': 'Strada',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Luogo notevole': 'Luogo notevole',
                            'Strada': 'Strada',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                } else
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Luogo notevole': 'Luogo notevole',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Luogo notevole': 'Luogo notevole',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                }
            } else
            {
                if (this.hasStrada)
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Strada': 'Strada',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Strada': 'Strada',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                } else
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Chilometrica': 'Chilometrica',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                }
            }
        } else
        {
            if (this.hasLuoghiNotevoli)
            {
                if (this.hasStrada)
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Luogo notevole': 'Luogo notevole',
                            'Strada': 'Strada',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Luogo notevole': 'Luogo notevole',
                            'Strada': 'Strada',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                } else
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Luogo notevole': 'Luogo notevole',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Luogo notevole': 'Luogo notevole',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                }
            } else
            {
                if (this.hasStrada)
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Strada': 'Strada',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Strada': 'Strada',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                } else
                {
                    if (this.hasLocalita)
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Localita': 'Localita',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    } else
                    {
                        this.locList = {
                            'Seleziona': 'Seleziona',
                            'Civico': 'Civico',
                            'Incrocio': 'Incrocio',
                            'Coordinate': 'Coordinate',
                            'Solo testo': 'Solo testo'
                        };
                    }
                }
            }
        }
        this.events.register("activate", this, this.onActivate);
        this.events.register("deactivate", this, this.onDeactivate);
        this.id = OpenLayers.Util.createUniqueID(this.CLASS_NAME + "_");
        this.markers = new OpenLayers.Layer.Markers(this.id + " Markers");
        this.markers.displayInLayerSwitcher = false;
        var successGetHandleFunc = this.successGetHandle.bind(this);
        if (this.defaultHandle)
        {
            var url = this.localizzatoreUrl + 'initNormalizzatoreDefaultJson' + "?callback=?";
            $.getJSON(url, {}, successGetHandleFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Errore durante l\'inizializzazione del normalizzatore; impossibile effettuare localizzazioni; ' + errorThrown + "; " + jqXHR + "; " + textStatus);
            });
        } else if (this.normHandle)
        {
            this.handle = this.normHandle;
        } else if (this.normId)
        {
            var url = this.localizzatoreUrl + 'initNormalizzatoreWithIdJson' + "?id=" + this.normId + "&callback=?";
            $.getJSON(url, {}, successGetHandleFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Errore durante l\'inizializzazione del normalizzatore; impossibile effettuare localizzazioni; ' + errorThrown + "; " + jqXHR + "; " + textStatus);
            });
        } else
        {
            var url = this.localizzatoreUrl + 'initNormalizzatoreJson' + "?address=" + this.normalizzatoreUrl +
                    "&user=" + this.normUser + "&password=" + this.normPwd + "&callback=?";
            $.getJSON(url, {}, successGetHandleFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Errore durante l\'inizializzazione del normalizzatore; impossibile effettuare localizzazioni; ' + errorThrown + "; " + jqXHR + "; " + textStatus);
            });
        }
    },
    getRdvmInfoJson: function () {

    },
    successGetHandle: function (handle) {
        this.handle = handle.handle;
        if (this.handle == null || this.handle.includes("Errore"))
        {
            alert("Normalizzatore non inizializzato; impossibile effettuare localizzazioni");
            return;
        }
    },
    showInfo: function (evt) {
        if (evt.features && evt.features.length) {
            /*highlightLayer.destroyFeatures();
             highlightLayer.addFeatures(evt.features);
             highlightLayer.redraw();*/
            alert(evt.text);
        } else {
            //document.getElementById('responseText').innerHTML = evt.text;
            alert(evt.text);
        }
    },
    onClick: function (e) {
        //this.loadingPanel.maximizeControl();
        //this.loadingPanel.div.style.display="block";
        //this.loadingPanel.maximized=true;

        this.locked = false;
        var lonlat = this.map.getLonLatFromPixel(e.xy);
        var point = new Proj4js.Point(lonlat.lon, lonlat.lat);
        if (this.selectLoc.value == 'Civico' ||
                this.selectLoc.value == 'Incrocio' ||
                this.selectLoc.value == 'Chilometrica' ||
                this.selectLoc.value == 'Luogo notevole' ||
                this.selectLoc.value == 'Strada' ||
                this.selectLoc.value == 'Localita')
        {
            if (this.map.CLASS_NAME == "Localizzatore.RERMap")
            {
                point.x = point.x + 0.00097;
                point.y = point.y + 0.00012;
            }
            Proj4js.transform(this.dst, this.src, point);
            if (this.map != null) {
                if (this.map.getLayer(this.markers.id) == null) {
                    this.map.addLayer(this.markers);
                }
            }

            if (this.selectLoc.value == 'Civico' && this.hasInverseGeoreference)
            {
                if (this.map.projection.projCode != "EPSG:202003")
                {
                    Proj4js.transform(new Proj4js.Proj(this.map.projection.projCode), new Proj4js.Proj("EPSG:202003"), point);
                }
                var context = {
                    geocodingObject: this
                };

                var successInvokeLocalizzaFromMapFunc = this.successLocalizzazione.bind(context);
                var url = this.localizzatoreUrl + 'geolocInversaJson' + "?p_tipo_loc=Civici&p_check_comune=true&" +
                        "p_x=" + point.x + "&p_y=" + point.y +
                        "&p_tipo_coord=" + this.sRif + "&p_rif_geo_civ=" + this.rifGeoCiv +
                        "&p_handle=" + this.handle + "&p_idMap=" + this.idMap + "&p_idLrs=" + this.idLRS + "&callback=?"

                $.getJSON(url, {}, successInvokeLocalizzaFromMapFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            }

            if (this.selectLoc.value == 'Strada' && this.hasInverseGeoreference)
            {
                var context = {
                    tipoLoc: 'Strada',
                    x: lonlat.lon,
                    y: lonlat.lat,
                    xCiv: point.x,
                    yCiv: point.y,
                    geocodingObject: this
                };

                var successQueryRect4Func = this.successQueryRect4.bind(context);

                var x1 = point.x - 2;
                var y1 = point.y - 2;
                var x2 = point.x + 2;
                var y2 = point.y + 2;
                var url = this.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.idMap +
                        "&x1=" + x1 +
                        "&y1=" + y1 +
                        "&x2=" + x2 +
                        "&y2=" + y2 +
                        "&layers=" + 'TOPONIMI_STRADE' +
                        "&maxResult=" + 1 +
                        "&callback=?";

                $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            }

            if (this.selectLoc.value == 'Incrocio' && this.hasInverseGeoreference)
            {
                if (this.map.projection.projCode != "EPSG:202003")
                {
                    Proj4js.transform(new Proj4js.Proj(this.map.projection.projCode), new Proj4js.Proj("EPSG:202003"), point);
                }

                var context = {
                    geocodingObject: this
                };

                var successInvokeLocalizzaFromMapFunc = this.successLocalizzazione.bind(context);
                var url = this.localizzatoreUrl + 'geolocInversaJson' + "?p_tipo_loc=Incrocio&p_check_comune=true&" +
                        "p_x=" + point.x + "&p_y=" + point.y +
                        "&p_tipo_coord=" + this.sRif + "&p_rif_geo_civ=" + this.rifGeoCiv +
                        "&p_handle=" + this.handle + "&p_idMap=" + this.idMap + "&p_idLrs=" + this.idLRS + "&callback=?"

                $.getJSON(url, {}, successInvokeLocalizzaFromMapFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            }
            if (this.selectLoc.value == 'Chilometrica' && this.hasInverseGeoreference)
            {
                if (this.map.projection.projCode != "EPSG:202003")
                {
                    Proj4js.transform(new Proj4js.Proj(this.map.projection.projCode), new Proj4js.Proj("EPSG:202003"), point);
                }

                var context = {
                    geocodingObject: this
                };

                var successInvokeLocalizzaFromMapFunc = this.successLocalizzazione.bind(context);
                var url = this.localizzatoreUrl + 'geolocInversaJson' + "?p_tipo_loc=Chilometrica&p_check_comune=true&" +
                        "p_x=" + point.x + "&p_y=" + point.y +
                        "&p_tipo_coord=" + this.sRif + "&p_rif_geo_civ=" + this.rifGeoCiv +
                        "&p_handle=" + this.handle + "&p_idMap=" + this.idMap + "&p_idLrs=" + this.idLRS + "&callback=?"

                $.getJSON(url, {}, successInvokeLocalizzaFromMapFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            }
            if (this.selectLoc.value == 'Luogo notevole' && this.hasInverseGeoreference)
            {
                //ricavo provincia e comune
                var context = {
                    tipoLoc: 'Comune',
                    x: lonlat.lon,
                    y: lonlat.lat,
                    geocodingObject: this
                };
                var successQueryRect4Func = this.successQueryRect4.bind(context);

                var x1 = point.x - 2;
                var y1 = point.y - 2;
                var x2 = point.x + 2;
                var y2 = point.y + 2;

                var url = this.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.idMap +
                        "&x1=" + x1 +
                        "&y1=" + y1 +
                        "&x2=" + x2 +
                        "&y2=" + y2 +
                        "&layers=" + 'COMUNI' +
                        "&maxResult=" + 1 +
                        "&callback=?";

                $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });

                context = {
                    tipoLoc: 'Luogo notevole',
                    x1: point.x - 2,
                    y1: point.y - 2,
                    x2: point.x + 2,
                    y2: point.y + 2,
                    geocodingObject: this
                };

                successQueryRect4Func = this.successQueryRect4.bind(context);
                var waitFunc = this.wait.bind(context);
                this.waitObj = setInterval(waitFunc, 500);
            }
            if (this.selectLoc.value == 'Strada' && this.hasInverseGeoreference)
            {
                //ricavo provincia e comune
                var context = {
                    tipoLoc: 'Comune',
                    x: lonlat.lon,
                    y: lonlat.lat,
                    geocodingObject: this
                };
                var successQueryRect4Func = this.successQueryRect4.bind(context);

                var x1 = point.x - 2;
                var y1 = point.y - 2;
                var x2 = point.x + 2;
                var y2 = point.y + 2;

                var url = this.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.idMap +
                        "&x1=" + x1 +
                        "&y1=" + y1 +
                        "&x2=" + x2 +
                        "&y2=" + y2 +
                        "&layers=" + 'COMUNI' +
                        "&maxResult=" + 1 +
                        "&callback=?";

                $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });

                context = {
                    tipoLoc: 'Strada',
                    x1: point.x - 2,
                    y1: point.y - 2,
                    x2: point.x + 2,
                    y2: point.y + 2,
                    geocodingObject: this
                };

                successQueryRect4Func = this.successQueryRect4.bind(context);
                var waitFunc = this.wait.bind(context);
                this.waitObj = setInterval(waitFunc, 500);
            }
            if (this.selectLoc.value == 'Localita' && this.hasInverseGeoreference)
            {
                //ricavo provincia e comune
                var context = {
                    tipoLoc: 'Comune',
                    x: lonlat.lon,
                    y: lonlat.lat,
                    geocodingObject: this
                };
                var successQueryRect4Func = this.successQueryRect4.bind(context);

                var x1 = point.x - 2;
                var y1 = point.y - 2;
                var x2 = point.x + 2;
                var y2 = point.y + 2;

                var url = this.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.idMap +
                        "&x1=" + x1 +
                        "&y1=" + y1 +
                        "&x2=" + x2 +
                        "&y2=" + y2 +
                        "&layers=" + 'COMUNI' +
                        "&maxResult=" + 1 +
                        "&callback=?";

                $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });

                context = {
                    tipoLoc: 'Localita',
                    x1: point.x - 2,
                    y1: point.y - 2,
                    x2: point.x + 2,
                    y2: point.y + 2,
                    geocodingObject: this
                };

                successQueryRect4Func = this.successQueryRect4.bind(context);
                var waitFunc = this.wait.bind(context);
                this.waitObj = setInterval(waitFunc, 500);
            }
        }
        if (this.selectLoc.value == 'Coordinate')
        {
            if (!document.getElementById("testoLoc").value || document.getElementById("testoLoc").value.trim().length == 0)
            {
                alert("Il campo toponimo non puo' essere vuoto.");
                return;
            }
            var point = new Proj4js.Point(lonlat.lon, lonlat.lat);
            if (this.map.CLASS_NAME == "Localizzatore.RERMap")
            {
                point.x = point.x + 0.00097;
                point.y = point.y + 0.00012;
            }

            Proj4js.transform(this.dst, this.src, point);
            if (this.map.projection.projCode != "EPSG:202003")
            {
                Proj4js.transform(new Proj4js.Proj(this.map.projection.projCode), new Proj4js.Proj("EPSG:202003"), point);
            }


            var popupContentHTML = null;
            var feature = new OpenLayers.Feature(this.markers, new OpenLayers.LonLat(lonlat.lon, lonlat.lat));
            document.getElementById("x").value = lonlat.lon;
            document.getElementById("y").value = lonlat.lat;
            if (this.hasSalvaCoordinate)
            {
                var text = 'x: ' + lonlat.lon + '; y: ' + lonlat.lat;

                var context = {
                    geocodingObject: this,
                    text: text
                };
                var salvaBtn = document.getElementById("salvaBtn");
                salvaBtn.style.visibility = 'visible';
                OpenLayers.Event.observe(salvaBtn, "click", this.salvaCoord.bind(context));
            }

            feature.closeBox = true;
            feature.popupClass = new OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
                'autoSize': true,
                'minSize': new OpenLayers.Size(200, 130)
            });
            if (!document.getElementById("testoLoc").value)
                popupContentHTML = "x: " + point.x + "; y: " + point.y;
            else
                popupContentHTML = document.getElementById("testoLoc").value;

            var context = {
                geocodingObject: this,
                point: point,
                lonlat: lonlat,
                feature: feature,
                popupContentHTML: popupContentHTML
            };

            var successInvokeLocalizzaFromMapFunc = this.successLocalizzazione.bind(context);
            var url = this.localizzatoreUrl + 'geolocInversaJson' + "?p_tipo_loc=Coordinate&p_check_comune=" + this.hasCheckComune + "&" +
                    "p_x=" + point.x + "&p_y=" + point.y +
                    "&p_tipo_coord=" + this.sRif + "&p_rif_geo_civ=" + this.rifGeoCiv +
                    "&p_handle=" + this.handle + "&p_idMap=" + this.idMap + "&p_idLrs=" + this.idLRS + "&callback=?"

            $.getJSON(url, {}, successInvokeLocalizzaFromMapFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });


            //this.checkComune.bind(this);
            //this.checkComune(point);

            /*try
             {
             var comune = document.getElementById("comuneHidden").value.toUpperCase();
             if (comune != this.comuneLoc && this.hasCheckComune)
             {
             this.resetCampiHidden();
             document.getElementById("x").value = point.x;
             document.getElementById("y").value = point.y;
             if (!document.getElementById("testoLoc").value)
             document.getElementById("testoLoc").value = "x: " + point.x + "; y: " + point.y;
             try
             {
             document.getElementById("statoLocalizzazioneHidden").value = '-22';
             document.getElementById("tipoLocalizzazioneHidden").value = '4';
             document.getElementById("localizzazioneHidden").value = popupContentHTML;
             document.getElementById("XHidden").value = point.x;
             document.getElementById("YHidden").value = point.y;
             document.getElementById("comuneLocHidden").value = this.comuneLoc;
             document.getElementById("provinciaLocHidden").value = this.provinciaLoc;
             document.getElementById("denomStradaHidden").value = popupContentHTML;
             
             document.getElementById("labelLocalizzazioneDesc").innerText = popupContentHTML;
             document.getElementById("labelEsitoLoc").style.visibility = 'visible';
             document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
             document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
             document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
             document.getElementById("idDivStatoLoc").innerText = this.enumStatoLoc["-22"].value;
             } catch (e) {
             }
             } else
             {
             this.resetCampiHidden();
             document.getElementById("x").value = point.x;
             document.getElementById("y").value = point.y;
             if (!document.getElementById("testoLoc").value)
             document.getElementById("testoLoc").value = "x: " + point.x + "; y: " + point.y;
             try
             {
             document.getElementById("statoLocalizzazioneHidden").value = '4';
             document.getElementById("tipoLocalizzazioneHidden").value = '4';
             document.getElementById("localizzazioneHidden").value = popupContentHTML;
             document.getElementById("XHidden").value = point.x;
             document.getElementById("YHidden").value = point.y;
             document.getElementById("denomStradaHidden").value = popupContentHTML;
             
             document.getElementById("labelLocalizzazioneDesc").innerText = popupContentHTML;
             document.getElementById("labelEsitoLoc").style.visibility = 'visible';
             document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
             document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
             document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
             document.getElementById("idDivStatoLoc").innerText = this.enumStatoLoc["4"].value;
             } catch (e) {
             }
             }
             } catch (e) {
             }
             
             if (this.map.getLayer(this.markers.id) == null)
             this.map.addLayer(this.markers);
             
             this.markers.clearMarkers();
             var popupClass = new OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
             'autoSize': true,
             'minSize': new OpenLayers.Size(200, 130)
             });
             
             feature.data.popupContentHTML = popupContentHTML;
             feature.data.overflow = "hidden";
             try
             {
             if (document.getElementById("statoLocalizzazioneHidden").value == '4')
             feature.data.icon = this.resultIcon.clone();
             else
             feature.data.icon = this.searchIcon.clone();
             } catch (e)
             {
             feature.data.icon = this.resultIcon.clone();
             }
             
             var marker = feature.createMarker();
             
             this.markers.addMarker(marker);
             if (marker.popup == null) {
             marker.popup = feature.createPopup(feature.closeBox);
             this.popup = marker.popup;
             this.map.addPopup(marker.popup);
             }
             marker.popup.hide();
             var markerClick = function (evt) {
             this.popup.toggle();
             OpenLayers.Event.stop(evt);
             };
             var context = {
             reverseGeocodingObject: this
             };
             marker.events.register("click", feature, markerClick);
             marker.events.register('dblclick', feature, this.stopevent);
             marker.events.register('mousedown', feature, this.stopevent);*/
        }
        //this.loadingPanel.minimizeControl();
    },
    wait: function () {
        if (this.geocodingObject.locked)
        {
            this.geocodingObject.elapsedTime += 500;
            if (this.geocodingObject.elapsedTime == 30000)
            {
                clearInterval(this.geocodingObject.waitObj);
                this.geocodingObject.elapsedTime = 0;
                alert("Timeout dell'operazione");
            }
            return;
        }
        clearInterval(this.geocodingObject.waitObj);
        this.geocodingObject.elapsedTime = 0;

        var successQueryRect4Func = this.geocodingObject.successQueryRect4.bind(this);

        var x1;
        var y1;
        var x2;
        var y2;

        if (this.tipoLoc == 'Incrocio')
        {
            x1 = this.x1 - 5;
            y1 = this.y1 - 5;
            x2 = this.x2 + 5;
            y2 = this.y2 + 5;
            var url = this.geocodingObject.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.geocodingObject.idMap +
                    "&x1=" + x1 +
                    "&y1=" + y1 +
                    "&x2=" + x2 +
                    "&y2=" + y2 +
                    "&layers=" + 'TOPONIMI_STRADE' +
                    "&maxResult=" + 5 +
                    "&callback=?";

            $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        } else if (this.tipoLoc == 'Luogo notevole')
        {
            x1 = this.x1 - 2;
            y1 = this.y1 - 2;
            x2 = this.x2 + 2;
            y2 = this.y2 + 2;
            var url = this.geocodingObject.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.geocodingObject.idMap +
                    "&x1=" + x1 +
                    "&y1=" + y1 +
                    "&x2=" + x2 +
                    "&y2=" + y2 +
                    "&layers=" + 'POI' +
                    "&maxResult=" + 1 +
                    "&callback=?";

            $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        } else if (this.tipoLoc == 'Strade')
        {
            x1 = this.x1 - 2;
            y1 = this.y1 - 2;
            x2 = this.x2 + 2;
            y2 = this.y2 + 2;
            var url = this.geocodingObject.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.geocodingObject.idMap +
                    "&x1=" + x1 +
                    "&y1=" + y1 +
                    "&x2=" + x2 +
                    "&y2=" + y2 +
                    "&layers=" + 'TOPONIMI_STRADE' +
                    "&maxResult=" + 1 +
                    "&callback=?";

            $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        } else if (this.tipoLoc == 'Localita')
        {
            x1 = this.x1 - 2;
            y1 = this.y1 - 2;
            x2 = this.x2 + 2;
            y2 = this.y2 + 2;
            var url = this.geocodingObject.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.geocodingObject.idMap +
                    "&x1=" + x1 +
                    "&y1=" + y1 +
                    "&x2=" + x2 +
                    "&y2=" + y2 +
                    "&layers=" + 'LOCALITA' +
                    "&maxResult=" + 1 +
                    "&callback=?";

            $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        } else if (this.tipoLoc == 'QueryXY')
        {
            var toll = 100;
            if (!this.geocodingObject.KmTemp || (this.geocodingObject.KmTemp - this.geocodingObject.Km < -toll || this.geocodingObject.Km - this.geocodingObject.KmTemp > toll)) {
                this.geocodingObject.reset();
                this.geocodingObject.x = null;
                this.geocodingObject.y = null;
                this.geocodingObject.statoLoc = "-9";
                alert('Progressiva inserita al di fuori del range consentito (' + this.geocodingObject.parseKmString('' + this.geocodingObject.KmMin / 1000).sKmF + '; ' + this.geocodingObject.parseKmString('' + this.geocodingObject.KmMax / 1000).sKmF + ')');
            }
            //progressiva corretta
            else {
                this.geocodingObject.statoLoc = "3";
                this.geocodingObject.x = this.x;
                this.geocodingObject.y = this.y;
            }
        }
    },
    onActivate: function () {
        this.div.style.display = 'block';
        //this.map.getControlsByClass('OpenLayers.Control.WMSGetFeatureInfo')[0].activate();
    },
    onDeactivate: function () {
        this.div.style.display = 'none';
        var divresults = document.getElementById('divresults');
        if (divresults) {
            divresults.innerHTML = '';
        }
        this.reset();
        //this.map.getControlsByClass('OpenLayers.Control.WMSGetFeatureInfo')[0].deactivate();
    },
    draw: function () {
        if (this.div != null) {
            OpenLayers.Control.prototype.draw.apply(this, arguments);
            this.div.className = this.CLASS_NAME.replace(/\./g, "");
            this.div.style.display = 'none';

            //localizzazione
            if (this.hasLocalizzazione)
            {
                this.fieldset = document.createElement('fieldset');
                //this.fieldset.style.width="400px";
                this.div.appendChild(this.fieldset);
                var legend = document.createElement('legend');
                this.fieldset.appendChild(legend);
                //var txt=document.createTextNode(Localizzatore.i18n('localizzazioneLegendText'));
                var txt = document.createTextNode("Modalita' di localizzazione");
                legend.appendChild(txt);

                //Div scelta localizzazione
                var divSceltaTipoLoc = document.createElement('div');
                divSceltaTipoLoc.className = this.CLASS_NAME.replace(/\./g, "") + 'DivSelect';
                this.selectLoc = document.createElement('select');
                this.selectLoc.id = 'select_loc';
                this.selectLoc.className = this.div.className + 'SelectLoc';
                for (var item in this.locList) {
                    var option = document.createElement("option");
                    option.text = this.locList[item];
                    option.value = item;
                    try {
                        this.selectLoc.add(option, null);
                    } catch (e) {
                        this.selectLoc.add(option);
                    }
                }
                divSceltaTipoLoc.appendChild(this.selectLoc);
                OpenLayers.Event.observe(this.selectLoc, "change", this.onChange.bind({
                    //selectFrom:selectFrom,
                    //divsrsto:divsrsto,
                    geocodingObject: this
                }));
                this.fieldset.appendChild(divSceltaTipoLoc);
            }

            //abilito o meno la ricerca libera su mappa
            if (this.hasCerca)
            {
                this.creaFieldsetCerca();
            }
        }
        return this.div;
    },
    creaFieldsetCerca: function () {
        var fieldsetCerca = document.createElement('fieldset');
        fieldsetCerca.id = 'fieldsetCerca';
        this.div.appendChild(fieldsetCerca);
        var legendCerca = document.createElement('legend');
        fieldsetCerca.appendChild(legendCerca);
        var txtCerca = document.createTextNode("Ricerca libera");
        legendCerca.appendChild(txtCerca);

        //campi
        var inputProvinciaCerca = document.createElement('input');
        inputProvinciaCerca.id = 'provinciaCerca';
        //var provinciaHidden = document.getElementById("provinciaHidden");
        if (this.provinciaHidden != 'undefined' && this.provinciaHidden != null && this.provinciaHidden.value != 'undefined' && this.provinciaHidden.value != null && this.provinciaHidden.value.length > 0)
            inputProvinciaCerca.value = this.provinciaHidden.value.toUpperCase().trim();
        var labelProvinciaCerca = document.createElement('label');
        labelProvinciaCerca.innerHTML = 'Provincia: ';

        var inputComuneCerca = document.createElement('input');
        inputComuneCerca.id = 'comuneCerca';
        //var comuneHidden = document.getElementById("comuneHidden");
        if (this.comuneHidden != 'undefined' && this.comuneHidden != null && this.comuneHidden.value != 'undefined' && this.comuneHidden.value != null && this.comuneHidden.value.length > 0)
            inputComuneCerca.value = this.comuneHidden.value.toUpperCase().trim();
        var labelComuneCerca = document.createElement('label');
        labelComuneCerca.innerHTML = 'Comune: ';

        var inputToponimoCerca = document.createElement('input');
        inputToponimoCerca.id = 'toponimoCerca';
        //var denomStradaHidden = document.getElementById("denomStradaHidden");
        //if (denomStradaHidden != 'undefined' && denomStradaHidden != null && denomStradaHidden.value != 'undefined' && denomStradaHidden.value != null && denomStradaHidden.value.length > 0)
        //    inputToponimo1.value = denomStradaHidden.value.toUpperCase().trim(); 
        var labelToponimoCerca = document.createElement('label');
        labelToponimoCerca.innerHTML = 'Via: ';

        fieldsetCerca.appendChild(labelProvinciaCerca);
        fieldsetCerca.appendChild(inputProvinciaCerca);
        fieldsetCerca.appendChild(document.createElement('br'));
        fieldsetCerca.appendChild(labelComuneCerca);
        fieldsetCerca.appendChild(inputComuneCerca);
        fieldsetCerca.appendChild(document.createElement('br'));
        fieldsetCerca.appendChild(labelToponimoCerca);
        fieldsetCerca.appendChild(inputToponimoCerca);
        fieldsetCerca.appendChild(document.createElement('br'));

        var context = {
            fieldComuneCerca: inputComuneCerca,
            fieldProvinciaCerca: inputProvinciaCerca,
            fieldToponimoCerca: inputToponimoCerca,
            geocodingObject: this
        };

        var searchBtn = document.createElement('input');
        searchBtn.className = 'inputButton';
        //searchBtn.value=GeoER.i18n('geocodingSearch');
        searchBtn.value = 'Cerca';
        searchBtn.type = 'button';
        //searchBtn.title=GeoER.i18n('geocodingSearch');
        searchBtn.title = 'Cerca';
        searchBtn.className = this.div.className + 'Search';

        OpenLayers.Event.observe(searchBtn, "click", this.invokeLocalizzaCerca.bind(context));
        this.divpanelCerca = document.createElement('div');
        this.divpanelCerca.id = 'panelCerca';
        this.divpanelCerca.className = 'panel';
        fieldsetCerca.appendChild(this.divpanelCerca);
        fieldsetCerca.appendChild(searchBtn);
        this.div.appendChild(fieldsetCerca);
    },
    onChange: function () {
        //div ricerca
        this.fieldsetCampiRicerca = document.createElement('fieldset');
        this.fieldsetCampiRicerca.id = 'fieldsetCampiRicerca';
        //this.fieldsetCampiRicerca.style.width="400px";
        var legendCampiRicerca = document.createElement('legend');
        this.fieldsetCampiRicerca.appendChild(legendCampiRicerca);
        var txtLegendCampiRicerca = document.createTextNode("Campi di ricerca per la localizzazione");
        legendCampiRicerca.appendChild(txtLegendCampiRicerca);
        var divCampiRicerca = document.createElement('div');
        this.fieldsetCampiRicerca.appendChild(divCampiRicerca);
        //

        //campi
        var inputProvincia1 = document.createElement('input');
        if (this.geocodingObject.provComDisabled)
            inputProvincia1.readOnly = true;
        inputProvincia1.id = 'provincia1';
        //var provinciaHidden = document.getElementById("provinciaHidden");
        if (this.geocodingObject.provinciaHidden != 'undefined' && this.geocodingObject.provinciaHidden != null && this.geocodingObject.provinciaHidden.value != 'undefined' && this.geocodingObject.provinciaHidden.value != null && this.geocodingObject.provinciaHidden.value.length > 0)
            inputProvincia1.value = this.geocodingObject.provinciaHidden.value.toUpperCase().trim();
        var labelProvincia1 = document.createElement('label');
        labelProvincia1.innerHTML = 'Provincia: ';

        var inputComune1 = document.createElement('input');
        inputComune1.id = 'comune1';
        if (this.geocodingObject.provComDisabled)
            inputComune1.readOnly = true;
        //var comuneHidden = document.getElementById("comuneHidden");
        if (this.geocodingObject.comuneHidden != 'undefined' && this.geocodingObject.comuneHidden != null && this.geocodingObject.comuneHidden.value != 'undefined' && this.geocodingObject.comuneHidden.value != null && this.geocodingObject.comuneHidden.value.length > 0)
            inputComune1.value = this.geocodingObject.comuneHidden.value.toUpperCase().trim();
        var labelComune1 = document.createElement('label');
        labelComune1.innerHTML = 'Comune: ';

        var inputProvincia2 = document.createElement('input');
        inputProvincia2.id = 'provincia2';
        if (this.geocodingObject.provComDisabled)
            inputProvincia2.readOnly = true;
        if (this.geocodingObject.provinciaHidden != 'undefined' && this.geocodingObject.provinciaHidden != null && this.geocodingObject.provinciaHidden.value != 'undefined' && this.geocodingObject.provinciaHidden.value != null && this.geocodingObject.provinciaHidden.value.length > 0)
            inputProvincia2.value = this.geocodingObject.provinciaHidden.value.toUpperCase().trim();
        var labelProvincia2 = document.createElement('label');
        labelProvincia2.innerHTML = 'Provincia: ';

        var inputComune2 = document.createElement('input');
        inputComune2.id = 'comune2';
        if (this.geocodingObject.provComDisabled)
            inputComune2.readOnly = true;
        if (this.geocodingObject.comuneHidden != 'undefined' && this.geocodingObject.comuneHidden != null && this.geocodingObject.comuneHidden.value != 'undefined' && this.geocodingObject.comuneHidden.value != null && this.geocodingObject.comuneHidden.value.length > 0)
            inputComune2.value = this.geocodingObject.comuneHidden.value.toUpperCase().trim();
        var labelComune2 = document.createElement('label');
        labelComune2.innerHTML = 'Comune: ';

        var inputToponimo1 = document.createElement('input');
        inputToponimo1.id = 'toponimo1';
        //var denomStradaHidden = document.getElementById("denomStradaHidden");
        if (this.geocodingObject.denomStradaHidden != 'undefined' && this.geocodingObject.denomStradaHidden != null && this.geocodingObject.denomStradaHidden.value != 'undefined' && this.geocodingObject.denomStradaHidden.value != null && this.geocodingObject.denomStradaHidden.value.length > 0)
            inputToponimo1.value = this.geocodingObject.denomStradaHidden.value.toUpperCase().trim();
        var labelToponimo1 = document.createElement('label');
        labelToponimo1.innerHTML = 'Via: ';

        var inputToponimo2 = document.createElement('input');
        inputToponimo2.id = 'toponimo2';
        //var denomStrada2Hidden = document.getElementById("denomStrada2Hidden");
        if (this.geocodingObject.denomStrada2Hidden != 'undefined' && this.geocodingObject.denomStrada2Hidden != null && this.geocodingObject.denomStrada2Hidden.value != 'undefined' && this.geocodingObject.denomStrada2Hidden.value != null && this.geocodingObject.denomStrada2Hidden.value.length > 0)
            inputToponimo2.value = this.geocodingObject.denomStrada2Hidden.value.toUpperCase().trim();
        var labelToponimo2 = document.createElement('label');
        labelToponimo2.innerHTML = 'Via: ';

        var inputCivico = document.createElement('input');
        inputCivico.id = 'civico';
        //var numCivicoHidden = document.getElementById("numCivicoHidden");
        if (this.geocodingObject.numCivicoHidden != 'undefined' && this.geocodingObject.numCivicoHidden != null && this.geocodingObject.numCivicoHidden.value != 'undefined' && this.geocodingObject.numCivicoHidden.value != null && this.geocodingObject.numCivicoHidden.value.length > 0)
            inputCivico.value = this.geocodingObject.numCivicoHidden.value.toUpperCase().trim();
        //var subCivicoHidden = document.getElementById("subCivicoHidden");
        if (this.geocodingObject.subCivicoHidden != 'undefined' && this.geocodingObject.subCivicoHidden != null && this.geocodingObject.subCivicoHidden.value != 'undefined' && this.geocodingObject.subCivicoHidden.value != null && this.geocodingObject.subCivicoHidden.value.length > 0)
            inputCivico.value = this.geocodingObject.numCivicoHidden.value + "/" + this.geocodingObject.subCivicoHidden.value.toUpperCase().trim();
        var labelCivico = document.createElement('label');
        labelCivico.innerHTML = 'Civico: ';

        var inputKm = document.createElement('input');
        inputKm.className = this.geocodingObject.div.className + 'InputKm';
        inputKm.id = 'Km';
        //var kmHidden = document.getElementById("kmHidden");
        if (this.geocodingObject.kmHidden != 'undefined' && this.geocodingObject.kmHidden != null && this.geocodingObject.kmHidden.value != 'undefined' && this.geocodingObject.kmHidden.value != null && this.geocodingObject.kmHidden.value.length > 0)
            inputKm.value = this.geocodingObject.parseKmString(this.geocodingObject.kmHidden.value).sKmF2.trim();
        var labelKm = document.createElement('label');
        labelKm.className = this.geocodingObject.div.className + 'LabelKm';
        labelKm.innerHTML = 'Chilometrica (Km + m): ';

        var inputX = document.createElement('input');
        inputX.id = 'x';
        //var XHidden = document.getElementById("XHidden");
        if (this.geocodingObject.XHidden != 'undefined' && this.geocodingObject.XHidden != null && this.geocodingObject.XHidden.value != 'undefined' && this.geocodingObject.XHidden.value != null && this.geocodingObject.XHidden.value.length > 0)
            inputX.value = this.geocodingObject.XHidden.value.trim();
        var labelX = document.createElement('label');
        labelX.innerHTML = 'Lon: ';

        var inputY = document.createElement('input');
        inputY.id = 'y';
        //var YHidden = document.getElementById("YHidden");
        if (this.geocodingObject.YHidden != 'undefined' && this.geocodingObject.YHidden != null && this.geocodingObject.YHidden.value != 'undefined' && this.geocodingObject.YHidden.value != null && this.geocodingObject.YHidden.value.length > 0)
            inputY.value = this.geocodingObject.YHidden.value.trim();
        var labelY = document.createElement('label');
        labelY.innerHTML = 'Lat: ';

        var toponimoLoc = document.createElement('input');
        toponimoLoc.id = 'testoLoc';
        if (this.geocodingObject.denomStradaHidden != 'undefined' && this.geocodingObject.denomStradaHidden != null && this.geocodingObject.denomStradaHidden.value != 'undefined' && this.geocodingObject.denomStradaHidden.value != null && this.geocodingObject.denomStradaHidden.value.length > 0)
            toponimoLoc.value = this.geocodingObject.denomStradaHidden.value.toUpperCase().trim();
        var labelToponimoLoc = document.createElement('label');
        labelToponimoLoc.innerHTML = 'Toponimo: ';

        var inputNumeroStrada = document.createElement('input');
        inputNumeroStrada.id = 'numeroStrada';
        inputNumeroStrada.maxLength = 3;
        inputNumeroStrada.style.width = "30px";
        //var numeroStradaHidden = document.getElementById("numeroStradaHidden");
        if (this.geocodingObject.numeroStradaHidden != 'undefined' && this.geocodingObject.numeroStradaHidden != null && this.geocodingObject.numeroStradaHidden.value != 'undefined' && this.geocodingObject.numeroStradaHidden.value != null && this.geocodingObject.numeroStradaHidden.value.length > 0)
            inputNumeroStrada.value = this.geocodingObject.numeroStradaHidden.value.trim();
        var labelNumeroStrada = document.createElement('label');
        labelNumeroStrada.innerHTML = 'Numero strada: ';

        var labelCAmm = document.createElement('label');
        labelCAmm.innerHTML = 'Classifica ammin.: ';
        //combo class. amm.
        var cAmmList = {
            'Seleziona': 'Seleziona',
            'SP': 'SP',
            'SS': 'SS',
            'AA': 'AA',
            'TG': 'TG'
        };
        var selectCAmm = document.createElement('select');
        selectCAmm.id = 'selectCAmm';
        //selectCAmm.className=this.geocodingObject.div.className+'SelectLoc';
        for (var item in cAmmList) {
            var option = document.createElement("option");
            option.text = cAmmList[item];
            option.value = item;
            try {
                selectCAmm.add(option, null);
            } catch (e) {
                selectCAmm.add(option);
            }
        }
        var stAmm = null;
        //var siglaHidden = document.getElementById("sigStradaHidden");
        if (this.geocodingObject.siglaHidden != 'undefined' && this.geocodingObject.siglaHidden != null && this.geocodingObject.siglaHidden.value != 'undefined' && this.geocodingObject.siglaHidden.value != null && this.geocodingObject.siglaHidden.value.length > 0)
            stAmm = this.geocodingObject.calcolaStAmm(this.geocodingObject.siglaHidden.value.trim());
        if (stAmm != null)
        {
            if (stAmm == 'SP')
                selectCAmm.selectedIndex = 1;
            else if (stAmm == 'SS')
                selectCAmm.selectedIndex = 2;
            else if (stAmm == 'AA')
                selectCAmm.selectedIndex = 3;
            else if (stAmm == 'TG')
                selectCAmm.selectedIndex = 4;
        }

        try {
            if (this.geocodingObject.hasCerca)
            {
                if (this.geocodingObject.div.childNodes.length >= 3)
                    this.geocodingObject.div.removeChild(this.geocodingObject.div.childNodes[2]);
                //this.geocodingObject.div.removeChild(this.geocodingObject.div.childNodes[2]);
            } else
            {
                if (this.geocodingObject.div.childNodes.length > 2)
                    this.geocodingObject.div.removeChild(this.geocodingObject.div.childNodes[0]);
                this.geocodingObject.div.removeChild(this.geocodingObject.div.childNodes[1]);
            }
        } catch (e) {
        }

        var context = null;
        if (this.geocodingObject.selectLoc.value == 'Civico') {
            this.fieldsetCampiRicerca.appendChild(labelProvincia1);
            this.fieldsetCampiRicerca.appendChild(inputProvincia1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelComune1);
            this.fieldsetCampiRicerca.appendChild(inputComune1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelToponimo1);
            this.fieldsetCampiRicerca.appendChild(inputToponimo1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelCivico);
            this.fieldsetCampiRicerca.appendChild(inputCivico);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            if (this.geocodingObject.hasNumeroStrada)
            {
                this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
                this.geocodingObject.abilitaNumeroStrada(inputNumeroStrada);
            }
            context = {
                fieldComune1: inputComune1,
                fieldProvincia1: inputProvincia1,
                fieldToponimo1: inputToponimo1,
                fieldCivico: inputCivico,
                geocodingObject: this.geocodingObject
            };
        } else if (this.geocodingObject.selectLoc.value == 'Incrocio') {
            labelProvincia1.innerHTML = 'Provincia primo toponimo: ';
            this.fieldsetCampiRicerca.appendChild(labelProvincia1);
            this.fieldsetCampiRicerca.appendChild(inputProvincia1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            labelComune1.innerHTML = 'Comune primo toponimo: ';
            this.fieldsetCampiRicerca.appendChild(labelComune1);
            this.fieldsetCampiRicerca.appendChild(inputComune1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            labelToponimo1.innerHTML = 'Primo toponimo: ';
            this.fieldsetCampiRicerca.appendChild(labelToponimo1);
            this.fieldsetCampiRicerca.appendChild(inputToponimo1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));

            labelProvincia2.innerHTML = 'Provincia secondo toponimo: ';
            this.fieldsetCampiRicerca.appendChild(labelProvincia2);
            this.fieldsetCampiRicerca.appendChild(inputProvincia2);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            labelComune2.innerHTML = 'Comune secondo toponimo: ';
            this.fieldsetCampiRicerca.appendChild(labelComune2);
            this.fieldsetCampiRicerca.appendChild(inputComune2);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            labelToponimo2.innerHTML = 'Secondo toponimo: ';
            this.fieldsetCampiRicerca.appendChild(labelToponimo2);
            this.fieldsetCampiRicerca.appendChild(inputToponimo2);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            if (this.geocodingObject.hasNumeroStrada)
            {
                this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
                this.geocodingObject.abilitaNumeroStrada(inputNumeroStrada);
            }
            context = {
                fieldComune1: inputComune1,
                fieldProvincia1: inputProvincia1,
                fieldToponimo1: inputToponimo1,
                fieldComune2: inputComune2,
                fieldProvincia2: inputProvincia2,
                fieldToponimo2: inputToponimo2,
                geocodingObject: this.geocodingObject
            };
        } else if (this.geocodingObject.selectLoc.value == 'Chilometrica') {
            this.fieldsetCampiRicerca.appendChild(labelProvincia1);
            this.fieldsetCampiRicerca.appendChild(inputProvincia1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelCAmm);
            this.fieldsetCampiRicerca.appendChild(selectCAmm);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
            this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));

            labelToponimo1.innerHTML = 'Nome strada: ';
            this.fieldsetCampiRicerca.appendChild(labelToponimo1);
            this.fieldsetCampiRicerca.appendChild(inputToponimo1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelKm);
            this.fieldsetCampiRicerca.appendChild(inputKm);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            context = {
                fieldComune1: inputComune1,
                fieldProvincia1: inputProvincia1,
                selectCAmm: selectCAmm,
                inputNumeroStrada: inputNumeroStrada,
                fieldToponimo1: inputToponimo1,
                fieldKm: inputKm,
                geocodingObject: this.geocodingObject
            };
        } else if (this.geocodingObject.selectLoc.value == 'Coordinate') {
            this.fieldsetCampiRicerca.appendChild(labelX);
            this.fieldsetCampiRicerca.appendChild(inputX);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelY);
            this.fieldsetCampiRicerca.appendChild(inputY);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(toponimoLoc);
            toponimoLoc.value = "";
            this.fieldsetCampiRicerca.appendChild(labelToponimoLoc);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            if (this.geocodingObject.hasNumeroStrada)
            {
                this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
                this.geocodingObject.abilitaNumeroStrada(inputNumeroStrada);
            }
            context = {
                fieldX: inputX,
                fieldY: inputY,
                toponimoLoc: toponimoLoc,
                geocodingObject: this.geocodingObject
            };
        } else if (this.geocodingObject.selectLoc.value == 'Solo testo') {
            this.fieldsetCampiRicerca.appendChild(toponimoLoc);
            this.fieldsetCampiRicerca.appendChild(labelToponimoLoc);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            if (this.geocodingObject.hasNumeroStrada)
            {
                this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
                this.geocodingObject.abilitaNumeroStrada(inputNumeroStrada);
            }
            context = {
                toponimoLoc: toponimoLoc,
                geocodingObject: this.geocodingObject
            };
        } else if (this.geocodingObject.selectLoc.value == 'Luogo notevole') {
            this.fieldsetCampiRicerca.appendChild(labelProvincia1);
            this.fieldsetCampiRicerca.appendChild(inputProvincia1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelComune1);
            this.fieldsetCampiRicerca.appendChild(inputComune1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelToponimo1);
            this.fieldsetCampiRicerca.appendChild(inputToponimo1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            labelToponimo1.innerHTML = 'Nome luogo notevole: ';
            if (this.geocodingObject.hasNumeroStrada)
            {
                this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
                this.geocodingObject.abilitaNumeroStrada(inputNumeroStrada);
            }
            context = {
                fieldComune1: inputComune1,
                fieldProvincia1: inputProvincia1,
                fieldToponimo1: inputToponimo1,
                geocodingObject: this.geocodingObject
            };
        } else if (this.geocodingObject.selectLoc.value == 'Strada') {
            this.fieldsetCampiRicerca.appendChild(labelProvincia1);
            this.fieldsetCampiRicerca.appendChild(inputProvincia1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelComune1);
            this.fieldsetCampiRicerca.appendChild(inputComune1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelToponimo1);
            this.fieldsetCampiRicerca.appendChild(inputToponimo1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            if (this.geocodingObject.hasNumeroStrada)
            {
                this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
                this.geocodingObject.abilitaNumeroStrada(inputNumeroStrada);
            }
            context = {
                fieldComune1: inputComune1,
                fieldProvincia1: inputProvincia1,
                fieldToponimo1: inputToponimo1,
                geocodingObject: this.geocodingObject
            };
        } else if (this.geocodingObject.selectLoc.value == 'Localita') {
            this.fieldsetCampiRicerca.appendChild(labelProvincia1);
            this.fieldsetCampiRicerca.appendChild(inputProvincia1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelComune1);
            this.fieldsetCampiRicerca.appendChild(inputComune1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(labelToponimo1);
            this.fieldsetCampiRicerca.appendChild(inputToponimo1);
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            labelToponimo1.innerHTML = 'Nome localita: ';
            if (this.geocodingObject.hasNumeroStrada)
            {
                this.fieldsetCampiRicerca.appendChild(labelNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(inputNumeroStrada);
                this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
                this.geocodingObject.abilitaNumeroStrada(inputNumeroStrada);
            }
            context = {
                fieldComune1: inputComune1,
                fieldProvincia1: inputProvincia1,
                fieldToponimo1: inputToponimo1,
                geocodingObject: this.geocodingObject
            };
        }

        var searchBtn = document.createElement('input');
        searchBtn.className = 'inputButton';
        //searchBtn.value=GeoER.i18n('geocodingSearch');
        searchBtn.value = 'Localizza';
        searchBtn.type = 'button';
        //searchBtn.title=GeoER.i18n('geocodingSearch');
        searchBtn.title = 'Localizza';
        searchBtn.className = this.geocodingObject.div.className + 'Search';

        OpenLayers.Event.observe(searchBtn, "click", this.geocodingObject.invokeLocalizza.bind(context));
        this.geocodingObject.divpanel = document.createElement('div');
        this.geocodingObject.divpanel.id = 'panel';
        this.geocodingObject.divpanel.className = 'panel';
        this.fieldsetCampiRicerca.appendChild(this.geocodingObject.divpanel);
        this.fieldsetCampiRicerca.appendChild(searchBtn);
        this.fieldsetCampiRicerca.appendChild(document.createElement('br'));

        if (this.geocodingObject.hasSalvaCoordinate)
        {
            var salvaBtn = document.createElement('input');
            salvaBtn.id = "salvaBtn";
            salvaBtn.style.visibility = 'hidden';
            salvaBtn.className = 'inputButton';
            //searchBtn.value=GeoER.i18n('geocodingSearch');
            salvaBtn.value = 'Salva coord.';
            salvaBtn.type = 'button';
            //searchBtn.title=GeoER.i18n('geocodingSearch');
            salvaBtn.title = 'Salva coord.';
            salvaBtn.className = this.geocodingObject.div.className + 'Search';
            this.fieldsetCampiRicerca.appendChild(document.createElement('br'));
            this.fieldsetCampiRicerca.appendChild(salvaBtn);
        }

        var element = document.getElementById("fieldsetCampiRicerca");
        if (element)
        {
            element.parentNode.removeChild(element);
        }
        this.geocodingObject.div.appendChild(this.fieldsetCampiRicerca);

        if (this.geocodingObject.hasCerca)
        {
            element = document.getElementById("fieldsetCerca");
            if (element)
            {
                element.parentNode.removeChild(element);
            }
            this.geocodingObject.creaFieldsetCerca();
        }
    },
    salvaCoord: function (evt)
    {
        window.open(this.geocodingObject.localizzatoreUrl + 'saveCoord?text=' + this.text, 'coord.txt');
    },
    invokeLocalizzaCerca: function (evt) {
        if (this.geocodingObject.div == null)
            return;
        if (this.fieldProvinciaCerca.value == '') {
            //alert(GeoER.i18n('noAddress'));
            document.body.style.cursor = 'auto';
            alert('Inserire la provincia');
            return;
        }
        if (this.fieldComuneCerca.value == '') {
            //alert(GeoER.i18n('noAddress'));
            //this.fieldComuneCerca.value = 'COMUNE GENERICO';
            //return;
        }
        if (this.fieldToponimoCerca.value == '') {
            //alert(GeoER.i18n('noAddress'));
            document.body.style.cursor = 'auto';
            alert('Inserire il toponimo');
            return;
        }

        var context = {
            geocodingObject: this.geocodingObject
        };

        var com;
        if (!this.fieldComuneCerca.value || this.fieldComuneCerca.value.length == 0)
            com = 'COMUNE GENERICO';
        else
            com = this.fieldComuneCerca.value;

        var successLocalizzazioneCercaFunc = this.geocodingObject.successLocalizzazioneCerca.bind(context);
        var failureLocalizzazioneCercaFunc = this.geocodingObject.failureLocalizzazioneCerca.bind(this.geocodingObject);


        var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                "&p_toponimo=" + this.fieldToponimoCerca.value +
                "&p_comune=" + com +
                "&p_provincia=" + this.fieldProvinciaCerca.value +
                "&p_tipo_coord=" + this.geocodingObject.sRif +
                "&p_rif_geo_civ=" + this.geocodingObject.rifGeoCiv +
                "&callback=?";

        $.getJSON(url, {}, successLocalizzazioneCercaFunc).fail(function (jqXHR, textStatus, errorThrown) {
            alert("fail " + errorThrown + "; " + jqXHR + textStatus);
        });
    },
    invokeLocalizza: function (evt) {
        var rifGeoCiv = this.geocodingObject.rifGeoCiv;
        if (this.rifGeoCiv)
            rifGeoCiv = this.rifGeoCiv;
        if (this.geocodingObject.map != null) {
            if (this.geocodingObject.map.getLayer(this.geocodingObject.markers.id) == null) {
                this.geocodingObject.map.addLayer(this.geocodingObject.markers);
            }
        }
        this.geocodingObject.x = null;
        this.geocodingObject.y = null;
        this.geocodingObject.Km = null;
        this.geocodingObject.KmTemp = null;
        this.geocodingObject.KmMin = null;
        this.geocodingObject.KmMax = null;

        var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);

        if (this.geocodingObject.selectLoc.value == 'Civico') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo=" + this.fieldToponimo1.value +
                    "&p_comune=" + this.fieldComune1.value +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&p_rif_geo_civ=" + rifGeoCiv +
                    "&p_civico=" + this.fieldCivico.value +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
            /*OpenLayers.Request.GET({
             url:this.geocodingObject.localizzatoreUrl + 'normIndirizzo',
             params: {
             handle:this.geocodingObject.handle,
             p_toponimo:this.fieldToponimo1.value, 
             p_comune:this.fieldComune1.value,
             p_provincia:this.fieldProvincia1.value,
             p_tipo_coord:this.geocodingObject.sRif,
             p_rif_geo_civ:rifGeoCiv,
             p_civico:this.fieldCivico.value
             },
             callback:successLocalizzazioneFunc,
             failure:failureLocalizzazioneFunc
             });*/
        }
        if (this.geocodingObject.selectLoc.value == 'Incrocio') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia del primo toponimo');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune del primo toponimo');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il primo toponimo');
                return;
            }
            if (this.fieldProvincia2.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia del secondo toponimo');
                return;
            }
            if (this.fieldComune2.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune del secondo toponimo');
                return;
            }

            if (this.fieldToponimo2.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il secondo toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };

            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normIncrocioJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo1=" + this.fieldToponimo1.value +
                    "&p_comune1=" + this.fieldComune1.value +
                    "&p_provincia1=" + this.fieldProvincia1.value +
                    "&p_toponimo2=" + this.fieldToponimo2.value +
                    "&p_comune2=" + this.fieldComune2.value +
                    "&p_provincia2=" + this.fieldProvincia2.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
        if (this.geocodingObject.selectLoc.value == 'Chilometrica') {
            this.geocodingObject.repeatLocKm = false;
            this.geocodingObject.foundLocKm = false;
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.selectCAmm.value == 'Seleziona')
            {
                if (this.fieldToponimo1.value.trim() == '') {
                    //alert(GeoER.i18n('noAddress'));
                    document.body.style.cursor = 'auto';
                    alert('Inserire classifica amministrativa e numero strada oppure il nome della strada');
                    return;
                }
            } else
            if (this.inputNumeroStrada.value.trim() == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il numero strada');
                return;
            }
            var stAmm = "";
            if (this.selectCAmm.value != 'Seleziona')
                stAmm = this.selectCAmm.value;
            else
            {
                if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'SP')
                    stAmm = "SP";
                else if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'SS')
                    stAmm = "SS";
                else if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'AA')
                    stAmm = "AA";
                else if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'TG')
                    stAmm = "TG";
            }
            //this.geocodingObject.Km=(new Number(this.fieldKm.value)).valueOf();
            //this.geocodingObject.Km=(new Number(this.fieldKm.value)).valueOf();
            var s = this.geocodingObject.parseKmString(this.fieldKm.value);
            this.geocodingObject.sKm = s.sKmF;
            this.geocodingObject.Km = s.Km;
            var strada = '';
            var sigla = null;
            if (this.selectCAmm.value != 'Seleziona' && this.inputNumeroStrada.value.trim() != '')
            {
                strada = this.selectCAmm.value + this.inputNumeroStrada.value.trim();
                sigla = strada;
            } else
                strada = this.fieldToponimo1.value;

            var context = {
                geocodingObject: this.geocodingObject,
                sigla: sigla
            };

            var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            /*var url = this.geocodingObject.localizzatoreUrl + 'normStradarioJson' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada +
             "&p_comune=" + 'Comune Generico' +
             "&p_provincia=" + this.fieldProvincia1.value +
             "&p_desc_uff=" + 'S' +
             "&p_tipo_strada=" + stAmm +
             "&p_tipo_coord=" + this.geocodingObject.sRif +
             "&callback=?";*/
            var url = this.geocodingObject.localizzatoreUrl + 'normChilometricaJson' + "?handle=" + this.geocodingObject.handle +
                    "&idlrs=" + this.geocodingObject.idLRS +
                    "&p_toponimo=" + strada +
                    "&p_km=" + s.Km +
                    "&p_comune=" + 'Comune Generico' +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_desc_uff=" + 'S' +
                    "&p_tipo_strada=" + stAmm +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
            /*if (stAmm != null)  
             {                           
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + stAmm + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); });                          
             }
             else
             {
             this.geocodingObject.repeatLocKm = true;
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + 'SP' + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); }); 
             
             if (!this.geocodingObject.foundLocKm)
             {
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + 'SS' + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); }); 
             
             this.geocodingObject.repeatLocKm = false;
             if (!this.geocodingObject.foundLocKm)
             {
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + 'AA' + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); }); 
             }
             }
             }*/
        }
        if (this.geocodingObject.selectLoc.value == 'Coordinate') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldX.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la longitudine');
                return;
            }
            if (this.fieldY.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la latitudine');
                return;
            }
            if (!document.getElementById("testoLoc").value || document.getElementById("testoLoc").value.trim().length == 0)
            {
                document.body.style.cursor = 'auto';
                alert("Il campo toponimo non puo' essere vuoto.");
                return;
            }

            this.x = (new Number(this.fieldX.value.replace(',', '.'))).valueOf();
            this.y = (new Number(this.fieldY.value.replace(',', '.'))).valueOf();
            if (this.x != null && this.y != null)
            {
                var point = new Proj4js.Point(this.x, this.y);

                Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);

                var popupContentHTML = null;
                var feature = new OpenLayers.Feature(this.geocodingObject.markers, new OpenLayers.LonLat(point.x, point.y));
                feature.closeBox = true;
                feature.popupClass = popupClass;
                if (!document.getElementById("testoLoc").value)
                    popupContentHTML = "x: " + point.x + "; y: " + point.y;
                else
                    popupContentHTML = document.getElementById("testoLoc").value;

                this.geocodingObject.checkComune.bind(this);
                this.geocodingObject.checkComune(point);

                var comune = document.getElementById("comuneHidden").value.toUpperCase();
                /*if (comune != this.geocodingObject.comuneLoc && this.geocodingObject.hasCheckComune)
                 {
                 this.geocodingObject.resetCampiHidden();
                 document.getElementById("x").value = point.x;
                 document.getElementById("y").value = point.y;
                 if (!document.getElementById("testoLoc").value)
                 document.getElementById("testoLoc").value = "x: " + point.x + "; y: " + point.y;
                 try
                 {
                 document.getElementById("statoLocalizzazioneHidden").value = '-22';
                 document.getElementById("tipoLocalizzazioneHidden").value = '4';
                 document.getElementById("localizzazioneHidden").value = popupContentHTML;
                 document.getElementById("XHidden").value = point.x;
                 document.getElementById("YHidden").value = point.y;
                 document.getElementById("comuneLocHidden").value = this.geocodingObject.comuneLoc;
                 document.getElementById("provinciaLocHidden").value = this.geocodingObject.provinciaLoc;
                 document.getElementById("denomStradaHidden").value = popupContentHTML;
                 
                 document.getElementById("labelLocalizzazioneDesc").innerText = popupContentHTML;
                 document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                 document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                 document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                 document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                 document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-22"].value;
                 } catch (e) {
                 document.body.style.cursor = 'auto';
                 }
                 } else
                 {*/
                
                
                
                
                
                
                
                
                
                
                var context = {
                    geocodingObject: this.geocodingObject,
                    point: point,
                    lonlat: null,
                    feature: feature,
                    popupContentHTML: popupContentHTML
                };

                var successInvokeLocalizzaFromMapFunc = this.geocodingObject.successLocalizzazione.bind(context);
                var url = this.geocodingObject.localizzatoreUrl + 'geolocInversaJson' + "?p_tipo_loc=Coordinate&p_check_comune=" + this.geocodingObject.hasCheckComune + "&" +
                        "p_x=" + point.x + "&p_y=" + point.y +
                        "&p_tipo_coord=" + this.geocodingObject.sRif + "&p_rif_geo_civ=" + this.geocodingObject.rifGeoCiv +
                        "&p_handle=" + this.geocodingObject.handle + "&p_idMap=" + this.geocodingObject.idMap + "&p_idLrs=" + this.geocodingObject.idLRS + "&callback=?"

                $.getJSON(url, {}, successInvokeLocalizzaFromMapFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });

                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                /*this.geocodingObject.resetCampiHidden();
                document.getElementById("x").value = point.x;
                document.getElementById("y").value = point.y;
                if (!document.getElementById("testoLoc").value)
                    document.getElementById("testoLoc").value = "x: " + point.x + "; y: " + point.y;
                try
                {
                    document.getElementById("statoLocalizzazioneHidden").value = '4';
                    document.getElementById("tipoLocalizzazioneHidden").value = '4';
                    document.getElementById("localizzazioneHidden").value = popupContentHTML;
                    document.getElementById("XHidden").value = point.x;
                    document.getElementById("YHidden").value = point.y;
                    document.getElementById("denomStradaHidden").value = popupContentHTML;

                    document.getElementById("labelLocalizzazioneDesc").innerText = popupContentHTML;
                    document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                    document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                    document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                    document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["4"].value;
                } catch (e) {
                    document.body.style.cursor = 'auto';
                }
                //}

                if (this.geocodingObject.map.getLayer(this.geocodingObject.markers.id) == null)
                    this.geocodingObject.map.addLayer(this.geocodingObject.markers);

                this.geocodingObject.markers.clearMarkers();
                var popupClass = new OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
                    'autoSize': true,
                    'minSize': new OpenLayers.Size(200, 130)
                });

                feature.data.popupContentHTML = popupContentHTML;
                feature.data.overflow = "hidden";
                if (document.getElementById("statoLocalizzazioneHidden").value == '4')
                    feature.data.icon = this.geocodingObject.resultIcon.clone();
                else
                    feature.data.icon = this.geocodingObject.searchIcon.clone();
                var marker = feature.createMarker();

                this.geocodingObject.markers.addMarker(marker);
                if (marker.popup == null) {
                    marker.popup = feature.createPopup(feature.closeBox);
                    this.geocodingObject.popup = marker.popup;
                    this.geocodingObject.map.addPopup(marker.popup);
                }
                marker.popup.hide();
                var markerClick = function (evt) {
                    this.geocodingObject.popup.toggle();
                    OpenLayers.Event.stop(evt);
                };
                var context = {
                    reverseGeocodingObject: this.geocodingObject
                };
                marker.events.register("click", feature, markerClick);
                marker.events.register('dblclick', feature, this.geocodingObject.stopevent);
                marker.events.register('mousedown', feature, this.geocodingObject.stopevent);
                this.geocodingObject.map.zoomToExtent(new OpenLayers.Bounds(point.x - 0.001, point.y - 0.001, point.x + 0.001, point.y + 0.001));
                */
            }
            document.body.style.cursor = 'auto';
        }
        if (this.geocodingObject.selectLoc.value == 'Solo testo') {
            if (this.toponimoLoc.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }
            try
            {
                this.geocodingObject.resetCampiHidden();
                var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
                if (statoLocalizzazioneHidden != 'undefined')
                    statoLocalizzazioneHidden.value = '5';
                var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
                if (tipoLocalizzazioneHidden != 'undefined')
                    tipoLocalizzazioneHidden.value = '5';
                var localizzazioneHidden = document.getElementById("localizzazioneHidden");
                if (localizzazioneHidden != 'undefined' && this.toponimoLoc.value != null && this.toponimoLoc.value.trim().length > 0)
                    localizzazioneHidden.value = this.toponimoLoc.value;

                document.getElementById("labelLocalizzazioneDesc").innerText = this.toponimoLoc.value;
                document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["5"].value;
            } catch (e) {
                document.body.style.cursor = 'auto';
            }
            document.body.style.cursor = 'auto';
        }
        if (this.geocodingObject.selectLoc.value == 'Luogo notevole') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normLuoghiNotevoliJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_luogo=" + this.fieldToponimo1.value +
                    "&p_comune=" + this.fieldComune1.value +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
        if (this.geocodingObject.selectLoc.value == 'Strada') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo=" + this.fieldToponimo1.value +
                    "&p_comune=" + this.fieldComune1.value +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
        if (this.geocodingObject.selectLoc.value == 'Localita') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo=" + this.fieldToponimo1.value +
                    "&p_comune=" + this.fieldComune1.value +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
    },
    invokeLocalizzaFromMap: function (evt) {
        var rifGeoCiv = this.geocodingObject.rifGeoCiv;
        if (this.rifGeoCiv)
            rifGeoCiv = this.rifGeoCiv;
        if (this.geocodingObject.map != null) {
            if (this.geocodingObject.map.getLayer(this.geocodingObject.markers.id) == null) {
                this.geocodingObject.map.addLayer(this.geocodingObject.markers);
            }
        }
        this.geocodingObject.x = null;
        this.geocodingObject.y = null;
        this.geocodingObject.Km = null;
        this.geocodingObject.KmTemp = null;
        this.geocodingObject.KmMin = null;
        this.geocodingObject.KmMax = null;

        var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);

        if (this.geocodingObject.selectLoc.value == 'Civico') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'geolocInversaJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_tipo_loc=" + this.geocodingObject.selectLoc.value +
                    "&p_check_comune=" + this.geocodingObject.hasCheckComune +
                    "&p_x=" + this.fieldToponimo1.value +
                    "&p_y=" + this.fieldToponimo1.value +
                    "&p_comune1=" + this.fieldComune1.value +
                    "&p_provincia1=" + this.fieldProvincia1.value +
                    "&p_toponimo2=" + this.fieldToponimo2.value +
                    "&p_comune2=" + this.fieldComune2.value +
                    "&p_provincia2=" + this.fieldProvincia2.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&p_rif_geo_civ=" + this.geocodingObject.rifGeoCiv +
                    "&p_civico=" + this.fieldCivico.value +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
            /*OpenLayers.Request.GET({
             url:this.geocodingObject.localizzatoreUrl + 'normIndirizzo',
             params: {
             handle:this.geocodingObject.handle,
             p_toponimo:this.fieldToponimo1.value, 
             p_comune:this.fieldComune1.value,
             p_provincia:this.fieldProvincia1.value,
             p_tipo_coord:this.geocodingObject.sRif,
             p_rif_geo_civ:rifGeoCiv,
             p_civico:this.fieldCivico.value
             },
             callback:successLocalizzazioneFunc,
             failure:failureLocalizzazioneFunc
             });*/
        }
        if (this.geocodingObject.selectLoc.value == 'Incrocio') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia del primo toponimo');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune del primo toponimo');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il primo toponimo');
                return;
            }
            if (this.fieldProvincia2.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia del secondo toponimo');
                return;
            }
            if (this.fieldComune2.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune del secondo toponimo');
                return;
            }

            if (this.fieldToponimo2.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il secondo toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };

            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normIncrocioJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo1=" + this.fieldToponimo1.value +
                    "&p_comune1=" + this.fieldComune1.value +
                    "&p_provincia1=" + this.fieldProvincia1.value +
                    "&p_toponimo2=" + this.fieldToponimo2.value +
                    "&p_comune2=" + this.fieldComune2.value +
                    "&p_provincia2=" + this.fieldProvincia2.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
        if (this.geocodingObject.selectLoc.value == 'Chilometrica') {
            this.geocodingObject.repeatLocKm = false;
            this.geocodingObject.foundLocKm = false;
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.selectCAmm.value == 'Seleziona')
            {
                if (this.fieldToponimo1.value.trim() == '') {
                    //alert(GeoER.i18n('noAddress'));
                    document.body.style.cursor = 'auto';
                    alert('Inserire classifica amministrativa e numero strada oppure il nome della strada');
                    return;
                }
            } else
            if (this.inputNumeroStrada.value.trim() == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il numero strada');
                return;
            }
            var stAmm = "";
            if (this.selectCAmm.value != 'Seleziona')
                stAmm = this.selectCAmm.value;
            else
            {
                if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'SP')
                    stAmm = "SP";
                else if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'SS')
                    stAmm = "SS";
                else if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'AA')
                    stAmm = "AA";
                else if (this.fieldToponimo1.value.toUpperCase().substring(0, 2) == 'TG')
                    stAmm = "TG";
            }
            //this.geocodingObject.Km=(new Number(this.fieldKm.value)).valueOf();
            //this.geocodingObject.Km=(new Number(this.fieldKm.value)).valueOf();
            var s = this.geocodingObject.parseKmString(this.fieldKm.value);
            this.geocodingObject.sKm = s.sKmF;
            this.geocodingObject.Km = s.Km;
            var strada = '';
            var sigla = null;
            if (this.selectCAmm.value != 'Seleziona' && this.inputNumeroStrada.value.trim() != '')
            {
                strada = this.selectCAmm.value + this.inputNumeroStrada.value.trim();
                sigla = strada;
            } else
                strada = this.fieldToponimo1.value;

            var context = {
                geocodingObject: this.geocodingObject,
                sigla: sigla
            };

            var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normStradarioJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo=" + strada +
                    "&p_comune=" + 'Comune Generico' +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_desc_uff=" + 'S' +
                    "&p_tipo_strada=" + stAmm +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
            /*if (stAmm != null)  
             {                           
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + stAmm + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); });                          
             }
             else
             {
             this.geocodingObject.repeatLocKm = true;
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + 'SP' + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); }); 
             
             if (!this.geocodingObject.foundLocKm)
             {
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + 'SS' + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); }); 
             
             this.geocodingObject.repeatLocKm = false;
             if (!this.geocodingObject.foundLocKm)
             {
             var url = this.geocodingObject.localizzatoreUrl + 'normStradario' + "?handle=" + this.geocodingObject.handle +
             "&p_toponimo=" + strada + 
             "&p_comune=" + 'Comune Generico' + 
             "&p_provincia=" + this.fieldProvincia1.value + 
             "&p_desc_uff=" + 'S' +	
             "&p_tipo_strada=" + 'AA' + 
             "&p_tipo_coord=" + this.geocodingObject.sRif + 
             "&callback=?";
             
             $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) { 
             alert("fail " + errorThrown + "; " + jqXHR + textStatus); }); 
             }
             }
             }*/
        }
        if (this.geocodingObject.selectLoc.value == 'Coordinate') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldX.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la longitudine');
                return;
            }
            if (this.fieldY.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la latitudine');
                return;
            }
            if (!document.getElementById("testoLoc").value || document.getElementById("testoLoc").value.trim().length == 0)
            {
                document.body.style.cursor = 'auto';
                alert("Il campo toponimo non puo' essere vuoto.");
                return;
            }

            this.x = (new Number(this.fieldX.value.replace(',', '.'))).valueOf();
            this.y = (new Number(this.fieldY.value.replace(',', '.'))).valueOf();
            if (this.x != null && this.y != null)
            {
                var point = new Proj4js.Point(this.x, this.y);

                Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);

                var popupContentHTML = null;
                var feature = new OpenLayers.Feature(this.geocodingObject.markers, new OpenLayers.LonLat(point.x, point.y));
                feature.closeBox = true;
                feature.popupClass = popupClass;
                if (!document.getElementById("testoLoc").value)
                    popupContentHTML = "x: " + point.x + "; y: " + point.y;
                else
                    popupContentHTML = document.getElementById("testoLoc").value;

                this.geocodingObject.checkComune.bind(this);
                this.geocodingObject.checkComune(point);

                var comune = document.getElementById("comuneHidden").value.toUpperCase();
                if (comune != this.geocodingObject.comuneLoc && this.geocodingObject.hasCheckComune)
                {
                    this.geocodingObject.resetCampiHidden();
                    document.getElementById("x").value = point.x;
                    document.getElementById("y").value = point.y;
                    if (!document.getElementById("testoLoc").value)
                        document.getElementById("testoLoc").value = "x: " + point.x + "; y: " + point.y;
                    try
                    {
                        document.getElementById("statoLocalizzazioneHidden").value = '-22';
                        document.getElementById("tipoLocalizzazioneHidden").value = '4';
                        document.getElementById("localizzazioneHidden").value = popupContentHTML;
                        document.getElementById("XHidden").value = point.x;
                        document.getElementById("YHidden").value = point.y;
                        document.getElementById("comuneLocHidden").value = this.geocodingObject.comuneLoc;
                        document.getElementById("provinciaLocHidden").value = this.geocodingObject.provinciaLoc;
                        document.getElementById("denomStradaHidden").value = popupContentHTML;

                        document.getElementById("labelLocalizzazioneDesc").innerText = popupContentHTML;
                        document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                        document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                        document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                        document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                        document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-22"].value;
                    } catch (e) {
                        document.body.style.cursor = 'auto';
                    }
                } else
                {
                    this.geocodingObject.resetCampiHidden();
                    document.getElementById("x").value = point.x;
                    document.getElementById("y").value = point.y;
                    if (!document.getElementById("testoLoc").value)
                        document.getElementById("testoLoc").value = "x: " + point.x + "; y: " + point.y;
                    try
                    {
                        document.getElementById("statoLocalizzazioneHidden").value = '4';
                        document.getElementById("tipoLocalizzazioneHidden").value = '4';
                        document.getElementById("localizzazioneHidden").value = popupContentHTML;
                        document.getElementById("XHidden").value = point.x;
                        document.getElementById("YHidden").value = point.y;
                        document.getElementById("denomStradaHidden").value = popupContentHTML;

                        document.getElementById("labelLocalizzazioneDesc").innerText = popupContentHTML;
                        document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                        document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                        document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                        document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                        document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["4"].value;
                    } catch (e) {
                        document.body.style.cursor = 'auto';
                    }
                }

                if (this.geocodingObject.map.getLayer(this.geocodingObject.markers.id) == null)
                    this.geocodingObject.map.addLayer(this.geocodingObject.markers);

                this.geocodingObject.markers.clearMarkers();
                var popupClass = new OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
                    'autoSize': true,
                    'minSize': new OpenLayers.Size(200, 130)
                });

                feature.data.popupContentHTML = popupContentHTML;
                feature.data.overflow = "hidden";
                if (document.getElementById("statoLocalizzazioneHidden").value == '4')
                    feature.data.icon = this.geocodingObject.resultIcon.clone();
                else
                    feature.data.icon = this.geocodingObject.searchIcon.clone();
                var marker = feature.createMarker();

                this.geocodingObject.markers.addMarker(marker);
                if (marker.popup == null) {
                    marker.popup = feature.createPopup(feature.closeBox);
                    this.geocodingObject.popup = marker.popup;
                    this.geocodingObject.map.addPopup(marker.popup);
                }
                marker.popup.hide();
                var markerClick = function (evt) {
                    this.geocodingObject.popup.toggle();
                    OpenLayers.Event.stop(evt);
                };
                var context = {
                    reverseGeocodingObject: this.geocodingObject
                };
                marker.events.register("click", feature, markerClick);
                marker.events.register('dblclick', feature, this.geocodingObject.stopevent);
                marker.events.register('mousedown', feature, this.geocodingObject.stopevent);
                this.geocodingObject.map.zoomToExtent(new OpenLayers.Bounds(point.x - 0.001, point.y - 0.001, point.x + 0.001, point.y + 0.001));
            }
            document.body.style.cursor = 'auto';
        }
        if (this.geocodingObject.selectLoc.value == 'Solo testo') {
            if (this.toponimoLoc.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }
            try
            {
                this.geocodingObject.resetCampiHidden();
                var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
                if (statoLocalizzazioneHidden != 'undefined')
                    statoLocalizzazioneHidden.value = '5';
                var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
                if (tipoLocalizzazioneHidden != 'undefined')
                    tipoLocalizzazioneHidden.value = '5';
                var localizzazioneHidden = document.getElementById("localizzazioneHidden");
                if (localizzazioneHidden != 'undefined' && this.toponimoLoc.value != null && this.toponimoLoc.value.trim().length > 0)
                    localizzazioneHidden.value = this.toponimoLoc.value;

                document.getElementById("labelLocalizzazioneDesc").innerText = this.toponimoLoc.value;
                document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["5"].value;
            } catch (e) {
                document.body.style.cursor = 'auto';
            }
            document.body.style.cursor = 'auto';
        }
        if (this.geocodingObject.selectLoc.value == 'Luogo notevole') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normLuoghiNotevoliJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_luogo=" + this.fieldToponimo1.value +
                    "&p_comune=" + this.fieldComune1.value +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
        if (this.geocodingObject.selectLoc.value == 'Strada') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo=" + this.fieldToponimo1.value +
                    "&p_comune=" + this.fieldComune1.value +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
        if (this.geocodingObject.selectLoc.value == 'Localita') {
            if (this.geocodingObject.div == null)
                return;
            if (this.fieldProvincia1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire la provincia');
                return;
            }
            if (this.fieldComune1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il comune');
                return;
            }
            if (this.fieldToponimo1.value == '') {
                //alert(GeoER.i18n('noAddress'));
                document.body.style.cursor = 'auto';
                alert('Inserire il toponimo');
                return;
            }

            var context = {
                geocodingObject: this.geocodingObject
            };
            successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

            var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                    "&p_toponimo=" + this.fieldToponimo1.value +
                    "&p_comune=" + this.fieldComune1.value +
                    "&p_provincia=" + this.fieldProvincia1.value +
                    "&p_tipo_coord=" + this.geocodingObject.sRif +
                    "&callback=?";

            $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                alert("fail " + errorThrown + "; " + jqXHR + textStatus);
            });
        }
    },
    failureLocalizzazione: function (request) {
        document.body.style.cursor = 'auto';
        //alert("Errore nella procedura di localizzazione");
        return;
    },
    failureLocalizzazioneCerca: function (request) {
        document.body.style.cursor = 'auto';
        //alert("Errore nella procedura di ricerca");
        return;
    },
    successLocalizzazioneCerca: function (request) {
        document.body.style.cursor = 'auto';
        if (request == null || request.records == null || request.records[0] == null || (request.records[0].PROVINCIA == null && request.records[0].PROVINCIA1 == null)) {
            alert("Nessun risultato trovato");
            return;
        } else {
            if (this.geocodingObject.popup != null)
                this.geocodingObject.map.removePopup(this.geocodingObject.popup);
            var recordList = request.records;
            if (recordList != null && recordList.length > 0) {
                var divresults = document.getElementById('divresultsCerca');
                if (!divresults) {
                    var divresults = document.createElement('div');
                    divresults.id = 'divresultsCerca';
                    divresults.className = 'divresults';
                } else {
                    divresults.innerHTML = '';
                }
                //divresults.innerHTML=GeoER.i18n('geocodingResults')+'<br>';
                divresults.innerHTML = '<br>' + 'Risultati:' + '<br>';
                var numResults = 0;
                for (i = 0; i < recordList.length; i++) {
                    var pointx = null;
                    var pointy = null;
                    var entitaCivicoId = null;
                    var entitaId = null;
                    var pointMinx = null;
                    var pointMiny = null;
                    var pointMaxx = null;
                    var pointMaxy = null;
                    var pointCentrx = null;
                    var pointCentry = null;
                    var provincia = null;
                    var comune = null;
                    var dug = null;
                    var denominazione = null;
                    var civico = null;
                    var numCivico = null;
                    var subCivico = null;
                    var record = recordList[i];
                    //coord civico se trovate                       
                    pointx = record.CIVICO_X;
                    pointy = record.CIVICO_Y;
                    pointMinx = record.MIN_X;
                    pointMiny = record.MIN_Y;
                    pointMaxx = record.MAX_X;
                    pointMaxy = record.MAX_Y;
                    pointCentrx = record.CENTR_X;
                    pointCentry = record.CENTR_Y;

                    //civico
                    provincia = record.PROVINCIA;
                    comune = record.COMUNE;
                    dug = record.DUG;
                    denominazione = record.DENOMINAZIONE;
                    civico = record.DESCRIZIONE_CIVICO;
                    numCivico = record.NUM_CIVICO;
                    subCivico = record.SUFFISSO_CIVICO;
                    entitaCivicoId = record.ENTITA_CIVICO_ID;
                    entitaId = record.ENTITA_ID;

                    var link = document.createElement('a');
                    var indirizzo = comune + ", ";
                    if (dug != null)
                        indirizzo = indirizzo + dug.trim();
                    if (denominazione != null)
                        indirizzo = " " + indirizzo + " " + denominazione.trim();
                    if (civico != null)
                        indirizzo = " " + indirizzo + " " + civico.trim();
                    link.href = '#';
                    link.innerHTML = indirizzo;

                    var found = false;
                    for (var ind = 0; ind < divresults.childNodes.length; ind++) {
                        if (divresults.childNodes[ind].innerHTML == indirizzo) {
                            found = true;
                            continue;
                        }
                    }
                    if (found == false) {
                        if (entitaId.lastIndexOf('RT') + 2 == entitaId.length)
                        {
                            var context = {
                                provincia: provincia,
                                m: 0,
                                entitaId: entitaId,
                                geocodingObject: this.geocodingObject
                            };

                            var successQueryXYCercaFunc = this.geocodingObject.successQueryXYCerca.bind(context);
                            OpenLayers.Request.GET({
                                url: this.geocodingObject.localizzatoreUrl + 'queryXY',
                                async: false,
                                params: {
                                    road_id: entitaId,
                                    m: 0,
                                    asta: '',
                                    idConn: this.geocodingObject.idLRS
                                },
                                callback: successQueryXYCercaFunc,
                                failure: function () {
                                    alert('Errore durante l\'inizializzazione del normalizzatore; impossibile effettuare localizzazioni');
                                }
                            });
                            context = {
                                x: this.geocodingObject.xCerca,
                                y: this.geocodingObject.yCerca,
                                provincia: provincia,
                                comune: 'Comune Generico',
                                tipoLoc: '1',
                                statoLoc: '-3',
                                address: indirizzo,
                                dug: dug,
                                denominazione: denominazione,
                                entitaId: entitaId,
                                geocodingObject: this.geocodingObject
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResultCerca.bind(context));
                        }
                        divresults.appendChild(link);
                        var br = document.createElement('br');
                        divresults.appendChild(br);
                        numResults++;
                    }

                    var point = null;
                    if (pointx != null && pointy != null) {
                        point = new Proj4js.Point(pointx, pointy);
                        Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                        var context = {
                            x: point.x,
                            y: point.y,
                            tipoLoc: '1',
                            statoLoc: '1',
                            provincia: provincia,
                            comune: comune,
                            address: indirizzo,
                            dug: dug,
                            denominazione: denominazione,
                            numCivico: numCivico,
                            subCivico: subCivico,
                            entitaCivicoId: entitaCivicoId,
                            entitaId: entitaId,
                            xCiv: pointx,
                            yCiv: pointy,
                            geocodingObject: this.geocodingObject
                        };
                        OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                        //OpenLayers.Event.observe(link,"click",this.showResult.bindAsEventListener(context));
                    } else if (pointCentrx != null && pointCentry != null) {
                        /*if (this.sRif == "UTMRER" || this.sRif == "UTMA") 
                         point = new Proj4js.Point(pointCentrx, pointCentry + 4000000);
                         else
                         point = new Proj4js.Point(pointCentrx, pointCentry);*/
                        point = new Proj4js.Point(pointCentrx, pointCentry);
                        Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                        var context = {
                            x: point.x,
                            y: point.y,
                            provincia: provincia,
                            comune: comune,
                            tipoLoc: '1',
                            statoLoc: '-3',
                            address: indirizzo,
                            dug: dug,
                            denominazione: denominazione,
                            entitaId: entitaId,
                            geocodingObject: this.geocodingObject
                        };
                        OpenLayers.Event.observe(link, "click", this.geocodingObject.showResultCerca.bind(context));
                        //OpenLayers.Event.observe(link,"click",this.showResult.bindAsEventListener(context));
                    }
                }
                if (numResults == 0)
                    alert('Nessun risultato trovato');
                //if(this.geocodingObject.provComDisabled && numResults == 1){
                //    divresults.innerHTML='';
                //    var showResultCercaFunc = this.geocodingObject.showResultCerca.bind(context);
                //    showResultCercaFunc();
                //}
            } else {
                //alert(GeoER.i18n('geocodingNoResults'));
                alert('Nessun risultato trovato');
            }

            this.geocodingObject.divpanelCerca.appendChild(divresults);
        }
    },

    successLocalizzazioneFromMap: function (request) {
        document.body.style.cursor = 'auto';
        alert(request);
    },

    successLocalizzazione: function (request) {
        document.body.style.cursor = 'auto';
        if (this.geocodingObject.selectLoc.value == 'Coordinate') {
            try
            {
                if (request != null && request.oil != null && request.oil.length > 0)
                {
                    var objsFields = request.oil[0].fields.objs;
                    for (i = 0; i < objsFields.length; i++)
                    {
                        if (objsFields[i] == 'NM_COM')
                            comune_index = i;
                        if (objsFields[i] == 'NM_PRV')
                            provincia_index = i;
                    }
                    
                    var foundComune = false;
                    for (var i = 0; i < request.oil[0].values.objs.length; i++)
                    {
                        var objsFields = request.oil[0].values.objs[i].objs;
                        this.geocodingObject.comuneLoc = objsFields[comune_index].toUpperCase();
                        this.geocodingObject.provinciaLoc = objsFields[provincia_index].toUpperCase();
                        var comune = document.getElementById("comuneHidden").value.toUpperCase();
                        if (comune === this.geocodingObject.comuneLoc)
                        {
                            foundComune = true;
                            this.geocodingObject.resetCampiHidden();
                            document.getElementById("x").value = this.point.x;
                            document.getElementById("y").value = this.point.y;
                            if (!document.getElementById("testoLoc").value)
                                document.getElementById("testoLoc").value = "x: " + this.point.x + "; y: " + this.point.y;
                            try
                            {
                                document.getElementById("statoLocalizzazioneHidden").value = '4';
                                document.getElementById("tipoLocalizzazioneHidden").value = '4';
                                document.getElementById("localizzazioneHidden").value = this.popupContentHTML;
                                document.getElementById("XHidden").value = this.point.x;
                                document.getElementById("YHidden").value = this.point.y;
                                document.getElementById("denomStradaHidden").value = this.popupContentHTML;

                                document.getElementById("labelLocalizzazioneDesc").innerText = this.popupContentHTML;
                                document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                                document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                                document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                                document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                                document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["4"].value;
                                break;
                            } catch (e) {
                            }
                        }
                    }

                    if (!foundComune)
                    {
                        this.geocodingObject.resetCampiHidden();
                        document.getElementById("x").value = this.point.x;
                        document.getElementById("y").value = this.point.y;
                        if (!document.getElementById("testoLoc").value)
                            document.getElementById("testoLoc").value = "x: " + this.point.x + "; y: " + this.point.y;
                        try
                        {
                            document.getElementById("statoLocalizzazioneHidden").value = '-22';
                            document.getElementById("tipoLocalizzazioneHidden").value = '4';
                            document.getElementById("localizzazioneHidden").value = this.popupContentHTML;
                            document.getElementById("XHidden").value = this.point.x;
                            document.getElementById("YHidden").value = this.point.y;
                            document.getElementById("comuneLocHidden").value = this.geocodingObject.comuneLoc;
                            document.getElementById("provinciaLocHidden").value = this.geocodingObject.provinciaLoc;
                            document.getElementById("denomStradaHidden").value = this.popupContentHTML;

                            document.getElementById("labelLocalizzazioneDesc").innerText = this.popupContentHTML;
                            document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                            document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                            document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                            document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                            document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-22"].value;
                        } catch (e) {
                        }
                    }
                } else
                {
                    if (this.geocodingObject.hasCheckComune) {
                        this.geocodingObject.resetCampiHidden();
                        document.getElementById("x").value = this.point.x;
                        document.getElementById("y").value = this.point.y;
                        if (!document.getElementById("testoLoc").value)
                            document.getElementById("testoLoc").value = "x: " + this.point.x + "; y: " + this.point.y;
                        try
                        {
                            document.getElementById("statoLocalizzazioneHidden").value = '-22';
                            document.getElementById("tipoLocalizzazioneHidden").value = '4';
                            document.getElementById("localizzazioneHidden").value = this.popupContentHTML;
                            document.getElementById("XHidden").value = this.point.x;
                            document.getElementById("YHidden").value = this.point.y;
                            document.getElementById("comuneLocHidden").value = this.geocodingObject.comuneLoc;
                            document.getElementById("provinciaLocHidden").value = this.geocodingObject.provinciaLoc;
                            document.getElementById("denomStradaHidden").value = this.popupContentHTML;

                            document.getElementById("labelLocalizzazioneDesc").innerText = this.popupContentHTML;
                            document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                            document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                            document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                            document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                            document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-22"].value;
                        } catch (e) {
                        }
                    }
                    else {
                        this.geocodingObject.resetCampiHidden();
                        document.getElementById("x").value = this.point.x;
                        document.getElementById("y").value = this.point.y;
                        if (!document.getElementById("testoLoc").value)
                            document.getElementById("testoLoc").value = "x: " + this.point.x + "; y: " + this.point.y;
                        try
                        {
                            document.getElementById("statoLocalizzazioneHidden").value = '4';
                            document.getElementById("tipoLocalizzazioneHidden").value = '4';
                            document.getElementById("localizzazioneHidden").value = this.popupContentHTML;
                            document.getElementById("XHidden").value = this.point.x;
                            document.getElementById("YHidden").value = this.point.y;
                            document.getElementById("denomStradaHidden").value = this.popupContentHTML;

                            document.getElementById("labelLocalizzazioneDesc").innerText = this.popupContentHTML;
                            document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                            document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                            document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                            document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                            document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["4"].value;
                        } catch (e) {
                        }
                    }
                }


                if (this.geocodingObject.map.getLayer(this.geocodingObject.markers.id) == null)
                    this.geocodingObject.map.addLayer(this.geocodingObject.markers);

                this.geocodingObject.markers.clearMarkers();
                var popupClass = new OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
                    'autoSize': true,
                    'minSize': new OpenLayers.Size(200, 130)
                });

                this.feature.data.popupContentHTML = this.popupContentHTML;
                this.feature.data.overflow = "hidden";
                try
                {
                    if (document.getElementById("statoLocalizzazioneHidden").value == '4')
                        this.feature.data.icon = this.geocodingObject.resultIcon.clone();
                    else
                        this.feature.data.icon = this.geocodingObject.searchIcon.clone();
                } catch (e)
                {
                    this.feature.data.icon = this.geocodingObject.resultIcon.clone();
                }

                var marker = this.feature.createMarker();

                this.geocodingObject.markers.addMarker(marker);
                if (marker.popup == null) {
                    marker.popup = this.feature.createPopup(this.feature.closeBox);
                    this.popup = marker.popup;
                    this.geocodingObject.map.addPopup(marker.popup);
                }
                marker.popup.hide();
                var markerClick = function (evt) {
                    this.popup.toggle();
                    OpenLayers.Event.stop(evt);
                };
                var context = {
                    reverseGeocodingObject: this.geocodingObject
                };
                marker.events.register("click", this.feature, markerClick);
                marker.events.register('dblclick', this.feature, this.stopevent);
                marker.events.register('mousedown', this.feature, this.stopevent);
            } catch (e) {
            }
        } else
        {
            if (request == null || request.records == null || request.records[0] == null || (request.records[0].PROVINCIA == null && request.records[0].PROVINCIA1 == null))
            {
                alert("nessun risultato");
                try
                {
                    this.geocodingObject.resetCampiHidden();
                    if (this.geocodingObject.selectLoc.value == 'Civico') {
                        document.getElementById("tipoLocalizzazioneHidden").value = "1";
                        document.getElementById("statoLocalizzazioneHidden").value = "-1";
                        document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                        document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-1"].value;
                    }
                    if (this.geocodingObject.selectLoc.value == 'Incrocio') {
                        document.getElementById("tipoLocalizzazioneHidden").value = "2";
                        document.getElementById("statoLocalizzazioneHidden").value = "-5";
                        document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                        document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-5"].value;
                    }
                    if (this.geocodingObject.selectLoc.value == 'Chilometrica') {
                        document.getElementById("tipoLocalizzazioneHidden").value = "3";
                        document.getElementById("statoLocalizzazioneHidden").value = "-7";
                        document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                        document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-7"].value;
                    }
                    document.getElementById("labelLocalizzazioneDesc").innerText = '';
                    document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                    document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                    document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                } catch (e) {
                }
                return;
            }
            this.geocodingObject.markers.clearMarkers();
            if (this.geocodingObject.popup != null)
                this.geocodingObject.map.removePopup(this.geocodingObject.popup);
            var recordList = request.records;
            if (recordList != null && recordList.length > 0) {
                var divresults = document.getElementById('divresults');
                if (!divresults) {
                    var divresults = document.createElement('div');
                    divresults.id = 'divresults';
                    divresults.className = 'divresults';
                } else {
                    divresults.innerHTML = '';
                }
                //divresults.innerHTML=GeoER.i18n('geocodingResults')+'<br>';
                divresults.innerHTML = '<br>' + 'Risultati (click per confermare la localizzazione):' + '<br>';
                if (this.geocodingObject.selectLoc.value == 'Civico') {
                    var showAllLinks = false;
                    var numResults = 0;
                    for (i = 0; i < recordList.length; i++) {
                        var pointx = null;
                        var pointy = null;
                        var entitaCivicoId = null;
                        var entitaId = null;
                        var pointMinx = null;
                        var pointMiny = null;
                        var pointMaxx = null;
                        var pointMaxy = null;
                        var pointCentrx = null;
                        var pointCentry = null;
                        var provincia = null;
                        var comune = null;
                        var dug = null;
                        var denominazione = null;
                        var civico = null;
                        var numCivico = null;
                        var subCivico = null;
                        var record = recordList[i];
                        //coord civico se trovate
                        pointx = record.CIVICO_X;
                        pointy = record.CIVICO_Y;
                        //bounding box strada e centroide se trovati
                        pointMinx = record.MIN_X;
                        pointMiny = record.MIN_Y;
                        pointMaxx = record.MAX_X;
                        pointMaxy = record.MAX_Y;
                        pointCentrx = record.CENTR_X;
                        pointCentry = record.CENTR_Y;
                        //civico
                        provincia = record.PROVINCIA;
                        comune = record.COMUNE;
                        dug = record.DUG;
                        denominazione = record.DENOMINAZIONE;
                        civico = record.DESCRIZIONE_CIVICO;
                        numCivico = record.NUM_CIVICO;
                        subCivico = record.SUFFISSO_CIVICO;
                        entitaCivicoId = record.ENTITA_CIVICO_ID;
                        entitaId = record.ENTITA_ID;

                        var link = document.createElement('a');
                        var indirizzo = comune + ", ";
                        if (dug != null)
                            indirizzo = indirizzo + dug.trim();
                        if (denominazione != null)
                            indirizzo = " " + indirizzo + " " + denominazione.trim();
                        if (civico != null)
                            indirizzo = " " + indirizzo + " " + civico.trim();
                        link.href = '#';
                        link.innerHTML = indirizzo;

                        var found = false;
                        for (var ind = 0; ind < divresults.childNodes.length; ind++) {
                            if (divresults.childNodes[ind].innerHTML == indirizzo) {
                                found = true;
                                continue;
                            }
                        }
                        if (found == false) {
                            divresults.appendChild(link);
                            var br = document.createElement('br');
                            divresults.appendChild(br);
                            numResults++;
                        }

                        var point = null;
                        if (pointx != null && pointy != null) {
                            point = new Proj4js.Point(pointx, pointy);
                            Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                            var context = {
                                x: point.x,
                                y: point.y,
                                tipoLoc: '1',
                                statoLoc: '1',
                                provincia: provincia,
                                comune: comune,
                                address: indirizzo,
                                dug: dug,
                                denominazione: denominazione,
                                numCivico: numCivico,
                                subCivico: subCivico,
                                entitaCivicoId: entitaCivicoId,
                                entitaId: entitaId,
                                xCiv: pointx,
                                yCiv: pointy,
                                geocodingObject: this.geocodingObject
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                            //OpenLayers.Event.observe(link,"click",this.showResult.bindAsEventListener(context));
                        }
                        //sono nel caso in cui il covico non ha le coordinate proiettate
                        else if (pointCentrx != null && pointCentry != null && entitaCivicoId != null) {
                            showAllLinks = true;
                            var top = denominazione;
                            var civ = numCivico;
                            if (dug != null && dug.trim().length > 0)
                                top = dug + " " + denominazione;
                            if (subCivico != null && subCivico.trim().length > 0)
                                civ = numCivico + "/" + subCivico;
                            document.getElementById("toponimo1").value = top;
                            document.getElementById("civico").value = civ;
                            context = {
                                fieldComune1: document.getElementById("comune1"),
                                fieldProvincia1: document.getElementById("provincia1"),
                                fieldToponimo1: document.getElementById("toponimo1"),
                                fieldCivico: document.getElementById("civico"),
                                geocodingObject: this.geocodingObject,
                                rifGeoCiv: "ECIV"
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.invokeLocalizza.bind(context));
                            //OpenLayers.Event.observe(link,"click",this.showResult.bindAsEventListener(context));
                        } else if (pointCentrx != null && pointCentry != null) {
                            point = new Proj4js.Point(pointCentrx, pointCentry);
                            Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                            var context = {
                                x: point.x,
                                y: point.y,
                                provincia: provincia,
                                comune: comune,
                                tipoLoc: '1',
                                statoLoc: '-3',
                                address: indirizzo,
                                dug: dug,
                                denominazione: denominazione,
                                entitaId: entitaId,
                                geocodingObject: this.geocodingObject
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                            //OpenLayers.Event.observe(link,"click",this.showResult.bindAsEventListener(context));
                        }
                    }
                    if (this.geocodingObject.provComDisabled && numResults == 1 && !showAllLinks) {
                        divresults.innerHTML = '';
                        var showResultFunc = this.geocodingObject.showResult.bind(context);
                        showResultFunc();
                    }
                }
                if (this.geocodingObject.selectLoc.value == 'Incrocio') {
                    var numResults = 0;
                    for (i = 0; i < recordList.length; i++) {
                        var pointx = null;
                        var pointy = null;
                        var comune1 = null;
                        var comune2 = null;
                        var provincia1 = null;
                        var dug1 = null;
                        var denominazione1 = null;
                        var dug2 = null;
                        var denominazione2 = null;
                        var entitaId1 = null;
                        var entitaId2 = null;
                        var incrocioId = null;
                        var xInc = null;
                        var yInc = null;

                        var record = recordList[i];
                        //coord incrocio se trovate
                        pointx = record.INC_X;
                        pointy = record.INC_Y;
                        //incrocio
                        comune1 = record.COMUNE1;
                        provincia1 = record.PROVINCIA1;
                        dug1 = record.DUG1;
                        denominazione1 = record.DENOMINAZIONE1;
                        comune2 = record.COMUNE2;
                        dug2 = record.DUG2;
                        denominazione2 = record.DENOMINAZIONE2;
                        entitaId1 = record.ENTITA_ID1;
                        entitaId2 = record.ENTITA_ID2;
                        incrocioId = record.INCROCIO_ID;
                        xInc = record.INC_X;
                        yInc = record.INC_Y;

                        var link = document.createElement('a');
                        var indirizzo = comune1 + ", ";
                        if (dug1 != null)
                            indirizzo = indirizzo + dug1.trim();
                        if (denominazione1 != null)
                            indirizzo = " " + indirizzo + " " + denominazione1.trim() + " incr.";
                        if (dug2 != null)
                            indirizzo = " " + indirizzo + " " + dug2.trim();
                        if (denominazione2 != null)
                            indirizzo = " " + indirizzo + " " + denominazione2.trim();
                        link.href = '#';
                        link.innerHTML = indirizzo;

                        var found = false;
                        for (j = 0; j < divresults.childNodes.length; j++) {
                            if (divresults.childNodes[j].innerHTML == indirizzo) {
                                found = true;
                                continue;
                            }
                        }
                        if (found == false) {
                            divresults.appendChild(link);
                            var br = document.createElement('br');
                            divresults.appendChild(br);
                            numResults++;
                        }

                        var point = null;
                        if (pointx != null && pointy != null) {
                            point = new Proj4js.Point(pointx, pointy);
                            Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);

                            var context = {
                                x: point.x,
                                y: point.y,
                                tipoLoc: '2',
                                statoLoc: '2',
                                address: indirizzo,
                                provincia: provincia1,
                                comune: comune1,
                                dug1: dug1,
                                denominazione1: denominazione1,
                                dug2: dug2,
                                denominazione2: denominazione2,
                                entitaId1: entitaId1,
                                entitaId2: entitaId2,
                                incrocioId: incrocioId,
                                xInc: xInc,
                                yInc: yInc,
                                geocodingObject: this.geocodingObject
                            };

                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                        } else {
                            var context = {
                                tipoLoc: '2',
                                statoLoc: '-10',
                                geocodingObject: this.geocodingObject
                            };
                        }
                    }
                    if (this.geocodingObject.provComDisabled && numResults == 1) {
                        divresults.innerHTML = '';
                        var showResultFunc = this.geocodingObject.showResult.bind(context);
                        showResultFunc();
                    }
                }
                if (this.geocodingObject.selectLoc.value == 'Chilometrica') {
                    this.geocodingObject.repeatLocKm = false;
                    this.geocodingObject.foundLocKm = true;
                    var numResults = 0;
                    for (i = 0; i < recordList.length; i++) {
                        var pointx = null;
                        var pointy = null;
                        var pointMinx = null;
                        var pointMiny = null;
                        var pointMaxx = null;
                        var pointMaxy = null;
                        var pointCentrx = null;
                        var pointCentry = null;
                        var provincia = null;
                        var comune = null;
                        var denominazione = null;
                        var entitaId = null;
                        var km = null;
                        var kmMin = null;
                        var kmMax = null;
                        var km_x = null;
                        var km_y = null;

                        var record = recordList[i];

                        //bounding box strada e centroide se trovati
                        pointMinx = record.MIN_X;
                        pointMiny = record.MIN_Y;
                        pointMaxx = record.MAX_X;
                        pointMaxy = record.MAX_Y;
                        pointCentrx = record.CENTR_X;
                        pointCentry = record.CENTR_Y;
                        km = record.KM / 1000;
                        kmMin = record.KM_MIN / 1000;
                        kmMax = record.KM_MAX / 1000;
                        if (record.PROVINCIA == "BOLOGNA")
                        {
                            km *= 1000;
                            kmMin *= 1000;
                            kmMax *= 1000;
                        }
                        km_x = record.KM_X;
                        km_y = record.KM_Y;
                        //strada e km
                        provincia = record.PROVINCIA;
                        comune = record.COMUNE;
                        denominazione = record.DENOMINAZIONE;
                        entitaId = '' + record.ENTITA_ID;
                        this.geocodingObject.sEntitaId = entitaId;
                        this.geocodingObject.Km = record.KM;
                        this.geocodingObject.sKm = this.geocodingObject.parseKmString(km + "").sKmF;

                        var link = document.createElement('a');
                        var indirizzo = "";
                        if (denominazione != null)
                            indirizzo = indirizzo + " " + denominazione.trim();
                        if (this.geocodingObject.sKm != null && entitaId.lastIndexOf('RT') + 2 == entitaId.length)
                            indirizzo = indirizzo + ', ' + this.geocodingObject.sKm;
                        link.href = '#';
                        link.innerHTML = indirizzo;

                        var found = false;
                        for (j = 0; j < divresults.childNodes.length; j++) {
                            if (divresults.childNodes[j].innerHTML == indirizzo) {
                                found = true;
                                continue;
                            }
                        }
                        if (found == false) {
                            divresults.appendChild(link);
                            var br = document.createElement('br');
                            divresults.appendChild(br);
                            numResults++;
                        }

                        var point = null;
                        //if (this.x!=null && this.y!=null && this.x!=0.0 &&this.y!=0.0){
                        //if (pointCentrx != null && pointCentry != null && pointCentrx != 0.0 && pointCentry != 0.0) {

                        //strada priva di calibrazione chilometrica (uso normIndirizzo che mi ha restituito gli estremi e il centroide della strada)
                        if (pointCentrx != null && pointCentry != null && pointCentrx != 0.0 && pointCentry != 0.0) {
                            point = new Proj4js.Point(pointCentrx, pointCentry);
                            //if (this.sRif == "UTMRER" || this.sRif == "UTMA") 
                            //    point.y = point.y + 4000000;  
                            if (document.getElementById('comuneHidden') != null)
                            {
                                comune = document.getElementById('comuneHidden').value;
                            }
                            var context = {
                                x: point.x,
                                y: point.y,
                                tipoLoc: '3',
                                statoLoc: '-11',
                                address: denominazione + ', ' + this.geocodingObject.sKm,
                                provincia: provincia,
                                comune: comune,
                                denominazione: denominazione,
                                sigla: this.sigla,
                                entitaId: entitaId,
                                xStradaNonCalib: point.x,
                                yStradaNonCalib: point.y,
                                geocodingObject: this.geocodingObject
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));

                            //strada con progressive chilometriche, ma km fuori range
                        } else if (km < kmMin || km > kmMax) {
                            if (document.getElementById('comuneHidden') != null)
                            {
                                comune = document.getElementById('comuneHidden').value;
                            }
                            var context = {
                                tipoLoc: '3',
                                statoLoc: '-9',
                                km: km * 1000,
                                address: denominazione + ', ' + this.geocodingObject.sKm,
                                provincia: provincia,
                                comune: comune,
                                denominazione: denominazione,
                                sigla: this.sigla,
                                entitaId: entitaId,
                                geocodingObject: this.geocodingObject
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                        }

                        //localizzazzione ok
                        else {
                            point = new Proj4js.Point(km_x, km_y);
                            if (document.getElementById('comuneHidden') != null)
                            {
                                comune = document.getElementById('comuneHidden').value;
                            }
                            var context = {
                                x: point.x,
                                y: point.y,
                                tipoLoc: '3',
                                statoLoc: '3',
                                km: km * 1000,
                                address: denominazione + ', ' + this.geocodingObject.sKm,
                                provincia: provincia,
                                comune: comune,
                                denominazione: denominazione,
                                sigla: this.sigla,
                                entitaId: entitaId,
                                geocodingObject: this.geocodingObject
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                        }
                    }
                    if (this.geocodingObject.provComDisabled && numResults == 1) {
                        divresults.innerHTML = '';
                        var showResultFunc = this.geocodingObject.showResult.bind(context);
                        showResultFunc();
                    }
                }
                if (this.geocodingObject.selectLoc.value == 'Luogo notevole') {
                    var showAllLinks = false;
                    var numResults = 0;
                    for (i = 0; i < recordList.length; i++) {
                        var pointx = null;
                        var pointy = null;
                        var entitaId = null;
                        var pointMinx = null;
                        var pointMiny = null;
                        var pointMaxx = null;
                        var pointMaxy = null;
                        var pointCentrx = null;
                        var pointCentry = null;
                        var provincia = null;
                        var comune = null;
                        var dug = null;
                        var denominazione = null;
                        var descrizUff = null;
                        var tipoStrada = null;
                        var record = recordList[i];

                        //bounding box strada e centroide se trovati
                        pointMinx = record.MIN_X;
                        pointMiny = record.MIN_Y;
                        pointMaxx = record.MAX_X;
                        pointMaxy = record.MAX_Y;
                        pointCentrx = record.CENTR_X;
                        pointCentry = record.CENTR_Y;

                        provincia = record.PROVINCIA;
                        comune = record.COMUNE;
                        dug = record.DUG;
                        denominazione = record.DENOMINAZIONE;
                        entitaId = record.ENTITA_ID;
                        descrizUff = record.DESCRIZ_UFF;
                        tipoStrada = record.TIPO_STRADA;

                        var link = document.createElement('a');
                        var indirizzo = comune + ", ";
                        if (dug != null)
                            indirizzo = indirizzo + dug.trim();
                        if (denominazione != null)
                            indirizzo = " " + indirizzo + " " + denominazione.trim();
                        link.href = '#';
                        link.innerHTML = indirizzo;

                        var found = false;
                        for (var ind = 0; ind < divresults.childNodes.length; ind++) {
                            if (divresults.childNodes[ind].innerHTML == indirizzo) {
                                found = true;
                                continue;
                            }
                        }
                        if (found == false) {
                            divresults.appendChild(link);
                            var br = document.createElement('br');
                            divresults.appendChild(br);
                            numResults++;
                        }

                        var point = null;
                        point = new Proj4js.Point(pointCentrx, pointCentry);
                        Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                        var context = {
                            x: point.x,
                            y: point.y,
                            provincia: provincia,
                            comune: comune,
                            tipoLoc: '6',
                            statoLoc: '6',
                            address: indirizzo,
                            dug: dug,
                            denominazione: denominazione,
                            entitaId: entitaId,
                            descrizUff: descrizUff,
                            tipoStrada: tipoStrada,
                            geocodingObject: this.geocodingObject
                        };
                        OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                    }
                    if (this.geocodingObject.provComDisabled && numResults == 1 && !showAllLinks) {
                        divresults.innerHTML = '';
                        var showResultFunc = this.geocodingObject.showResult.bind(context);
                        showResultFunc();
                    }
                }
                if (this.geocodingObject.selectLoc.value == 'Strada') {
                    var showAllLinks = false;
                    var numResults = 0;
                    for (i = 0; i < recordList.length; i++) {
                        var pointx = null;
                        var pointy = null;
                        var entitaId = null;
                        var pointMinx = null;
                        var pointMiny = null;
                        var pointMaxx = null;
                        var pointMaxy = null;
                        var pointCentrx = null;
                        var pointCentry = null;
                        var provincia = null;
                        var comune = null;
                        var dug = null;
                        var denominazione = null;
                        var descrizUff = null;
                        var tipoStrada = null;
                        var record = recordList[i];

                        //bounding box strada e centroide se trovati
                        pointMinx = record.MIN_X;
                        pointMiny = record.MIN_Y;
                        pointMaxx = record.MAX_X;
                        pointMaxy = record.MAX_Y;
                        pointCentrx = record.CENTR_X;
                        pointCentry = record.CENTR_Y;

                        provincia = record.PROVINCIA;
                        comune = record.COMUNE;
                        dug = record.DUG;
                        denominazione = record.DENOMINAZIONE;
                        entitaId = record.ENTITA_ID;
                        descrizUff = record.DESCRIZ_UFF;
                        tipoStrada = record.TIPO_STRADA;

                        var link = document.createElement('a');
                        var indirizzo = comune + ", ";
                        if (dug != null)
                            indirizzo = indirizzo + dug.trim();
                        if (denominazione != null)
                            indirizzo = " " + indirizzo + " " + denominazione.trim();
                        link.href = '#';
                        link.innerHTML = indirizzo;

                        var found = false;
                        for (var ind = 0; ind < divresults.childNodes.length; ind++) {
                            if (divresults.childNodes[ind].innerHTML == indirizzo) {
                                found = true;
                                continue;
                            }
                        }
                        if (found == false) {
                            divresults.appendChild(link);
                            var br = document.createElement('br');
                            divresults.appendChild(br);
                            numResults++;
                        }

                        var point = null;
                        point = new Proj4js.Point(pointCentrx, pointCentry);
                        Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                        var context = {
                            x: point.x,
                            y: point.y,
                            provincia: provincia,
                            comune: comune,
                            tipoLoc: '7',
                            statoLoc: '7',
                            address: indirizzo,
                            dug: dug,
                            denominazione: denominazione,
                            entitaId: entitaId,
                            tipoStrada: tipoStrada,
                            geocodingObject: this.geocodingObject
                        };
                        OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                    }
                    if (this.geocodingObject.provComDisabled && numResults == 1 && !showAllLinks) {
                        divresults.innerHTML = '';
                        var showResultFunc = this.geocodingObject.showResult.bind(context);
                        showResultFunc();
                    }
                }
                if (this.geocodingObject.selectLoc.value == 'Localita') {
                    var showAllLinks = false;
                    var numResults = 0;
                    for (i = 0; i < recordList.length; i++) {
                        var pointx = null;
                        var pointy = null;
                        var entitaId = null;
                        var pointMinx = null;
                        var pointMiny = null;
                        var pointMaxx = null;
                        var pointMaxy = null;
                        var pointCentrx = null;
                        var pointCentry = null;
                        var provincia = null;
                        var comune = null;
                        var dug = null;
                        var denominazione = null;
                        var descrizUff = null;
                        var tipoStrada = null;
                        var record = recordList[i];

                        //bounding box strada e centroide se trovati
                        pointMinx = record.MIN_X;
                        pointMiny = record.MIN_Y;
                        pointMaxx = record.MAX_X;
                        pointMaxy = record.MAX_Y;
                        pointCentrx = record.CENTR_X;
                        pointCentry = record.CENTR_Y;

                        provincia = record.PROVINCIA;
                        comune = record.COMUNE;
                        dug = record.DUG;
                        denominazione = record.DENOMINAZIONE;
                        entitaId = record.ENTITA_ID;
                        descrizUff = record.DESCRIZ_UFF;
                        tipoStrada = record.TIPO_STRADA;

                        if (tipoStrada = 'LC')
                        {
                            var link = document.createElement('a');
                            var indirizzo = comune + ", ";
                            if (dug != null)
                                indirizzo = indirizzo + dug.trim();
                            if (denominazione != null)
                                indirizzo = " " + indirizzo + " " + denominazione.trim();
                            link.href = '#';
                            link.innerHTML = indirizzo;

                            var found = false;
                            for (var ind = 0; ind < divresults.childNodes.length; ind++) {
                                if (divresults.childNodes[ind].innerHTML == indirizzo) {
                                    found = true;
                                    continue;
                                }
                            }
                            if (found == false) {
                                divresults.appendChild(link);
                                var br = document.createElement('br');
                                divresults.appendChild(br);
                                numResults++;
                            }

                            var point = null;
                            point = new Proj4js.Point(pointCentrx, pointCentry);
                            Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                            var context = {
                                x: point.x,
                                y: point.y,
                                provincia: provincia,
                                comune: comune,
                                tipoLoc: '8',
                                statoLoc: '8',
                                address: indirizzo,
                                dug: dug,
                                denominazione: denominazione,
                                entitaId: entitaId,
                                tipoStrada: tipoStrada,
                                geocodingObject: this.geocodingObject
                            };
                            OpenLayers.Event.observe(link, "click", this.geocodingObject.showResult.bind(context));
                        }
                    }
                    if (this.geocodingObject.provComDisabled && numResults == 1 && !showAllLinks) {
                        divresults.innerHTML = '';
                        var showResultFunc = this.geocodingObject.showResult.bind(context);
                        showResultFunc();
                    }
                }
                this.geocodingObject.divpanel.appendChild(divresults);
            } else {
                //alert(GeoER.i18n('geocodingNoResults'));
                alert('Nessun risultato trovato');
            }
            try {
                var top = document.getElementById("idDivStatoLoc").offsetTop; //Getting Y of target element
                window.scrollTo(0, top);
            } catch (e) {
            }
        }
    },
    parseKmString: function (s) {
        if (s.lastIndexOf('+') != -1) {
            var index = s.indexOf("+");
            var sKm = s.substr(0, index).trim();
            var sM = s.substr(index + 1, s.length).trim();
            if (sM.length == 0)
                sM = '000';
            else if (sM.length == 1)
                sM = sM + '00';
            else if (sM.length == 2)
                sM = sM + '0';
            else if (sM.length > 3)
                sM = sM.substr(0, 3);
            var sKmF = 'Km ' + sKm + '+' + sM;
            var sKmF2 = sKm + '+' + sM;
            var iKm = new Number(sKm);
            var isM = new Number('0.' + sM);
            return {'sKmF': sKmF, 'sKmF2': sKmF2, 'Km': (iKm + isM) * 1000};
        } else if (s.lastIndexOf('.') != -1) {
            var index = s.indexOf(".");
            var sKm = s.substr(0, index).trim();
            var sM = s.substr(index + 1, s.length).trim();
            if (sM.length == 0)
                sM = '000';
            else if (sM.length == 1)
                sM = sM + '00';
            else if (sM.length == 2)
                sM = sM + '0';
            else if (sM.length > 3)
                sM = sM.substr(0, 3);
            var sKmF = 'Km ' + sKm + '+' + sM;
            var sKmF2 = sKm + '+' + sM;
            var iKm = new Number(sKm);
            var isM = new Number('0.' + sM);
            return {'sKmF': sKmF, 'sKmF2': sKmF2, 'Km': (iKm + isM) * 1000};
        } else if (s.lastIndexOf(',') != -1) {
            var index = s.indexOf(",");
            var sKm = s.substr(0, index).trim();
            var sM = s.substr(index + 1, s.length).trim();
            if (sM.length == 0)
                sM = '000';
            else if (sM.length == 1)
                sM = sM + '00';
            else if (sM.length == 2)
                sM = sM + '0';
            else if (sM.length > 3)
                sM = sM.substr(0, 3);
            var sKmF = 'Km ' + sKm + '+' + sM;
            var sKmF2 = sKm + '+' + sM;
            var iKm = new Number(sKm);
            var isM = new Number('0.' + sM);
            return {'sKmF': sKmF, 'sKmF2': sKmF2, 'Km': (iKm + isM) * 1000};
        } else {
            if (s.trim().length == 0)
                return {'sKmF': 'Km 0+000', 'sKmF2': '0+000', 'Km': 0};
            else
                return {'sKmF': 'Km ' + s + '+000', 'sKmF2': s + '+000', 'Km': new Number(s) * 1000};
        }
    },
    successInitLRS: function (request) {
        if (request.responseXML == null && request.responseText == null) {
            alert("Errore nella connessione ad SDE; impossibile localizzare la chilometrica");
            return;
        }
        var xmlResponse = request.responseXML;
        if (!xmlResponse || request.fileType != "XML") {
            this.idLRS = request.responseText;
        }
    },
    successQueryXY: function (request) {
        if (request != null)
        {
            var pointx = request.x;
            var pointy = request.y;

            //controllo se sono andato fuori range
            if (pointx != null && pointx != 0 && pointy != null && pointy != 0) {
                //this.x=pointx;
                //this.y=pointy;
                var context = {
                    provincia: this.provincia.toUpperCase(),
                    m: this.m,
                    geocodingObject: this.geocodingObject
                };

                var contextSetFields = {
                    provincia: this.provincia.toUpperCase(),
                    comune: this.comune.toUpperCase(),
                    m: this.m,
                    entitaId: this.entitaId,
                    showResultFunc: this,
                    geocodingObject: this.geocodingObject,
                    address: this.address,
                    sigla: this.sigla,
                    denominazione: this.denominazione
                };

                var successCheckRangeFunc = this.geocodingObject.successCheckRange.bind(context);
                var eId;
                if (this.entitaId)
                    eId = this.entitaId;
                else
                    eId = this.geocodingObject.sEntitaId;


                var url = this.geocodingObject.localizzatoreUrl + 'queryProgJson' + "?idConn=" + this.geocodingObject.idLRS +
                        "&x=" + pointx +
                        "&y=" + pointy +
                        "&asta=" + 'ID_ENTITA=\'' + eId + '\'' +
                        "&callback=?";

                var setFieldsForChilometricaFunc = this.geocodingObject.setFieldsForChilometrica.bind(contextSetFields);
                $.when(this.geocodingObject.callJsonp(url, successCheckRangeFunc)).always(setFieldsForChilometricaFunc);
                /*this.geocodingObject.locked = true;
                 var contextWait={
                 tipoLoc:'QueryXY',
                 x:pointx,
                 y:pointy,
                 geocodingObject:this.geocodingObject
                 };
                 var waitFunc = this.geocodingObject.wait.bind(contextWait);
                 this.geocodingObject.waitObj = setInterval(waitFunc, 500);*/
            }
        }
    },
    successQueryXYCerca: function (request) {
        var format = new OpenLayers.Format.XML();
        var doc;
        if (request.responseXML == null || !request.responseXML.documentElement) {
            doc = format.read(request.responseText);
        } else {
            doc = request.responseXML;
        }
        //var recordList=format.getElementsByTagNameNS(xmlResponse,"www.sitecoinf.it/records","ns2",'coord');
        //var coord=recordList[0];
        var pointxNode = format.getElementsByTagNameNS(doc.documentElement, "http://www.sitecoinf.it/values", 'x');
        var pointyNode = format.getElementsByTagNameNS(doc.documentElement, "http://www.sitecoinf.it/values", 'y');
        if (pointxNode != null && pointxNode.length > 0) {
            if (pointxNode[0].firstChild != null) {
                var pointx = (new Number(pointxNode[0].firstChild.nodeValue)).valueOf();
            }
        }
        if (pointyNode != null && pointyNode.length > 0) {
            if (pointyNode[0].firstChild != null) {
                var pointy = (new Number(pointyNode[0].firstChild.nodeValue)).valueOf();
            }
        }

        //controllo se sono andato fuori range
        if (pointx != 0 && pointy != 0) {
            this.geocodingObject.xCerca = pointx;
            this.geocodingObject.yCerca = pointy;
        }
    },
    checkComune: function (point, comune, entitaId, showResultFunc)
    {
        if (!this.hasCheckComune)
        {
            this.comuneLoc = null;
            this.provinciaLoc = null;
            return;
        }
        var context = {
            tipoLoc: 'ComuneKm',
            x: point.x,
            y: point.y,
            comune: comune,
            entitaId: entitaId,
            showResultFunc: showResultFunc,
            geocodingObject: this
        };

        var successQueryRect4Func = this.successQueryRect4.bind(context);

        var x1 = point.x - 10;
        var y1 = point.y - 10;
        var x2 = point.x + 10;
        var y2 = point.y + 10;
        var url = this.localizzatoreUrl + 'queryRect4Json' + "?idMap=" + this.idMap +
                "&x1=" + x1 +
                "&y1=" + y1 +
                "&x2=" + x2 +
                "&y2=" + y2 +
                "&layers=" + 'COMUNI' +
                "&maxResult=" + 1 +
                "&callback=?";

        $.getJSON(url, {}, successQueryRect4Func).fail(function (jqXHR, textStatus, errorThrown) {
            alert("fail " + errorThrown + "; " + jqXHR + textStatus);
        });
    },
    successQueryRect4: function (request)
    {
        var num_civ_index;
        var sub_civ_index;
        var comune_index;
        var provincia_index;
        var tp_nome_index;
        var id_toponim_index;
        var id_nciv_index;
        var indirizzo_index;
        var denominazi_index;
        var id_entita_index;
        var st_amm_index;
        var st_num_index;
        var st_samm_index;
        var codpro_index;

        var num_civ;
        var sub_civ;
        var comune;
        var provincia;
        var tp_nome;
        var id_toponim;
        var id_nciv;
        var indirizzo;
        var denominazi;
        var id_entita;
        var st_amm;
        var st_num;
        var st_samm;
        var codpro;

        var strada1;
        var strada2;

        if (this.tipoLoc == 'Comune')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'NM_COM')
                        comune_index = i;
                    if (objsFields[i] == 'NM_PRV')
                        provincia_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                comune = objsFields[comune_index];
                provincia = objsFields[provincia_index];
                this.geocodingObject.comuneLoc = comune.toUpperCase();
                this.geocodingObject.provinciaLoc = provincia.toUpperCase();
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                    this.geocodingObject.resetCampiHidden();
                    var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
                    var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
                    statoLocalizzazioneHidden.value = "-10";
                    tipoLocalizzazioneHidden.value = '1';
                    document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-10"].value;
                    document.getElementById("labelLocalizzazioneDesc").innerText = '';
                    document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                    document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                    document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }

        if (this.tipoLoc == 'ComuneKm')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'NM_COM')
                        comune_index = i;
                    if (objsFields[i] == 'NM_PRV')
                        provincia_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                comune = objsFields[comune_index];
                provincia = objsFields[provincia_index];
                this.geocodingObject.comuneLoc = comune.toUpperCase();
                this.geocodingObject.provinciaLoc = provincia.toUpperCase();

                if (this.geocodingObject.comuneLoc != this.comune && this.geocodingObject.hasCheckComune)
                {
                    this.geocodingObject.statoLoc = '-22';
                    document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                }
                if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc[this.geocodingObject.statoLoc].value;
                else
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc[this.statoLoc].value;

                var markAndGoToPointFunc = this.geocodingObject.markAndGoToPoint.bind(this.showResultFunc);
                markAndGoToPointFunc();
            }
        }

        if (this.tipoLoc == 'Civico')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'NUM_CIV')
                        num_civ_index = i;
                    if (objsFields[i] == 'SUB_CIV')
                        sub_civ_index = i;
                    if (objsFields[i] == 'COMUNE')
                        comune_index = i;
                    if (objsFields[i] == 'PROVINCIA')
                        provincia_index = i;
                    if (objsFields[i] == 'TP_NOME')
                        tp_nome_index = i;
                    if (objsFields[i] == 'ID_TOPONIM')
                        id_toponim_index = i;
                    if (objsFields[i] == 'ID_NCIV')
                        id_nciv_index = i;
                    if (objsFields[i] == 'INDIRIZZO')
                        indirizzo_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                num_civ = objsFields[num_civ_index];
                sub_civ = objsFields[sub_civ_index];
                comune = objsFields[comune_index];
                provincia = objsFields[provincia_index];
                tp_nome = objsFields[tp_nome_index];
                id_toponim = objsFields[id_toponim_index];
                id_nciv = objsFields[id_nciv_index];
                indirizzo = objsFields[indirizzo_index];

                var civico;
                if (num_civ && num_civ.trim().length > 0)
                    civico = num_civ.trim();
                if (sub_civ && sub_civ.trim().length > 0)
                    civico = civico + "/" + sub_civ;

                var context = {
                    geocodingObject: this.geocodingObject
                };

                var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

                var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);

                var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                        "&p_toponimo=" + tp_nome +
                        "&p_comune=" + comune +
                        "&p_provincia=" + provincia +
                        "&p_tipo_coord=" + this.geocodingObject.sRif +
                        "&p_rif_geo_civ=" + this.geocodingObject.rifGeoCiv +
                        "&p_civico=" + civico +
                        "&callback=?";

                $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                    this.geocodingObject.resetCampiHidden();
                    var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
                    var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
                    statoLocalizzazioneHidden.value = "-10";
                    tipoLocalizzazioneHidden.value = '1';
                    document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-10"].value;
                    document.getElementById("labelLocalizzazioneDesc").innerText = '';
                    document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                    document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                    document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }

        if (this.tipoLoc == 'Strada')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'NUM_CIV')
                        num_civ_index = i;
                    if (objsFields[i] == 'SUB_CIV')
                        sub_civ_index = i;
                    if (objsFields[i] == 'COMUNE')
                        comune_index = i;
                    if (objsFields[i] == 'PROVINCIA')
                        provincia_index = i;
                    if (objsFields[i] == 'TP_NOME')
                        tp_nome_index = i;
                    if (objsFields[i] == 'ID_TOPONIM')
                        id_toponim_index = i;
                    if (objsFields[i] == 'ID_NCIV')
                        id_nciv_index = i;
                    if (objsFields[i] == 'INDIRIZZO')
                        indirizzo_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                num_civ = objsFields[num_civ_index];
                sub_civ = objsFields[sub_civ_index];
                comune = objsFields[comune_index];
                provincia = objsFields[provincia_index];
                tp_nome = objsFields[tp_nome_index];
                id_toponim = objsFields[id_toponim_index];
                id_nciv = objsFields[id_nciv_index];
                indirizzo = objsFields[indirizzo_index];

                var civico;
                if (num_civ && num_civ.trim().length > 0)
                    civico = num_civ.trim();
                if (sub_civ && sub_civ.trim().length > 0)
                    civico = civico + "/" + sub_civ;

                var context = {
                    geocodingObject: this.geocodingObject
                };

                var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

                var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);

                var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                        "&p_toponimo=" + tp_nome +
                        "&p_comune=" + comune +
                        "&p_provincia=" + provincia +
                        "&p_tipo_coord=" + this.geocodingObject.sRif +
                        "&p_rif_geo_civ=" + this.geocodingObject.rifGeoCiv +
                        "&p_civico=" + civico +
                        "&callback=?";

                $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                    this.geocodingObject.resetCampiHidden();
                    var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
                    var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
                    statoLocalizzazioneHidden.value = "-10";
                    tipoLocalizzazioneHidden.value = '1';
                    document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-10"].value;
                    document.getElementById("labelLocalizzazioneDesc").innerText = '';
                    document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                    document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                    document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }

        if (this.tipoLoc == 'Incrocio')
        {
            this.geocodingObject.tempResult = 1;
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'TP_NOME')
                        tp_nome_index = i;
                }

                var objs = request.oil[0].values.objs;

                if (objs != null && objs.length >= 2)
                {
                    for (j = 0; j <= objs.length - 1; j++)
                    {
                        if (this.geocodingObject.tempResult == 1)
                        {
                            for (k = j + 1; k <= objs.length - 1; k++)
                            {
                                if (this.geocodingObject.tempResult == 1)
                                {
                                    objsFields = objs[j].objs;
                                    strada1 = objsFields[tp_nome_index];

                                    objsFields = objs[k].objs;
                                    strada2 = objsFields[tp_nome_index];

                                    try {
                                        comune = document.getElementById('comuneHidden').value;
                                        provincia = document.getElementById('provinciaHidden').value;
                                    } catch (e)
                                    {
                                        comune = this.geocodingObject.comuneLoc;
                                        provincia = this.geocodingObject.provinciaLoc;
                                    }

                                    var context = {
                                        geocodingObject: this.geocodingObject
                                    };

                                    var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

                                    var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);


                                    var url = this.geocodingObject.localizzatoreUrl + 'normIncrocioJson' + "?handle=" + this.geocodingObject.handle +
                                            "&p_toponimo1=" + strada1 +
                                            "&p_comune1=" + comune +
                                            "&p_provincia1=" + provincia +
                                            "&p_toponimo2=" + strada2 +
                                            "&p_comune2=" + comune +
                                            "&p_provincia2=" + provincia +
                                            "&p_tipo_coord=" + this.geocodingObject.sRif +
                                            "&callback=?";

                                    $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                                        alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                                    });
                                }
                            }
                        }
                    }
                }
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                    this.geocodingObject.resetCampiHidden();
                    var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
                    var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
                    statoLocalizzazioneHidden.value = "-10";
                    tipoLocalizzazioneHidden.value = '1';
                    document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-10"].value;
                    document.getElementById("labelLocalizzazioneDesc").innerText = '';
                    document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                    document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                    document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }
        if (this.tipoLoc == 'Chilometrica')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'DENOMINAZI')
                        denominazi_index = i;
                    if (objsFields[i] == 'ID_ENTITA')
                        id_entita_index = i;
                    if (objsFields[i] == 'ST_AMM')
                        st_amm_index = i;
                    if (objsFields[i] == 'ST_NUM')
                        st_num_index = i;
                    if (objsFields[i] == 'ST_SAMM')
                        st_samm_index = i;
                    if (objsFields[i] == 'CODPRO')
                        codpro_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                denominazi = objsFields[denominazi_index];
                id_entita = objsFields[id_entita_index];
                st_amm = objsFields[st_amm_index];
                st_num = objsFields[st_num_index];
                st_samm = objsFields[st_samm_index];
                codpro = objsFields[codpro_index];

                var sigla = "";
                if (st_amm != null)
                    sigla += st_amm.trim().toUpperCase();
                if (st_num != null)
                    sigla += st_num.trim().substring(0, st_num.trim().length - 2).toUpperCase();
                if (st_samm != null)
                    sigla += st_samm.trim().toUpperCase();

                if (document.getElementById('provinciaHidden') != null)
                    provincia = document.getElementById('provinciaHidden').value.toUpperCase();
                else
                    provincia = this.geocodingObject.getDescProvincia(codpro);



                var url = this.geocodingObject.localizzatoreUrl + 'queryProgJson' + "?idConn=" + this.geocodingObject.idLRS +
                        "&x=" + this.x +
                        "&y=" + this.y +
                        "&asta=" + 'ID_ENTITA=\'' + id_entita + '\'' +
                        "&callback=?";

                var context = {
                    provincia: provincia,
                    m: this.geocodingObject.m,
                    geocodingObject: this.geocodingObject
                };
                var successCheckRangeFunc = this.geocodingObject.successCheckRange.bind(context);

                var contextShowResult = {
                    sigla: sigla,
                    denominazi: denominazi,
                    provincia: provincia,
                    x: this.x,
                    y: this.y,
                    id_entita: id_entita,
                    xInc: this.xInc,
                    yInc: this.yInc,
                    geocodingObject: this.geocodingObject
                };
                var goToShowResultFunc = this.geocodingObject.goToShowResult.bind(contextShowResult);

                $.when(this.geocodingObject.callJsonp(url, successCheckRangeFunc)).always(goToShowResultFunc);







                /*var context={ 
                 provincia:provincia,
                 m:this.geocodingObject.m,
                 geocodingObject:this.geocodingObject
                 };
                 var successCheckRangeFunc=this.geocodingObject.successCheckRange.bind(context);
                 this.geocodingObject.statoLoc = "3";
                 OpenLayers.Request.GET({
                 url:this.geocodingObject.localizzatoreUrl + 'queryProg',
                 async: false,
                 params: {
                 x:this.x,
                 y:this.y,
                 asta:'ID_ENTITA=\''+id_entita+'\'',
                 idConn:this.geocodingObject.idLRS
                 },
                 callback:successCheckRangeFunc,
                 failure:function(){
                 this.geocodingObject.statoLoc = "-9";
                 alert('Impossibile localizzare per chilometrica');
                 }
                 });
                 this.geocodingObject.Km = this.geocodingObject.KmTemp;
                 this.geocodingObject.x = this.x;
                 this.geocodingObject.y = this.y;
                 if (sigla.trim().length > 0)
                 var address = sigla + ' ' + denominazi+', '+this.geocodingObject.parseKmString(this.geocodingObject.Km / 1000 + '').sKmF;
                 else
                 var address = denominazi+', '+this.geocodingObject.parseKmString(this.geocodingObject.Km / 1000 + '').sKmF
                 var comune = "Comune Generico";
                 if (document.getElementById('comuneHidden') != null)
                 comune = document.getElementById('comuneHidden').value.toUpperCase();
                 var comune = comune;
                 var provincia = provincia;
                 var context={ 
                 x:this.x,
                 y:this.y,
                 tipoLoc:'3',
                 statoLoc:this.geocodingObject.statoLoc,
                 KmDaMappa:true,
                 address:address,
                 provincia:provincia,
                 comune:comune,
                 denominazione:denominazi,
                 sigla:sigla,
                 entitaId:id_entita,
                 xInc:this.xInc,
                 yInc:this.yInc,
                 geocodingObject:this.geocodingObject
                 };
                 var showResultFunc=this.geocodingObject.showResult.bind(context);
                 showResultFunc();*/
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                    this.geocodingObject.resetCampiHidden();
                    var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
                    var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
                    statoLocalizzazioneHidden.value = "-10";
                    tipoLocalizzazioneHidden.value = '1';
                    document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc["-10"].value;
                    document.getElementById("labelLocalizzazioneDesc").innerText = '';
                    document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                    document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                    document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }
        if (this.tipoLoc == 'Luogo notevole')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'TP_NOME')
                        tp_nome_index = i;
                    if (objsFields[i] == 'ID_E')
                        id_entita_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                tp_nome = objsFields[tp_nome_index];
                id_entita = objsFields[id_entita_index];
                comune = this.geocodingObject.comuneLoc;
                provincia = this.geocodingObject.provinciaLoc;

                var context = {
                    geocodingObject: this.geocodingObject
                };

                var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

                var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);

                var url = this.geocodingObject.localizzatoreUrl + 'normLuoghiNotevoliJson' + "?handle=" + this.geocodingObject.handle +
                        "&p_luogo=" + tp_nome +
                        "&p_comune=" + comune +
                        "&p_provincia=" + provincia +
                        "&p_tipo_coord=" + this.geocodingObject.sRif +
                        "&callback=?";

                $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }
        if (this.tipoLoc == 'Strada')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'TP_NOME')
                        tp_nome_index = i;
                    if (objsFields[i] == 'ID_E')
                        id_entita_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                tp_nome = objsFields[tp_nome_index];
                id_entita = objsFields[id_entita_index];
                comune = this.geocodingObject.comuneLoc;
                provincia = this.geocodingObject.provinciaLoc;

                var context = {
                    geocodingObject: this.geocodingObject
                };

                var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

                var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);

                var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                        "&p_toponimo=" + tp_nome +
                        "&p_comune=" + comune +
                        "&p_provincia=" + provincia +
                        "&p_tipo_coord=" + this.geocodingObject.sRif +
                        "&callback=?";

                $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }
        if (this.tipoLoc == 'Localita')
        {
            if (request != null && request.oil != null && request.oil.length > 0)
            {
                var objsFields = request.oil[0].fields.objs;
                for (i = 0; i < objsFields.length; i++)
                {
                    if (objsFields[i] == 'TP_NOME')
                        tp_nome_index = i;
                    if (objsFields[i] == 'ID_E')
                        id_entita_index = i;
                }

                var objsFields = request.oil[0].values.objs[0].objs;
                tp_nome = objsFields[tp_nome_index];
                id_entita = objsFields[id_entita_index];
                comune = this.geocodingObject.comuneLoc;
                provincia = this.geocodingObject.provinciaLoc;

                var context = {
                    geocodingObject: this.geocodingObject
                };

                var successLocalizzazioneFunc = this.geocodingObject.successLocalizzazione.bind(context);

                var failureLocalizzazioneFunc = this.geocodingObject.failureLocalizzazione.bind(this.geocodingObject);

                var url = this.geocodingObject.localizzatoreUrl + 'normIndirizzoJson' + "?handle=" + this.geocodingObject.handle +
                        "&p_toponimo=" + tp_nome +
                        "&p_comune=" + comune +
                        "&p_provincia=" + provincia +
                        "&p_tipo_coord=" + this.geocodingObject.sRif +
                        "&callback=?";

                $.getJSON(url, {}, successLocalizzazioneFunc).fail(function (jqXHR, textStatus, errorThrown) {
                    alert("fail " + errorThrown + "; " + jqXHR + textStatus);
                });
            } else
            {
                alert('Nessun risultato trovato');
                try {
                    this.geocodingObject.markers.clearMarkers();
                    this.geocodingObject.map.removePopup(this.geocodingObject.popup);
                } catch (e)
                {
                    this.geocodingObject.locked = false;
                    this.geocodingObject.elapsedTime = 0;
                } finally
                {
                    return;
                }
            }
        }
        document.body.style.cursor = 'auto';
        this.geocodingObject.locked = false;
        this.geocodingObject.elapsedTime = 0;
    },
    successQueryRectIncrocioFunc: function (request) {
        try {
            document.getElementById("tipoLocalizzazioneHidden").value = "2";
            document.getElementById("statoLocalizzazioneHidden").value = "-5";
            document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
        } catch (e)
        {
        }
        //document.getElementById("idDivStatoLoc").innerText=this.geocodingObject.enumStatoLoc["-5"].value;
        var format = new OpenLayers.Format.XML();
        var doc;
        if (request.responseXML == null || !request.responseXML.documentElement) {
            doc = format.read(request.responseText);
        } else {
            doc = request.responseXML;
        }
        /*this.markers.clearMarkers();
         if(this.popup!=null)
         this.map.removePopup(this.popup);*/
        var recordList = format.getElementsByTagNameNS(doc.documentElement, "http://www.sitecoinf.it/records", "records");
        if (recordList != null && recordList.length > 0) {
            var divresults = document.getElementById('divresults');
            if (!divresults) {
                var divresults = document.createElement('div');
                divresults.id = 'divresults';
                divresults.className = 'divresults';
            } else {
                divresults.innerHTML = '';
            }
            //divresults.innerHTML=GeoER.i18n('geocodingResults')+'<br>';
            divresults.innerHTML = '<br>' + 'Risultati (click per confermare la localizzazione):' + '<br>';


            for (i = 0; i < recordList.length; i++) {
                var pointx = null;
                var pointy = null;
                var comune1 = null;
                var provincia1 = null;
                var dug1 = null;
                var denominazione1 = null;
                var dug2 = null;
                var denominazione2 = null;
                var entitaId1 = null;
                var entitaId2 = null;
                var incrocioId = null;
                var xInc = null;
                var yInc = null;


                var record = recordList[i];
                //coord incrocio se trovate
                var pointxNode = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'INC_X');
                var pointyNode = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'INC_Y');
                if (pointxNode != null && pointxNode.length > 0) {
                    if (pointxNode[0].firstChild != null) {
                        pointx = (new Number(pointxNode[0].firstChild.nodeValue)).valueOf();
                    }
                }
                if (pointyNode != null && pointyNode.length > 0) {
                    if (pointyNode[0].firstChild != null) {
                        pointy = (new Number(pointyNode[0].firstChild.nodeValue)).valueOf();
                    }
                }

                //incrocio
                var comune1Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'COMUNE1');
                var provincia1Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'PROVINCIA1');
                var dug1Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'DUG1');
                var denominazione1Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'DENOMINAZIONE1');
                var comune2Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'COMUNE2');
                var dug2Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'DUG2');
                var denominazione2Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'DENOMINAZIONE2');
                var entita1Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'ENTITA_ID1');
                var entita2Node = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'ENTITA_ID2');
                var incrocioIdNode = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'INCROCIO_ID');
                var xIncNode = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'INC_X');
                var yIncNode = format.getElementsByTagNameNS(record, "http://www.sitecoinf.it/values", 'INC_Y');

                if (comune1Node != null && comune1Node.length > 0) {
                    if (comune1Node[0].firstChild != null) {
                        comune1 = comune1Node[0].firstChild.nodeValue;
                    }
                }
                if (provincia1Node != null && provincia1Node.length > 0) {
                    if (provincia1Node[0].firstChild != null) {
                        provincia1 = provincia1Node[0].firstChild.nodeValue;
                    }
                }
                if (dug1Node != null && dug1Node.length > 0) {
                    if (dug1Node[0].firstChild != null) {
                        dug1 = dug1Node[0].firstChild.nodeValue;
                    }
                }
                if (denominazione1Node != null && denominazione1Node.length > 0) {
                    if (denominazione1Node[0].firstChild != null) {
                        denominazione1 = denominazione1Node[0].firstChild.nodeValue;
                    }
                }
                if (dug2Node != null && dug2Node.length > 0) {
                    if (dug2Node[0].firstChild != null) {
                        dug2 = dug1Node[0].firstChild.nodeValue;
                    }
                }
                if (denominazione2Node != null && denominazione2Node.length > 0) {
                    if (denominazione2Node[0].firstChild != null) {
                        denominazione2 = denominazione2Node[0].firstChild.nodeValue;
                    }
                }
                if (entita1Node != null && entita1Node.length > 0) {
                    if (entita1Node[0].firstChild != null) {
                        entitaId1 = entita1Node[0].firstChild.nodeValue;
                    }
                }
                if (entita2Node != null && entita2Node.length > 0) {
                    if (entita2Node[0].firstChild != null) {
                        entitaId2 = entita2Node[0].firstChild.nodeValue;
                    }
                }
                if (incrocioIdNode != null && incrocioIdNode.length > 0) {
                    if (incrocioIdNode[0].firstChild != null) {
                        incrocioId = incrocioIdNode[0].firstChild.nodeValue;
                    }
                }
                if (xIncNode != null && xIncNode.length > 0) {
                    if (xIncNode[0].firstChild != null) {
                        xInc = xIncNode[0].firstChild.nodeValue;
                    }
                }
                if (yIncNode != null && yIncNode.length > 0) {
                    if (yIncNode[0].firstChild != null) {
                        yInc = yIncNode[0].firstChild.nodeValue;
                    }
                }

                var link = document.createElement('a');
                var indirizzo = comune1 + ", ";
                if (dug1 != null)
                    indirizzo = indirizzo + dug1.trim();
                if (denominazione1 != null)
                    indirizzo = " " + indirizzo + " " + denominazione1.trim() + " incr.";
                if (dug2 != null)
                    indirizzo = " " + indirizzo + " " + dug2.trim();
                if (denominazione2 != null)
                    indirizzo = " " + indirizzo + " " + denominazione2.trim();
                link.href = '#';
                link.innerHTML = indirizzo;

                var found = false;
                for (j = 0; j < divresults.childNodes.length; j++) {
                    if (divresults.childNodes[j].innerHTML == indirizzo) {
                        found = true;
                        continue;
                    }
                }
                if (found == false) {
                    divresults.appendChild(link);
                    var br = document.createElement('br');
                    divresults.appendChild(br);
                }

                var point = null;
                if (pointx != null && pointy != null) {
                    /*if (this.sRif == "UTMRER" || this.sRif == "UTMA") 
                     point = new Proj4js.Point(pointx, pointy + 4000000);
                     else
                     point = new Proj4js.Point(pointx, pointy);*/
                    point = new Proj4js.Point(pointx, pointy);
                    Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
                    /*if (this.map.CLASS_NAME == "Localizzatore.RERMap")
                     {
                     point.x = point.x - 0.00097;
                     point.y = point.y - 0.00012;
                     }*/
                    var context = {
                        x: point.x,
                        y: point.y,
                        tipoLoc: '2',
                        statoLoc: '2',
                        address: indirizzo,
                        provincia: provincia1,
                        comune: comune1,
                        dug1: dug1,
                        denominazione1: denominazione1,
                        dug2: dug2,
                        denominazione2: denominazione2,
                        entitaId1: entitaId1,
                        entitaId2: entitaId2,
                        incrocioId: incrocioId,
                        xInc: xInc,
                        yInc: yInc,
                        geocodingObject: this.geocodingObject
                    };

                    divresults.innerHTML = '';
                    var showResultFunc = this.geocodingObject.showResult.bind(context);
                    showResultFunc();
                } else {
                    var context = {
                        tipoLoc: '2',
                        statoLoc: '-10',
                        geocodingObject: this
                    };
                }
            }
            if (this.divpanel)
                this.divpanel.appendChild(divresults);
            this.geocodingObject.tempResult = 0;
        } else
        {
            this.geocodingObject.tempResult = 1;
        }
    },
    successCheckRange: function (request) {
        if (request != null)
        {
            KmTemp = request.m;
            KmMin = request.MMin;
            KmMax = request.MMax;

            this.geocodingObject.KmTemp = KmTemp;
            this.geocodingObject.KmMin = KmMin;
            this.geocodingObject.KmMax = KmMax;
            /*if (this.provincia == 'BOLOGNA')
             {
             this.geocodingObject.KmTemp = KmTemp * 1000;
             this.geocodingObject.KmMin = KmMin * 1000;
             this.geocodingObject.KmMax = KmMax * 1000;
             } else
             {
             this.geocodingObject.KmTemp = KmTemp;
             this.geocodingObject.KmMin = KmMin;
             this.geocodingObject.KmMax = KmMax;
             }*/

            var toll = 100.0;
            if (this.provincia == 'BOLOGNA')
                toll /= 1000;
            if (!this.geocodingObject.KmTemp || (this.geocodingObject.KmTemp - this.geocodingObject.Km < -toll || this.geocodingObject.Km - this.geocodingObject.KmTemp > toll)) {
                this.geocodingObject.reset();
                this.geocodingObject.x = null;
                this.geocodingObject.y = null;
                this.geocodingObject.statoLoc = "-9";
                if (this.provincia == 'BOLOGNA')
                    alert('Progressiva inserita al di fuori del range consentito (' + this.geocodingObject.parseKmString('' + this.geocodingObject.KmMin).sKmF + '; ' + this.geocodingObject.parseKmString('' + this.geocodingObject.KmMax).sKmF + ')');
                else
                    alert('Progressiva inserita al di fuori del range consentito (' + this.geocodingObject.parseKmString('' + this.geocodingObject.KmMin / 1000).sKmF + '; ' + this.geocodingObject.parseKmString('' + this.geocodingObject.KmMax / 1000).sKmF + ')');
            }
            //progressiva corretta
            else {
                this.geocodingObject.statoLoc = "3";
                this.geocodingObject.x = request.XPro;
                this.geocodingObject.y = request.YPro;
                //this.geocodingObject.x=this.x;
                //this.geocodingObject.y=this.y;
            }
        }
        this.geocodingObject.locked = false;
    },
    showResultCerca: function () {

        if (this.geocodingObject.map != null) {
            if (this.geocodingObject.map.getLayer(this.geocodingObject.markers.id) == null) {
                this.geocodingObject.map.addLayer(this.geocodingObject.markers);
            }
        }

        //this.geocodingObject.markers.clearMarkers();
        if (this.geocodingObject.popup != null)
            this.geocodingObject.map.removePopup(this.geocodingObject.popup);
        AutoSizeFramedCloud = OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
            'autoSize': true,
            'minSize': new OpenLayers.Size(200, 130)
        });
        popupClass = AutoSizeFramedCloud;
        popupContentHTML = this.address;

        if (this.x != null && this.y != null)
        {
            var coord = new OpenLayers.LonLat(this.x, this.y);
        } else
        {
            return;
        }

        var feature = new OpenLayers.Feature(this.geocodingObject.markers, coord);
        feature.closeBox = true;
        feature.popupClass = popupClass;
        feature.data.popupContentHTML = popupContentHTML;
        feature.data.overflow = "hidden";
        feature.data.icon = this.geocodingObject.searchIcon;
        var marker = feature.createMarker();
        this.geocodingObject.markers.addMarker(marker);
        if (marker.popup == null) {
            marker.popup = feature.createPopup(feature.closeBox);
            this.geocodingObject.popup = marker.popup;
            this.geocodingObject.map.addPopup(marker.popup);
        }
        marker.popup.hide();
        var markerClick = function (evt) {
            popupContentHTML
            this.popup.toggle();
            OpenLayers.Event.stop(evt);
        };
        var context = {
            reverseGeocodingObject: this.geocodingObject
        };
        marker.events.register("click", feature, markerClick);
        marker.events.register('dblclick', feature, this.geocodingObject.stopevent);
        marker.events.register('mousedown', feature, this.geocodingObject.stopevent);
        this.geocodingObject.map.zoomToExtent(new OpenLayers.Bounds(coord.lon - 0.001, coord.lat - 0.001, coord.lon + 0.001, coord.lat + 0.001));
        document.body.style.cursor = 'auto';
    },
    showResult: function () {
        this.geocodingObject.resetCampiHidden();
        //se ci sono i campi nascosti
        try {
            var provinciaHidden = document.getElementById("provinciaHidden");
            var comuneHidden = document.getElementById("comuneHidden");
            var denomStradaHidden = document.getElementById("denomStradaHidden");
            var denomStrada2Hidden = document.getElementById("denomStrada2Hidden");
            var numCivicoHidden = document.getElementById("numCivicoHidden");
            var subCivicoHidden = document.getElementById("subCivicoHidden");
            var sigStradaHidden = document.getElementById("sigStradaHidden");
            var numeroStradaHidden = document.getElementById("numeroStradaHidden");
            var kmHidden = document.getElementById("kmHidden");
            var XHidden = document.getElementById("XHidden");
            var YHidden = document.getElementById("YHidden");
            var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
            var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
            var idStradaHidden = document.getElementById("idStradaHidden");
            var idCivicoHidden = document.getElementById("idCivicoHidden");
            var idStrada2Hidden = document.getElementById("idStrada2Hidden");
            var idNodoHidden = document.getElementById("idNodoHidden");
            var localizzazioneHidden = document.getElementById("localizzazioneHidden");

            try
            {
                numeroStradaHidden.value = document.getElementById("numeroStrada").value;
            } catch (e) {
            }

            //civico o strada o localita
            if (this.tipoLoc == '1' || this.tipoLoc == '7' || this.tipoLoc == '8')
            {
                try {
                    statoLocalizzazioneHidden.value = this.statoLoc;
                    tipoLocalizzazioneHidden.value = '1';
                    if (this.address != null)
                    {
                        if (this.dug != null && this.dug.trim().length > 0)
                            denomStradaHidden.value = this.dug.trim() + " " + this.denominazione.trim().toUpperCase();
                        else
                            denomStradaHidden.value = this.denominazione.trim().toUpperCase();
                        idStradaHidden.value = this.entitaId.trim();
                        if (this.entitaCivicoId != null && this.entitaCivicoId.trim().length > 0)
                            idCivicoHidden.value = this.entitaCivicoId.trim();
                        if (this.dug != null && this.dug.trim().length > 0)
                            localizzazioneHidden.value = this.dug.trim() + " " + this.denominazione.trim().toUpperCase();
                        else
                            localizzazioneHidden.value = this.denominazione.trim().toUpperCase();
                        if (this.numCivico != null && this.numCivico.toString().trim().length > 0)
                        {
                            localizzazioneHidden.value = localizzazioneHidden.value + " " + this.numCivico.toString().trim();
                            numCivicoHidden.value = this.numCivico.toString().trim().toUpperCase();
                        }
                        if (this.subCivico != null && +this.subCivico.toString().trim().length > 0)
                        {
                            localizzazioneHidden.value = localizzazioneHidden.value + "/" + this.subCivico.toString().trim();
                            subCivicoHidden.value = this.subCivico.toString().trim().toUpperCase();
                        }
                        if (this.xCiv != null)
                            XHidden.value = this.xCiv;
                        if (this.yCiv != null)
                            YHidden.value = this.yCiv;
                        //riempio i campi di ricerca
                        document.getElementById("toponimo1").value = denomStradaHidden.value;
                        if (this.numCivico != null && this.numCivico.toString().trim().length > 0)
                        {
                            document.getElementById("civico").value = this.numCivico.toString().trim().toUpperCase();
                        }
                        if (this.subCivico != null && this.subCivico.toString().trim().length > 0)
                        {
                            document.getElementById("civico").value += "/" + this.subCivico.toString().trim().toUpperCase();
                        }


                        document.getElementById("labelProvinciaDesc").innerText = this.provincia.trim().toUpperCase();
                        document.getElementById("labelProvinciaDesc").style.fontWeight = 'bold';
                        document.getElementById("labelComuneDesc").innerText = this.comune.trim().toUpperCase();
                        document.getElementById("labelComuneDesc").style.fontWeight = 'bold';
                        document.getElementById("labelLocalizzazioneDesc").innerText = localizzazioneHidden.value.toUpperCase();
                        document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                        document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                        document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                        if (this.statoLoc == "1" ||
                                this.statoLoc == "2" ||
                                this.statoLoc == "3" ||
                                this.statoLoc == "4" ||
                                this.statoLoc == "5")
                        {
                            document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                            document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc[this.statoLoc].value;
                        } else
                        {
                            document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                            document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc[this.statoLoc].value;
                        }
                    }
                } catch (e) {
                }
                var markAndGoToPointFunc = this.geocodingObject.markAndGoToPoint.bind(this);
                markAndGoToPointFunc();
            }
            //incrocio
            else if (this.tipoLoc == '2')
            {
                try
                {
                    statoLocalizzazioneHidden.value = this.statoLoc;
                    tipoLocalizzazioneHidden.value = '2';
                    if (this.address != null)
                    {
                        denomStradaHidden.value = this.dug1.trim() + " " + this.denominazione1.trim().toUpperCase();
                        denomStrada2Hidden.value = this.dug2.trim() + " " + this.denominazione2.trim().toUpperCase();
                        idStradaHidden.value = this.entitaId1.trim();
                        idStrada2Hidden.value = this.entitaId2.trim();
                        idNodoHidden.value = this.incrocioId.trim();
                        localizzazioneHidden.value = denomStradaHidden.value + " incr. " + denomStrada2Hidden.value;
                        if (this.xInc != null)
                            XHidden.value = this.xInc;
                        if (this.yInc != null)
                            YHidden.value = this.yInc;

                        //riempio i campi di ricerca
                        document.getElementById("toponimo1").value = denomStradaHidden.value;
                        document.getElementById("toponimo2").value = denomStrada2Hidden.value;

                        document.getElementById("labelProvinciaDesc").innerText = this.provincia.trim();
                        document.getElementById("labelProvinciaDesc").style.fontWeight = 'bold';
                        document.getElementById("labelComuneDesc").innerText = this.comune.trim();
                        document.getElementById("labelComuneDesc").style.fontWeight = 'bold';
                        document.getElementById("labelLocalizzazioneDesc").innerText = localizzazioneHidden.value;
                        document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                        document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                        document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                        if (this.statoLoc == "1" ||
                                this.statoLoc == "2" ||
                                this.statoLoc == "3" ||
                                this.statoLoc == "4" ||
                                this.statoLoc == "5")
                        {
                            document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                            document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc[this.statoLoc].value;
                        } else
                        {
                            document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                            document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc[this.statoLoc].value;
                        }
                    }
                } catch (e) {
                }
                var markAndGoToPointFunc = this.geocodingObject.markAndGoToPoint.bind(this);
                markAndGoToPointFunc();
            }
            //chilometrica 
            else if (this.tipoLoc == '3')
            {
                //controllo se ÃƒÂ¨ un percorso calibrato
                if (this.entitaId != null && this.entitaId.length > 0 && !this.KmDaMappa) {
                    //se ÃƒÂ¨ un percorso calibrato
                    if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length) {
                        if (this.geocodingObject.idLRS != null) {
                            var m = this.km;
                            if (this.provincia.toUpperCase() == 'BOLOGNA')
                                m = m / 1000;
                            var context = {
                                provincia: this.provincia.toUpperCase(),
                                comune: this.comune.toUpperCase(),
                                m: m,
                                entitaId: this.entitaId,
                                showResultFunc: this,
                                geocodingObject: this.geocodingObject,
                                address: this.address,
                                sigla: this.sigla,
                                denominazione: this.denominazione
                            };

                            var successQueryXYFunc = this.geocodingObject.successQueryXY.bind(context);

                            var url = this.geocodingObject.localizzatoreUrl + 'queryXYJson' + "?idConn=" + this.geocodingObject.idLRS +
                                    "&road_id=" + this.entitaId +
                                    "&m=" + m +
                                    "&asta=" + '' +
                                    "&callback=?";

                            //var setFieldsForChilometricaFunc = this.geocodingObject.setFieldsForChilometrica.bind(contextSetFields);
                            $.when(this.geocodingObject.callJsonp(url, successQueryXYFunc));//.always(setFieldsForChilometricaFunc);
                            //$.getJSON(url, {}, successQueryXYFunc).fail(function (jqXHR, textStatus, errorThrown) { 
                            //    alert("fail " + errorThrown + "; " + jqXHR + textStatus); });                                   
                        }
                    } else {
                        this.statoLoc = "-11";
                        alert('Estesa amministrativa priva di calibrazione chilometrica');
                        //this.x=this.geocodingObject.pointCentrx;
                        //this.y=this.geocodingObject.pointCentry;
                    }
                }

                /*try {
                 if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
                 statoLocalizzazioneHidden.value = this.geocodingObject.statoLoc;
                 else
                 statoLocalizzazioneHidden.value = this.statoLoc;
                 tipoLocalizzazioneHidden.value = '3';
                 if (this.address != null)
                 {
                 if (this.sigla && this.sigla != null && this.sigla.length > 0)
                 {
                 //denomStradaHidden.value = this.sigla + ' ' + this.denominazione.trim().toUpperCase();
                 denomStradaHidden.value = this.denominazione.trim().toUpperCase();
                 sigStradaHidden.value = this.sigla;
                 }
                 else
                 denomStradaHidden.value = this.denominazione.trim().toUpperCase();
                 idStradaHidden.value = this.entitaId.trim();
                 localizzazioneHidden.value = this.address.toUpperCase();
                 if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
                 kmHidden.value = this.geocodingObject.Km/1000;
                 if (this.geocodingObject.x != null)
                 XHidden.value = this.geocodingObject.x;
                 if (this.geocodingObject.y != null)
                 YHidden.value = this.geocodingObject.y;
                 //riempio i campi di ricerca
                 document.getElementById("toponimo1").value = denomStradaHidden.value;
                 document.getElementById("Km").value = this.geocodingObject.parseKmString(kmHidden.value+"").sKmF2;
                 
                 
                 document.getElementById("labelProvinciaDesc").innerText = this.provincia.trim();
                 document.getElementById("labelProvinciaDesc").style.fontWeight = 'bold';  
                 document.getElementById("labelComuneDesc").innerText = this.comune.trim();
                 document.getElementById("labelComuneDesc").style.fontWeight = 'bold';  
                 document.getElementById("labelLocalizzazioneDesc").innerText = localizzazioneHidden.value;
                 document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                 document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                 document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                 if (this.geocodingObject.statoLoc == "1" ||
                 this.geocodingObject.statoLoc == "2" ||
                 this.geocodingObject.statoLoc == "3" ||
                 this.geocodingObject.statoLoc == "4" ||
                 this.geocodingObject.statoLoc == "5")
                 {
                 document.getElementById("idDivStatoLoc").className="legenda_obblig obblig";
                 this.geocodingObject.checkComune(new Proj4js.Point(XHidden.value, YHidden.value));
                 if (this.geocodingObject.comuneLoc != this.comune && this.geocodingObject.hasCheckComune)
                 {
                 this.geocodingObject.statoLoc = '-22';
                 document.getElementById("idDivStatoLoc").className="segnalazione_errore";
                 }
                 if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
                 document.getElementById("idDivStatoLoc").innerText=this.geocodingObject.enumStatoLoc[this.geocodingObject.statoLoc].value;
                 else
                 document.getElementById("idDivStatoLoc").innerText=this.geocodingObject.enumStatoLoc[this.statoLoc].value;
                 }  
                 else
                 {
                 document.getElementById("idDivStatoLoc").className="segnalazione_errore";
                 document.getElementById("idDivStatoLoc").innerText=this.geocodingObject.enumStatoLoc[this.statoLoc].value;
                 if (this.geocodingObject.statoLoc == '-9')
                 document.getElementById("idDivStatoLoc").innerText += " " +this.geocodingObject.parseKmString(this.geocodingObject.KmMin /1000 + "").sKmF + "; " + this.geocodingObject.parseKmString(this.geocodingObject.KmMax /1000 + "").sKmF;
                 }
                 }
                 }
                 catch(e) {}*/
            }

            /*if(this.geocodingObject.map.getLayer(this.geocodingObject.markers.id)==null){
             this.geocodingObject.map.addLayer(this.geocodingObject.markers);
             }
             this.geocodingObject.markers.clearMarkers();
             if(this.geocodingObject.popup!=null)
             this.geocodingObject.map.removePopup(this.geocodingObject.popup);
             AutoSizeFramedCloud=OpenLayers.Class(OpenLayers.Popup.FramedCloud,{
             'autoSize':true,
             'minSize':new OpenLayers.Size(200,130)
             });
             popupClass=AutoSizeFramedCloud;
             popupContentHTML=this.address;
             
             if (this.tipoLoc != '3')
             {
             if (this.x != null && this.y != null)
             {
             var coord = new OpenLayers.LonLat(this.x,this.y);
             }
             else
             {
             return;
             }
             }
             else
             {
             if (this.geocodingObject.x != null && this.geocodingObject.y != null)
             {
             var point = new Proj4js.Point(this.geocodingObject.x, this.geocodingObject.y);  
             //if (this.geocodingObject.sRif == "UTMRER" || this.geocodingObject.sRif == "UTMA") 
             //    point.y = point.y + 4000000;
             Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
             if (this.geocodingObject.map.CLASS_NAME == "Localizzatore.RERMap")
             {
             point.x = point.x - 0.00097;
             point.y = point.y - 0.00012;
             }
             var coord = new OpenLayers.LonLat(point.x,point.y);
             }
             else
             {
             var point = new Proj4js.Point(this.x, this.y);  
             Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
             if (this.geocodingObject.map.CLASS_NAME == "Localizzatore.RERMap")
             {
             point.x = point.x - 0.00097;
             point.y = point.y - 0.00012;
             }
             var coord = new OpenLayers.LonLat(point.x,point.y);
             }
             }
             if (this.geocodingObject.hasSalvaCoordinate)
             {
             var text = 'x: ' + coord.lon + '; y: ' + coord.lat;
             
             var context={
             geocodingObject:this.geocodingObject,
             text:text
             };
             var salvaBtn = document.getElementById("salvaBtn");
             salvaBtn.style.visibility = 'visible';
             OpenLayers.Event.observe(salvaBtn,"click",this.geocodingObject.salvaCoord.bind(context));
             }
             var feature=new OpenLayers.Feature(this.geocodingObject.markers,coord);
             feature.closeBox=true;
             feature.popupClass=popupClass;
             feature.data.popupContentHTML=popupContentHTML;
             feature.data.overflow="hidden";
             if (this.entitaId && this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
             {
             if (this.geocodingObject.statoLoc > 0)
             feature.data.icon=this.geocodingObject.resultIcon;
             else
             feature.data.icon=this.geocodingObject.searchIcon;
             }
             else 
             {
             if (this.statoLoc > 0)
             feature.data.icon=this.geocodingObject.resultIcon;
             else
             feature.data.icon=this.geocodingObject.searchIcon;
             }
             var marker=feature.createMarker();
             this.geocodingObject.markers.addMarker(marker);
             if(marker.popup==null){
             marker.popup=feature.createPopup(feature.closeBox);
             this.geocodingObject.popup=marker.popup;
             this.geocodingObject.map.addPopup(marker.popup);
             }
             marker.popup.hide();
             var markerClick=function(evt){popupContentHTML
             this.popup.toggle();
             OpenLayers.Event.stop(evt);
             };
             var context={
             reverseGeocodingObject:this.geocodingObject
             };
             marker.events.register("click",feature,markerClick);
             marker.events.register('dblclick',feature,this.geocodingObject.stopevent);
             marker.events.register('mousedown',feature,this.geocodingObject.stopevent);
             this.geocodingObject.map.zoomToExtent(new OpenLayers.Bounds(coord.lon-0.001, coord.lat-0.001, coord.lon+0.001, coord.lat+0.001));           
             document.body.style.cursor = 'auto';
             
             try {
             var top = document.getElementById("idDivStatoLoc").offsetTop; //Getting Y of target element
             window.scrollTo(0, top);   
             }
             catch(e) {}*/

        } catch (e)
        {
            document.body.style.cursor = 'auto';
        }
    },
    markAndGoToPoint: function () {
        if (this.geocodingObject.map.getLayer(this.geocodingObject.markers.id) == null) {
            this.geocodingObject.map.addLayer(this.geocodingObject.markers);
        }
        this.geocodingObject.markers.clearMarkers();
        if (this.geocodingObject.popup != null)
            this.geocodingObject.map.removePopup(this.geocodingObject.popup);
        AutoSizeFramedCloud = OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
            'autoSize': true,
            'minSize': new OpenLayers.Size(200, 130)
        });
        popupClass = AutoSizeFramedCloud;
        popupContentHTML = this.address;

        /*if (this.tipoLoc != '3')
         {
         if (this.x != null && this.y != null)
         {
         var coord = new OpenLayers.LonLat(this.x,this.y);
         }
         else if (this.geocodingObject != null && this.geocodingObject.x != null && this.geocodingObject.y != null)
         {
         var coord = new OpenLayers.LonLat(this.geocodingObject.x, this.geocodingObject.y);
         }
         else
         {
         return;
         }
         }
         else
         {*/
        if (this.geocodingObject != null && this.geocodingObject.x != null && this.geocodingObject.y != null)
        {
            var point = new Proj4js.Point(this.geocodingObject.x, this.geocodingObject.y);
            //if (this.geocodingObject.sRif == "UTMRER" || this.geocodingObject.sRif == "UTMA") 
            //    point.y = point.y + 4000000;
            Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
            if (this.geocodingObject.map.CLASS_NAME == "Localizzatore.RERMap")
            {
                point.x = point.x - 0.00097;
                point.y = point.y - 0.00012;
            }
            var coord = new OpenLayers.LonLat(point.x, point.y);
        } else
        {
            var point = new Proj4js.Point(this.x, this.y);
            Proj4js.transform(this.geocodingObject.src, this.geocodingObject.dst, point);
            if (this.geocodingObject.map.CLASS_NAME == "Localizzatore.RERMap")
            {
                point.x = point.x - 0.00097;
                point.y = point.y - 0.00012;
            }
            var coord = new OpenLayers.LonLat(point.x, point.y);
        }
        //}
        if (this.geocodingObject.hasSalvaCoordinate)
        {
            var text = 'x: ' + coord.lon + '; y: ' + coord.lat;

            var context = {
                geocodingObject: this.geocodingObject,
                text: text
            };
            var salvaBtn = document.getElementById("salvaBtn");
            salvaBtn.style.visibility = 'visible';
            OpenLayers.Event.observe(salvaBtn, "click", this.geocodingObject.salvaCoord.bind(context));
        }
        var feature = new OpenLayers.Feature(this.geocodingObject.markers, coord);
        feature.closeBox = true;
        feature.popupClass = popupClass;
        feature.data.popupContentHTML = popupContentHTML;
        feature.data.overflow = "hidden";
        if (this.entitaId && this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
        {
            if (this.geocodingObject.statoLoc > 0)
                feature.data.icon = this.geocodingObject.resultIcon;
            else
                feature.data.icon = this.geocodingObject.searchIcon;
        } else
        {
            if (this.statoLoc > 0)
                feature.data.icon = this.geocodingObject.resultIcon;
            else
                feature.data.icon = this.geocodingObject.searchIcon;
        }
        var marker = feature.createMarker();
        this.geocodingObject.markers.addMarker(marker);
        if (marker.popup == null) {
            marker.popup = feature.createPopup(feature.closeBox);
            this.geocodingObject.popup = marker.popup;
            this.geocodingObject.map.addPopup(marker.popup);
        }
        marker.popup.hide();
        var markerClick = function (evt) {
            popupContentHTML
            this.popup.toggle();
            OpenLayers.Event.stop(evt);
        };
        var context = {
            reverseGeocodingObject: this.geocodingObject
        };
        marker.events.register("click", feature, markerClick);
        marker.events.register('dblclick', feature, this.geocodingObject.stopevent);
        marker.events.register('mousedown', feature, this.geocodingObject.stopevent);
        this.geocodingObject.map.zoomToExtent(new OpenLayers.Bounds(coord.lon - 0.001, coord.lat - 0.001, coord.lon + 0.001, coord.lat + 0.001));
        document.body.style.cursor = 'auto';

        try {
            var top = document.getElementById("idDivStatoLoc").offsetTop; //Getting Y of target element
            window.scrollTo(0, top);
        } catch (e) {
        }
    },
    goToShowResult: function ()
    {
        if (this.sigla.trim().length > 0)
            var address = this.sigla + ' ' + this.denominazi + ', ' + this.geocodingObject.parseKmString(this.geocodingObject.Km / 1000 + '').sKmF;
        else
            var address = this.denominazi + ', ' + this.geocodingObject.parseKmString(this.geocodingObject.Km / 1000 + '').sKmF
        var comune = "Comune Generico";
        if (document.getElementById('comuneHidden') != null)
            comune = document.getElementById('comuneHidden').value.toUpperCase();
        var comune = comune;
        var provincia = this.provincia;
        var context = {
            x: this.x,
            y: this.y,
            tipoLoc: '3',
            statoLoc: this.geocodingObject.statoLoc,
            KmDaMappa: true,
            address: address,
            provincia: provincia,
            comune: comune,
            denominazione: this.denominazi,
            sigla: this.sigla,
            entitaId: this.id_entita,
            xInc: this.xInc,
            yInc: this.yInc,
            geocodingObject: this.geocodingObject
        };
        var showResultFunc = this.geocodingObject.showResult.bind(context);
        showResultFunc();
    },
    callJsonp: function (url, f) {
        return $.getJSON(url, {}, f).fail(function (jqXHR, textStatus, errorThrown) {
            alert("fail " + errorThrown + "; " + jqXHR + textStatus);
        });
    },
    setFieldsForChilometrica: function () {
        try {
            this.tipoLoc = '3';
            this.x = this.geocodingObject.x;
            this.y = this.geocodingObject.y;
            if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
                this.geocodingObject.statoLocalizzazioneHidden.value = this.geocodingObject.statoLoc;
            else
                this.geocodingObject.statoLocalizzazioneHidden.value = this.geocodingObject.statoLoc;
            this.geocodingObject.tipoLocalizzazioneHidden.value = '3';
            if (this.address != null)
            {
                if (this.sigla && this.sigla != null && this.sigla.length > 0)
                {
                    //denomStradaHidden.value = this.sigla + ' ' + this.denominazione.trim().toUpperCase();
                    this.geocodingObject.denomStradaHidden.value = this.denominazione.trim().toUpperCase();
                    this.geocodingObject.sigStradaHidden.value = this.sigla;
                } else
                    this.geocodingObject.denomStradaHidden.value = this.denominazione.trim().toUpperCase();
                this.geocodingObject.idStradaHidden.value = this.entitaId.trim();
                this.geocodingObject.localizzazioneHidden.value = this.address.toUpperCase();
                if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
                    this.geocodingObject.kmHidden.value = this.geocodingObject.Km / 1000;
                if (this.geocodingObject.x != null)
                    this.geocodingObject.XHidden.value = this.geocodingObject.x;
                if (this.geocodingObject.y != null)
                    this.geocodingObject.YHidden.value = this.geocodingObject.y;
                //riempio i campi di ricerca
                document.getElementById("toponimo1").value = this.geocodingObject.denomStradaHidden.value;
                document.getElementById("Km").value = this.geocodingObject.parseKmString(this.geocodingObject.kmHidden.value + "").sKmF2;


                document.getElementById("labelProvinciaDesc").innerText = this.provincia.trim();
                document.getElementById("labelProvinciaDesc").style.fontWeight = 'bold';
                document.getElementById("labelComuneDesc").innerText = this.comune.trim();
                document.getElementById("labelComuneDesc").style.fontWeight = 'bold';
                document.getElementById("labelLocalizzazioneDesc").innerText = this.geocodingObject.localizzazioneHidden.value;
                document.getElementById("labelEsitoLoc").style.visibility = 'visible';
                document.getElementById("labelLocalizzazioneDesc").style.fontWeight = 'bold';
                document.getElementById("labelLocalizzazioneDesc").style.visibility = 'visible';
                if (this.geocodingObject.statoLoc == "1" ||
                        this.geocodingObject.statoLoc == "2" ||
                        this.geocodingObject.statoLoc == "3" ||
                        this.geocodingObject.statoLoc == "4" ||
                        this.geocodingObject.statoLoc == "5")
                {
                    document.getElementById("idDivStatoLoc").className = "legenda_obblig obblig";
                    this.geocodingObject.checkComune(new Proj4js.Point(this.geocodingObject.XHidden.value, this.geocodingObject.YHidden.value), this.comune, this.entitaId, this.showResultFunc);
                    /*if (this.geocodingObject.comuneLoc != this.comune && this.geocodingObject.hasCheckComune)
                     {
                     this.geocodingObject.statoLoc = '-22';
                     document.getElementById("idDivStatoLoc").className="segnalazione_errore";
                     }
                     if (this.entitaId.lastIndexOf('RT') + 2 == this.entitaId.length)
                     document.getElementById("idDivStatoLoc").innerText=this.geocodingObject.enumStatoLoc[this.geocodingObject.statoLoc].value;
                     else
                     document.getElementById("idDivStatoLoc").innerText=this.geocodingObject.enumStatoLoc[this.statoLoc].value;*/
                } else
                {
                    document.getElementById("idDivStatoLoc").className = "segnalazione_errore";
                    document.getElementById("idDivStatoLoc").innerText = this.geocodingObject.enumStatoLoc[this.statoLoc].value;
                    if (this.geocodingObject.statoLoc == '-9')
                        document.getElementById("idDivStatoLoc").innerText += " " + this.geocodingObject.parseKmString(this.geocodingObject.KmMin / 1000 + "").sKmF + "; " + this.geocodingObject.parseKmString(this.geocodingObject.KmMax / 1000 + "").sKmF;
                }
            }
            var markAndGoToPointFunc = this.geocodingObject.markAndGoToPoint.bind(this.showResultFunc);
            markAndGoToPointFunc();
        } catch (e) {
            var markAndGoToPointFunc = this.geocodingObject.markAndGoToPoint.bind(this.showResultFunc);
            markAndGoToPointFunc();
        }
    },
    resetCampiHidden: function () {
        //var provinciaHidden = document.getElementById("provinciaHidden");
        //var comuneHidden = document.getElementById("comuneHidden");
        var denomStradaHidden = document.getElementById("denomStradaHidden");
        var denomStrada2Hidden = document.getElementById("denomStrada2Hidden");
        var numCivicoHidden = document.getElementById("numCivicoHidden");
        var subCivicoHidden = document.getElementById("subCivicoHidden");
        var kmHidden = document.getElementById("kmHidden");
        var sigStradaHidden = document.getElementById("sigStradaHidden");
        var numeroStradaHidden = document.getElementById("numeroStradaHidden");
        var XHidden = document.getElementById("XHidden");
        var YHidden = document.getElementById("YHidden");
        var statoLocalizzazioneHidden = document.getElementById("statoLocalizzazioneHidden");
        var tipoLocalizzazioneHidden = document.getElementById("tipoLocalizzazioneHidden");
        var idStradaHidden = document.getElementById("idStradaHidden");
        var idCivicoHidden = document.getElementById("idCivicoHidden");
        var idStrada2Hidden = document.getElementById("idStrada2Hidden");
        var idNodoHidden = document.getElementById("idNodoHidden");
        var localizzazioneHidden = document.getElementById("localizzazioneHidden");
        var provinciaLocHidden = document.getElementById("provinciaLocHidden");
        var comuneLocHidden = document.getElementById("comuneLocHidden");

        try {
            //provinciaHidden.value="";
            //comuneHidden.value="";
            denomStradaHidden.value = "";
            denomStrada2Hidden.value = "";
            numCivicoHidden.value = "";
            subCivicoHidden.value = "";
            sigStradaHidden.value = "";
            numeroStradaHidden.value = "";
            kmHidden.value = "";
            XHidden.value = "";
            YHidden.value = "";
            statoLocalizzazioneHidden.value = "";
            tipoLocalizzazioneHidden.value = "";
            idStradaHidden.value = "";
            idCivicoHidden.value = "";
            idStrada2Hidden.value = "";
            idNodoHidden.value = "";
            localizzazioneHidden.value = "";
            provinciaLocHidden.value = "";
            comuneLocHidden.value = "";
        } catch (e) {
        }
    },
    calcolaStAmm: function (sSigla) {
        var iAbitato = null;
        var selectAbitato = document.getElementById("selectAbitato");
        if (selectAbitato != 'undefined')
        {
            iAbitato = selectAbitato.options[selectAbitato.selectedIndex].value;
        }

        if (sSigla == null)
            return null;
        else
        {
            if (sSigla.substring(0, 2) == 'SP')
                return "SP";
            else if (sSigla.substring(0, 2) == 'SS')
                return "SS";
            else if (sSigla.substring(0, 2) == 'AA' || sSigla.substring(0, 1) == 'A')
                return "AA";
            else if (sSigla.substring(0, 2) == 'TG')
                return "TG";
            else
                return null;
        }
    },
    calcolaNumeroStrada: function (fromSigla) {
        if (fromSigla)
        {
            var sSigla = null;
            var iAbitato = null;
            var siglaHidden = document.getElementById("sigStradaHidden");
            if (siglaHidden != 'undefined' && siglaHidden != null && siglaHidden.value != 'undefined' && siglaHidden.value != null && siglaHidden.value.length > 0)
                sSigla = siglaHidden.value;
            var selectAbitato = document.getElementById("selectAbitato");
            if (selectAbitato != 'undefined')
            {
                iAbitato = selectAbitato.options[selectAbitato.selectedIndex].value;
            }

            if (sSigla == null || sSigla.length() <= 0)
                return null;
            else
            {
                cTipo = sSigla.charAt(0);
                if (cTipo == 'A' || cTipo == 'R' || cTipo == 'T')
                {
                    return sSigla;
                }
                // qui, sSigla deve essere un numero
                if (iAbitato == null)
                    return sSigla;
                switch (parseInt(iAbitato))
                {
                    case 0:
                    case 9:
                        sSigla = sSigla.replace("SR", "").trim();
                    case 2:
                    case 5:
                        sSigla = sSigla.replace("SP", "").trim();
                    case 3:
                    case 6:
                        sSigla = sSigla.replace("SS", "").trim();
                    default:
                        sSigla = sSigla.trim();

                        if (sSigla.length() == 1)
                            sSigla = "00" + sSigla;
                        else if (sSigla.length() == 2)
                            sSigla = "0" + sSigla;

                        return sSigla;
                }
            }
        } else
        {
            var sSigla = null;
            var iAbitato = null;
            var sNumeroStrada = null;

            var numeroStradaHidden = document.getElementById("numeroStradaHidden");
            if (numeroStradaHidden != 'undefined' && numeroStradaHidden != null && numeroStradaHidden.value != 'undefined' && numeroStradaHidden.value != null && numeroStradaHidden.value.length > 0)
                sNumeroStrada = numeroStradaHidden.value;

            if (iAbitato == null)
            {
                return sNumeroStrada;
            }
            switch (iAbitato.intValue())
            {
                case 0:
                case 9:
                    sSigla = "SR " + sNumeroStrada.trim();
                    break;
                case 2:
                case 5:
                    sSigla = "SP " + sNumeroStrada.trim();
                    break;
                case 3:
                case 6:
                    sSigla = "SS " + sNumeroStrada.trim();
                    break;
                default:
                    sSigla = sNumeroStrada.trim();
                    break;
            }
            if (sSigla.length() == 1)
                sSigla = "00" + sSigla;
            else if (sSigla.length() == 2)
                sSigla = "0" + sSigla;

            if (sNumeroStrada.length() == 1)
                sNumeroStrada = "00" + sNumeroStrada;
            else if (sNumeroStrada.length() == 2)
                sNumeroStrada = "0" + sNumeroStrada;
            return sNumeroStrada;
        }
    },
    abilitaNumeroStrada: function (inputNumeroStrada) {
        var selectAbitato = document.getElementById("selectAbitato");
        if (selectAbitato != null && selectAbitato != 'undefined')
        {
            var iAbitato = selectAbitato.value;
            switch (parseInt(iAbitato))
            {
                case 2:
                case 3:
                case 5:
                case 6:
                case 9:
                    inputNumeroStrada.readOnly = false;
                    break;
                case 1:
                case 4:
                case 7:
                case 8:
                    inputNumeroStrada.readOnly = true;
                    break;
                default:
                    inputNumeroStrada.readOnly = false;
                    break;
            }
        }
    },
    getDescProvincia: function (codpro) {
        switch (codpro)
        {
            case "033":
                return "PIACENZA";
                break;
            case "034":
                return "PARMA";
                break;
            case "035":
                return "REGGIO EMILIA";
                break;
            case "036":
                return "MODENA";
                break;
            case "037":
                return "BOLOGNA";
                break;
            case "038":
                return "FERRARA";
                break;
            case "039":
                return "RAVENNA";
                break;
            case "040":
                return "FORLI\' - CESENA";
                break;
            case "099":
                return "RIMINI";
                break;
            default:
                return null;

        }
    },
    handleMapClick: function () {
        var lonlat = map.getLonLatFromViewPortPx(e.xy);
        // use lonlat

        // If you are using OpenStreetMap (etc) tiles and want to convert back 
        // to gps coords add the following line :-
        // lonlat.transform( map.projection,map.displayProjection);

        // Longitude = lonlat.lon
        // Latitude  = lonlat.lat
    },
    reset: function () {
        this.markers.clearMarkers();
        if (this.popup != null)
            this.map.removePopup(this.popup);
        if (this.map.getLayer(this.markers.id) != null) {
            this.map.removeLayer(this.markers);
        }
    },
    stopevent: function (evt) {
        OpenLayers.Event.stop(evt, true);
    },
    CLASS_NAME: "Localizzatore.Control.Localizzazione"
});
Localizzatore.Map = Localizzatore.Class(GeoER.Map, {
    CLASS_NAME: "Localizzatore.Map"
});
Localizzatore.Control.ZoomBox = Localizzatore.Class(GeoER.Control.ZoomBox, {
    CLASS_NAME: "Localizzatore.Control.ZoomBox"
});
Localizzatore.Layer = Localizzatore.Class({
    CLASS_NAME: "Localizzatore.Layer"
});
Localizzatore.Layer.Markers = Localizzatore.Class(GeoER.Layer.Markers, {
    CLASS_NAME: "Localizzatore.Layer.Markers"
});
Localizzatore.Control.ToolTips = Localizzatore.Class(GeoER.Control, {
    CLASS_NAME: "Localizzatore.Control.ToolTips"
});
Localizzatore.RERMap_Stradario_UTMA = Localizzatore.Class(GeoER.RERMap_Stradario_UTMA, {
    CLASS_NAME: "Localizzatore.RERMap_Stradario_UTMA"
});
Localizzatore.Control.LayerSwitcher = Localizzatore.Class(GeoER.Control.LayerSwitcher, {
    CLASS_NAME: "Localizzatore.Control.LayerSwitcher"
});
Localizzatore.Control.ZoomBar = Localizzatore.Class(GeoER.Control.ZoomBar, {
    CLASS_NAME: "Localizzatore.Control.ZoomBar"
});
Localizzatore.Control.KeyboardDefaults = Localizzatore.Class(GeoER.Control.KeyboardDefaults, {
    CLASS_NAME: "Localizzatore.Control.KeyboardDefaults"
});
Localizzatore.Control.MousePosition = Localizzatore.Class(GeoER.Control.MousePosition, {
    CLASS_NAME: "Localizzatore.Control.MousePosition"
});

Localizzatore.Control.ScaleBar = Localizzatore.Class(GeoER.Control.ScaleBar, {
    CLASS_NAME: "Localizzatore.Control.ScaleBar"
});
Localizzatore.Control.Panel = Localizzatore.Class(GeoER.Control.Panel, {
    CLASS_NAME: "Localizzatore.Control.Panel"
});

Localizzatore.RERMap = Localizzatore.Class(GeoER.RERMap, {
    CLASS_NAME: "Localizzatore.RERMap"
});
Localizzatore.LiguriaMap = Localizzatore.Class(GeoER.LiguriaMap, {
    CLASS_NAME: "Localizzatore.LiguriaMap"
});
Localizzatore.Control.ZoomToMaxExtent = Localizzatore.Class(GeoER.Control.ZoomToMaxExtent, {
    CLASS_NAME: "Localizzatore.Control.ZoomToMaxExtent"
});
Localizzatore.Control.OverviewMap = Localizzatore.Class(GeoER.Control.OverviewMap, {
    CLASS_NAME: 'Localizzatore.Control.OverviewMap'
});
Localizzatore.LiguriaMap = Localizzatore.Class(GeoER.LiguriaMap, {
    CLASS_NAME: "Localizzatore.LiguriaMap"
});
Localizzatore.Control.LoadingPanel = Localizzatore.Class(GeoER.Control.LoadingPanel, {
    CLASS_NAME: "Localizzatore.Control.LoadingPanel"
});
Localizzatore.Layer.WMS = Localizzatore.Class(GeoER.Layer.WMS, {
    CLASS_NAME: "Localizzatore.Layer.WMS"
});
Localizzatore.Util = Localizzatore.Util || {};
Localizzatore.ImgPath = '';
Localizzatore.Util.getImagesLocation = function () {
    return Localizzatore.ImgPath || (Localizzatore._getScriptLocation() + "img/");
};
Localizzatore.Util.degfromdms = function (gg, pp, ss) {
    if (gg > 360) {
        return'0.000'
    }
    if (pp > 60) {
        return('0.000')
    }
    if (ss > 60) {
        return('0.000')
    }
    dd = eval(gg) + eval(pp / 60) + eval(ss / 3600);
    return(dd);
};
Localizzatore.Util.ggfromdeg = function (dd) {
    gg = Math.floor(dd);
    if (gg > 360)
        return('0');
    return(gg);
};
Localizzatore.Util.ppfromdeg = function (dd, gg) {
    pp = eval(dd) - eval(gg);
    pp = Math.floor(pp * 60);
    return(pp);
};
Localizzatore.Util.ssfromdeg = function (dd, gg, pp) {
    pp = eval(dd) - eval(gg);
    pp = Math.floor(pp * 60);
    ss = eval(dd) - eval(gg) - pp / 60;
    ss = Math.floor(ss * 3600);
    return(ss);
};
Localizzatore.RERMap_ETRS89_UTM32 = Localizzatore.Class(GeoER.RERMap_ETRS89_UTM32, {
    CLASS_NAME: "Localizzatore.RERMap_ETRS89_UTM32"
});
Localizzatore.Lang.en = {
    'satellite': "Satellite",
    'streets': "Streets",
    'both': "Both",
    'WG84': 'WGS 1984, EPSG:4326',
    'WG84_UTM32': 'WGS 1984 UTM Zone 32N, EPSG:32632',
    'WG84_UTM33': 'WGS 1984 UTM Zone 33N, EPSG:32633',
    'UTMRER': 'UTMRER',
    'UTMA': 'UTMA',
    'MM_GREENWICH': 'Monte Mario, EPSG:4265',
    'MM_ITALY1': 'Monte Mario Italy 1, EPSG:3003',
    'MM_ITALY2': 'Monte Mario Italy 2, EPSG:3004',
    'MM_ROME': 'Monte Mario (Rome), EPSG:4806',
    'ED50': 'European Datum 1950, EPSG:4230',
    'ED50_UTM32': 'European Datum 1950 UTM Zone 32N, EPSG:23032',
    'ED50_UTM33': 'European Datum 1950 UTM Zone 33N, EPSG:23033',
    'ETRS89': 'ETRS 1989, EPSG:4258',
    'ETRS89_UTM32': 'ETRS 1989 UTM Zone 32N, EPSG:25832',
    'ETRS89_UTM33': 'ETRS 1989 UTM Zone 33N, EPSG:25833',
    'ctsLegendText': 'Coordinate Transformation Service',
    'convertFromText': 'Convert from:',
    'convertToText': 'Convert to:',
    'sessadecimal': 'Sessadecimal',
    'sessagesimal': 'Sessagesimal',
    'longitude': 'Longitude:',
    'latitude': 'Latitude:',
    'transform': 'Transform',
    'validNumber': 'Insert a valid number (eg: 122.02)',
    'noSrsOut': 'Select almost one output spatial reference system',
    'ctsError': 'Error while performing the request',
    'longitudeLabel': 'Longitude',
    'latitudeLabel': 'Latitude',
    'eastLabel': 'East',
    'northLabel': 'Nord',
    'localizzazioneLegendText': "Localizzazione",
    'geocodingLegendText': "Location",
    'geocodingSearch': "Search",
    'noAddress': 'Insert an address to search',
    'geocodingResults': 'Results:',
    'geocodingNoResults': 'No results found',
    'geocodingError': 'Error while performing the request',
    'geocodingTextExample': 'i.e.: Viale Silvani 4/3, bologna, bo',
    'reversegeocodingLegendText': "Reverse Geocoding",
    'reversegeocodingSelect': "Select the point on the map",
    'reversegeocodingError': 'Error while performing the request',
    'reversegeocodingNoResults': 'No results found',
    'baseLayer': "Base Layer",
    'overlays': "Overlays",
    'license': "Licenses",
    'licenseNoLayers': 'No layers (with license associated) available',
    'download': "Download Layers",
    'downloadNoLayers': 'No layers available to download',
    'downloadTextLayers': 'Select Layers',
    'downloadTextArea': 'Select Area',
    'downloadTextSRSChoose': 'Select Output SRS',
    'downloadTextDownload': 'Download',
    'downloadTextVectorLayers': 'Vector',
    'downloadTextRasterLayers': 'Raster',
    'selectArea': 'Select from list',
    'drawArea': 'Draw custom polygon',
    'downloadTextSelectProvince': 'Select province area:',
    'downloadTextSelectMunicipality': 'Select municipality area:',
    'downloadTextEmail': 'E-Mail: ',
    'downloadNoSelection': 'No selection',
    'downloadAllProvince': 'All province',
    'downloadLabelPolygonType': 'Select polygon type:',
    'downloadRegularPolygon': 'Regular',
    'downloadIrregularPolygon': 'Irregular',
    'downloadLabelPolygonShape': 'Select polygon shape:',
    'downloadShapeCircle': 'Circle',
    'downloadShapeHexagon': 'Hexagon',
    'downloadShapePentagon': 'Pentagon',
    'downloadShapeSquare': 'Square',
    'downloadShapeTriangle': 'Triangle',
    'downloadExecute': 'Download',
    'downloadNotImplemented': 'Service not implemented yet',
    'downloadNoArea': 'No valid area selected',
    'downloadNoOutputSRS': 'No output SRS selected',
    'downloadNoValidEmail': 'No valid email address',
    'downloadBadResolution': 'No valid resolution',
    'downloadError': 'Error while performing the request',
    'downloadSuccess': 'Request successfully sent...You will receive an email at the end of the process'
};
Localizzatore.Lang.it = {
    'satellite': "Satellite",
    'streets': "Stradario",
    'both': "Mista",
    'WG84': 'WGS 1984, EPSG:4326',
    'WG84_UTM32': 'WGS 1984 UTM Zona 32N, EPSG:32632',
    'WG84_UTM33': 'WGS 1984 UTM Zona 33N, EPSG:32633',
    'UTMRER': 'UTMRER',
    'UTMA': 'UTMA',
    'MM_GREENWICH': 'Monte Mario, EPSG:4265',
    'MM_ITALY1': 'Monte Mario Italia 1, EPSG:3003',
    'MM_ITALY2': 'Monte Mario Italia 2, EPSG:3004',
    'MM_ROME': 'Monte Mario (Roma), EPSG:4806',
    'ED50': 'Datum Europeo 1950, EPSG:4230',
    'ED50_UTM32': 'Datum Europeo 1950 UTM Zona 32N, EPSG:23032',
    'ED50_UTM33': 'Datum Europeo 1950 UTM Zona 33N, EPSG:23033',
    'ETRS89': 'ETRS 1989, EPSG:4258',
    'ETRS89_UTM32': 'ETRS 1989 UTM Zona 32N, EPSG:25832',
    'ETRS89_UTM33': 'ETRS 1989 UTM Zona 33N, EPSG:25833',
    'ctsLegendText': 'Servizio di Conversione delle Coordinate',
    'convertFromText': 'Converti da:',
    'convertToText': 'Converti in:',
    'sessadecimal': 'Sessadecimali',
    'sessagesimal': 'Sessagesimali',
    'longitude': 'Longitudine:',
    'latitude': 'Latitudine:',
    'transform': 'Trasforma',
    'validNumber': 'Inserire valori numerici validi (es: 122.02)',
    'noSrsOut': 'Selezionare un sistema di riferimento di output',
    'ctsError': 'Errore durante l\'elaborazione della richiesta',
    'longitudeLabel': 'Longitudine',
    'latitudeLabel': 'Latitudine',
    'eastLabel': 'Est',
    'northLabel': 'Nord',
    'localizzazioneLegendText': "Localizzazione",
    'geocodingLegendText': "Geocodifica",
    'geocodingSearch': "Cerca",
    'noAddress': 'Inserire un indirizzo da ricercare',
    'geocodingResults': 'Risultati:',
    'geocodingNoResults': 'La ricerca non ha prodotto nessun risultato',
    'geocodingError': 'Errore durante l\'elaborazione della richiesta',
    'geocodingTextExample': 'esempio: Viale Silvani 4/3, bologna, bo',
    'reversegeocodingLegendText': "Geocodifica Inversa",
    'reversegeocodingSelect': "Cliccare un punto sulla mappa",
    'reversegeocodingError': 'Errore durante l\'elaborazione della richiesta',
    'reversegeocodingNoResults': 'La ricerca non ha prodotto nessun risultato',
    'baseLayer': "Strati di Base",
    'overlays': "Altri Strati",
    'license': "Licenze",
    'licenseNoLayers': 'Non ci sono strati cartografici con licenza disponibile',
    'download': "Download Strati Cartografici",
    'downloadNoLayers': 'Non ci sono strati cartografici da scaricare',
    'downloadTextLayers': 'Selezione Strati Cartografici',
    'downloadTextArea': 'Selezione Area',
    'downloadTextSRSChoose': 'Selezione Sistema di Riferimento di Output',
    'downloadTextDownload': 'Download',
    'downloadTextVectorLayers': 'Vettoriali',
    'downloadTextRasterLayers': 'Raster',
    'selectArea': 'Scegli area predefinita',
    'drawArea': 'Disegna area personalizzata',
    'downloadTextSelectProvince': 'Seleziona una provincia:',
    'downloadTextSelectMunicipality': 'Seleziona un comune:',
    'downloadTextEmail': 'E-Mail: ',
    'downloadNoSelection': 'Nessuna selezione',
    'downloadAllProvince': 'Tutte le province',
    'downloadLabelPolygonType': 'Seleziona il tipo di poligono:',
    'downloadRegularPolygon': 'Regolare',
    'downloadIrregularPolygon': 'Irregolare',
    'downloadLabelPolygonShape': 'Seleziona la forma:',
    'downloadShapeCircle': 'Cerchio',
    'downloadShapeHexagon': 'Esagono',
    'downloadShapePentagon': 'Pentagono',
    'downloadShapeSquare': 'Quadrato',
    'downloadShapeTriangle': 'Triangolo',
    'downloadExecute': 'Avvia Download',
    'downloadNotImplemented': 'Servizio non ancora supportato',
    'downloadNoArea': 'Selezionare l\'area da scaricare',
    'downloadNoOutputSRS': 'Selezionare un sistema di riferimento di output',
    'downloadNoValidEmail': 'Inserire un indirizzo email corretto',
    'downloadBadResolution': 'Inserire valori di risoluzione corretti',
    'downloadError': 'Errore durante l\'elaborazione della richiesta',
    'downloadSuccess': 'Trasformazione avviata correttamente...Al termine riceverai una email.'
};
